["```py\n$ nvidia-smi\n\nFri Oct  7 13:01:26 2022\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|===============================+======================+======================|\n|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n| N/A   56C    P8    10W /  70W |      0MiB / 15109MiB |      0%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Processes:                                                                  |\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n|        ID   ID                                                   Usage      |\n|=============================================================================|\n|  No running processes found                                                 |\n+-----------------------------------------------------------------------------+ \n```", "```py\ngit  clone  https://git.videolan.org/git/ffmpeg/nv-codec-headers.git\ncd  nv-codec-headers\ngit  checkout  n11.0.10.1\nsudo  make  install \n```", "```py\nCloning into 'nv-codec-headers'...\nremote: Enumerating objects: 819, done.\nremote: Counting objects: 100% (819/819), done.\nremote: Compressing objects: 100% (697/697), done.\nremote: Total 819 (delta 439), reused 0 (delta 0)\nReceiving objects: 100% (819/819), 156.42 KiB | 410.00 KiB/s, done.\nResolving deltas: 100% (439/439), done.\nNote: checking out 'n11.0.10.1'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b <new-branch-name>\n\nHEAD is now at 315ad74 add cuMemcpy\nsed 's#@@PREFIX@@#/usr/local#' ffnvcodec.pc.in > ffnvcodec.pc\ninstall -m 0755 -d '/usr/local/include/ffnvcodec'\ninstall -m 0644 include/ffnvcodec/*.h '/usr/local/include/ffnvcodec'\ninstall -m 0755 -d '/usr/local/lib/pkgconfig'\ninstall -m 0644 ffnvcodec.pc '/usr/local/lib/pkgconfig' \n```", "```py\nsudo  apt  -qq  update\nsudo  apt  -qq  install  -y  yasm  libx264-dev  libgnutls28-dev \n```", "```py\n... Omitted for brevity ...\n\nSTRIP   install-libavutil-shared\nSetting up libx264-dev:amd64 (2:0.152.2854+gite9a5903-2) ...\nSetting up yasm (1.3.0-2build1) ...\nSetting up libunbound2:amd64 (1.6.7-1ubuntu2.5) ...\nSetting up libp11-kit-dev:amd64 (0.23.9-2ubuntu0.1) ...\nSetting up libtasn1-6-dev:amd64 (4.13-2) ...\nSetting up libtasn1-doc (4.13-2) ...\nSetting up libgnutlsxx28:amd64 (3.5.18-1ubuntu1.6) ...\nSetting up libgnutls-dane0:amd64 (3.5.18-1ubuntu1.6) ...\nSetting up libgnutls-openssl27:amd64 (3.5.18-1ubuntu1.6) ...\nSetting up libgmpxx4ldbl:amd64 (2:6.1.2+dfsg-2) ...\nSetting up libidn2-dev:amd64 (2.0.4-1.1ubuntu0.2) ...\nSetting up libidn2-0-dev (2.0.4-1.1ubuntu0.2) ...\nSetting up libgmp-dev:amd64 (2:6.1.2+dfsg-2) ...\nSetting up nettle-dev:amd64 (3.4.1-0ubuntu0.18.04.1) ...\nSetting up libgnutls28-dev:amd64 (3.5.18-1ubuntu1.6) ...\nProcessing triggers for man-db (2.8.3-2ubuntu0.1) ...\nProcessing triggers for libc-bin (2.27-3ubuntu1.6) ... \n```", "```py\nwget  -q  https://github.com/FFmpeg/FFmpeg/archive/refs/tags/n4.4.2.tar.gz\ntar  -xf  n4.4.2.tar.gz\ncd  FFmpeg-n4.4.2 \n```", "```py\nprefix=/usr/\nccap=75\n\n./configure  \\\n  --prefix=\"${prefix}\"  \\\n  --extra-cflags='-I/usr/local/cuda/include'  \\\n  --extra-ldflags='-L/usr/local/cuda/lib64'  \\\n  --nvccflags=\"-gencode arch=compute_${ccap},code=sm_${ccap} -O2\"  \\\n  --disable-doc  \\\n  --enable-decoder=aac  \\\n  --enable-decoder=h264  \\\n  --enable-decoder=h264_cuvid  \\\n  --enable-decoder=rawvideo  \\\n  --enable-indev=lavfi  \\\n  --enable-encoder=libx264  \\\n  --enable-encoder=h264_nvenc  \\\n  --enable-demuxer=mov  \\\n  --enable-muxer=mp4  \\\n  --enable-filter=scale  \\\n  --enable-filter=testsrc2  \\\n  --enable-protocol=file  \\\n  --enable-protocol=https  \\\n  --enable-gnutls  \\\n  --enable-shared  \\\n  --enable-gpl  \\\n  --enable-nonfree  \\\n  --enable-cuda-nvcc  \\\n  --enable-libx264  \\\n  --enable-nvenc  \\\n  --enable-cuvid  \\\n  --enable-nvdec \n```", "```py\ninstall prefix            /usr/\nsource path               .\nC compiler                gcc\nC library                 glibc\nARCH                      x86 (generic)\nbig-endian                no\nruntime cpu detection     yes\nstandalone assembly       yes\nx86 assembler             yasm\nMMX enabled               yes\nMMXEXT enabled            yes\n3DNow! enabled            yes\n3DNow! extended enabled   yes\nSSE enabled               yes\nSSSE3 enabled             yes\nAESNI enabled             yes\nAVX enabled               yes\nAVX2 enabled              yes\nAVX-512 enabled           yes\nXOP enabled               yes\nFMA3 enabled              yes\nFMA4 enabled              yes\ni686 features enabled     yes\nCMOV is fast              yes\nEBX available             yes\nEBP available             yes\ndebug symbols             yes\nstrip symbols             yes\noptimize for size         no\noptimizations             yes\nstatic                    no\nshared                    yes\npostprocessing support    no\nnetwork support           yes\nthreading support         pthreads\nsafe bitstream reader     yes\ntexi2html enabled         no\nperl enabled              yes\npod2man enabled           yes\nmakeinfo enabled          no\nmakeinfo supports HTML    no\n\nExternal libraries:\nalsa                    libx264                 lzma\nbzlib                   libxcb                  zlib\ngnutls                  libxcb_shape\niconv                   libxcb_xfixes\n\nExternal libraries providing hardware acceleration:\ncuda                    cuvid                   nvenc\ncuda_llvm               ffnvcodec               v4l2_m2m\ncuda_nvcc               nvdec\n\nLibraries:\navcodec                 avformat                swscale\navdevice                avutil\navfilter                swresample\n\nPrograms:\nffmpeg                  ffprobe\n\nEnabled decoders:\naac                     hevc                    rawvideo\nav1                     mjpeg                   vc1\nh263                    mpeg1video              vp8\nh264                    mpeg2video              vp9\nh264_cuvid              mpeg4\n\nEnabled encoders:\nh264_nvenc              libx264\n\nEnabled hwaccels:\nav1_nvdec               mpeg1_nvdec             vp8_nvdec\nh264_nvdec              mpeg2_nvdec             vp9_nvdec\nhevc_nvdec              mpeg4_nvdec             wmv3_nvdec\nmjpeg_nvdec             vc1_nvdec\n\nEnabled parsers:\nh263                    mpeg4video              vp9\n\nEnabled demuxers:\nmov\n\nEnabled muxers:\nmov                     mp4\n\nEnabled protocols:\nfile                    tcp\nhttps                   tls\n\nEnabled filters:\naformat                 hflip                   transpose\nanull                   null                    trim\natrim                   scale                   vflip\nformat                  testsrc2\n\nEnabled bsfs:\naac_adtstoasc           null                    vp9_superframe_split\nh264_mp4toannexb        vp9_superframe\n\nEnabled indevs:\nlavfi\n\nEnabled outdevs:\n\nLicense: nonfree and unredistributable \n```", "```py\nmake  clean\nmake  -j\nsudo  make  install \n```", "```py\n... Omitted for brevity ...\n\nINSTALL libavdevice/libavdevice.so\nINSTALL libavfilter/libavfilter.so\nINSTALL libavformat/libavformat.so\nINSTALL libavcodec/libavcodec.so\nINSTALL libswresample/libswresample.so\nINSTALL libswscale/libswscale.so\nINSTALL libavutil/libavutil.so\nINSTALL install-progs-yes\nINSTALL ffmpeg\nINSTALL ffprobe \n```", "```py\nffprobe  -hide_banner  -decoders  |  grep  h264 \n```", "```py\nVFS..D h264                 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\nV..... h264_cuvid           Nvidia CUVID H264 decoder (codec h264) \n```", "```py\nffmpeg  -hide_banner  -encoders  |  grep  264 \n```", "```py\nV..... libx264              libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (codec h264)\nV....D h264_nvenc           NVIDIA NVENC H.264 encoder (codec h264) \n```", "```py\n$  src=\"https://download.pytorch.org/torchaudio/tutorial-assets/stream-api/NASAs_Most_Scientifically_Complex_Space_Observatory_Requires_Precision-MP4_small.mp4\"\n\n$  ffmpeg  -hide_banner  -y  -vsync  0  \\\n  -hwaccel  cuvid  \\\n  -hwaccel_output_format  cuda  \\\n  -c:v  h264_cuvid  \\\n  -resize  360x240  \\\n  -i  \"${src}\"  \\\n  -c:a  copy  \\\n  -c:v  h264_nvenc  \\\n  -b:v  5M  test.mp4 \n```", "```py\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from 'https://download.pytorch.org/torchaudio/tutorial-assets/stream-api/NASAs_Most_Scientifically_Complex_Space_Observatory_Requires_Precision-MP4_small.mp4':\n  Metadata:\n    major_brand     : mp42\n    minor_version   : 512\n    compatible_brands: mp42iso2avc1mp41\n    encoder         : Lavf58.76.100\n  Duration: 00:03:26.04, start: 0.000000, bitrate: 1294 kb/s\n  Stream #0:0(eng): Video: h264 (High) (avc1 / 0x31637661), yuv420p(tv, bt709), 960x540 [SAR 1:1 DAR 16:9], 1156 kb/s, 29.97 fps, 29.97 tbr, 30k tbn, 59.94 tbc (default)\n    Metadata:\n      handler_name    : ?Mainconcept Video Media Handler\n      vendor_id       : [0][0][0][0]\n  Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 128 kb/s (default)\n    Metadata:\n      handler_name    : #Mainconcept MP4 Sound Media Handler\n      vendor_id       : [0][0][0][0]\nStream mapping:\n  Stream #0:0 -> #0:0 (h264 (h264_cuvid) -> h264 (h264_nvenc))\n  Stream #0:1 -> #0:1 (copy)\nPress [q] to stop, [?] for help\nOutput #0, mp4, to 'test.mp4':\n  Metadata:\n    major_brand     : mp42\n    minor_version   : 512\n    compatible_brands: mp42iso2avc1mp41\n    encoder         : Lavf58.76.100\n  Stream #0:0(eng): Video: h264 (Main) (avc1 / 0x31637661), cuda(tv, bt709, progressive), 360x240 [SAR 1:1 DAR 3:2], q=2-31, 5000 kb/s, 29.97 fps, 30k tbn (default)\n    Metadata:\n      handler_name    : ?Mainconcept Video Media Handler\n      vendor_id       : [0][0][0][0]\n      encoder         : Lavc58.134.100 h264_nvenc\n    Side data:\n      cpb: bitrate max/min/avg: 0/0/5000000 buffer size: 10000000 vbv_delay: N/A\n  Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 128 kb/s (default)\n    Metadata:\n      handler_name    : #Mainconcept MP4 Sound Media Handler\n      vendor_id       : [0][0][0][0]\nframe= 6175 fps=1712 q=11.0 Lsize=   37935kB time=00:03:26.01 bitrate=1508.5kbits/s speed=57.1x\nvideo:34502kB audio:3234kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.526932% \n```", "```py\nfrom torchaudio.utils import ffmpeg_utils\n\nprint(\"Library versions:\")\nprint(ffmpeg_utils.get_versions())\nprint(\"\\nBuild config:\")\nprint(ffmpeg_utils.get_build_config())\nprint(\"\\nDecoders:\")\nprint([k for k in ffmpeg_utils.get_video_decoders().keys() if \"cuvid\" in k])\nprint(\"\\nEncoders:\")\nprint([k for k in ffmpeg_utils.get_video_encoders().keys() if \"nvenc\" in k]) \n```", "```py\nLibrary versions:\n{'libavutil': (56, 31, 100), 'libavcodec': (58, 54, 100), 'libavformat': (58, 29, 100), 'libavfilter': (7, 57, 100), 'libavdevice': (58, 8, 100)}\n\nBuild config:\n--prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-avresample --disable-filter=resample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librsvg --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-nvenc --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n\nDecoders:\n['h264_cuvid', 'hevc_cuvid', 'mjpeg_cuvid', 'mpeg1_cuvid', 'mpeg2_cuvid', 'mpeg4_cuvid', 'vc1_cuvid', 'vp8_cuvid', 'vp9_cuvid']\n\nEncoders:\n['h264_nvenc', 'nvenc', 'nvenc_h264', 'nvenc_hevc', 'hevc_nvenc'] \n```"]
- en: torch.utils.dlpack
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: torch.utils.dlpack
- en: 原文：[https://pytorch.org/docs/stable/dlpack.html](https://pytorch.org/docs/stable/dlpack.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/docs/stable/dlpack.html](https://pytorch.org/docs/stable/dlpack.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Converts a tensor from an external library into a `torch.Tensor`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将来自外部库的张量转换为`torch.Tensor`。
- en: The returned PyTorch tensor will share the memory with the input tensor (which
    may have come from another library). Note that in-place operations will therefore
    also affect the data of the input tensor. This may lead to unexpected issues (e.g.,
    other libraries may have read-only flags or immutable data structures), so the
    user should only do this if they know for sure that this is fine.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的PyTorch张量将与输入张量共享内存（可能来自另一个库）。请注意，因此就地操作也会影响输入张量的数据。这可能会导致意外问题（例如，其他库可能具有只读标志或不可变数据结构），因此用户只有在确定这样做没问题时才应该这样做。
- en: Parameters
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**ext_tensor** (object with `__dlpack__` attribute, or a DLPack capsule) –'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**ext_tensor**（具有`__dlpack__`属性或DLPack胶囊的对象） -'
- en: The tensor or DLPack capsule to convert.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要转换的张量或DLPack胶囊。
- en: If `ext_tensor` is a tensor (or ndarray) object, it must support the `__dlpack__`
    protocol (i.e., have a `ext_tensor.__dlpack__` method). Otherwise `ext_tensor`
    may be a DLPack capsule, which is an opaque `PyCapsule` instance, typically produced
    by a `to_dlpack` function or method.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`ext_tensor`是张量（或ndarray）对象，则必须支持`__dlpack__`协议（即，具有`ext_tensor.__dlpack__`方法）。否则，`ext_tensor`可能是一个DLPack胶囊，这是一个不透明的`PyCapsule`实例，通常由`to_dlpack`函数或方法生成。
- en: Return type
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型
- en: '[*Tensor*](tensors.html#torch.Tensor "torch.Tensor")'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Tensor*](tensors.html#torch.Tensor "torch.Tensor")'
- en: 'Examples:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Returns an opaque object (a “DLPack capsule”) representing the tensor.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 返回表示张量的不透明对象（“DLPack胶囊”）。
- en: Note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`to_dlpack` is a legacy DLPack interface. The capsule it returns cannot be
    used for anything in Python other than use it as input to `from_dlpack`. The more
    idiomatic use of DLPack is to call `from_dlpack` directly on the tensor object
    - this works when that object has a `__dlpack__` method, which PyTorch and most
    other libraries indeed have now.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`to_dlpack`是一个传统的DLPack接口。它返回的胶囊在Python中除了用作`from_dlpack`的输入之外不能用于任何其他用途。DLPack的更符合习惯的用法是直接在张量对象上调用`from_dlpack`
    - 当该对象具有`__dlpack__`方法时，这将起作用，PyTorch和大多数其他库现在确实都有这个方法。'
- en: Warning
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Only call `from_dlpack` once per capsule produced with `to_dlpack`. Behavior
    when a capsule is consumed multiple times is undefined.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在使用`to_dlpack`生成的胶囊时才调用`from_dlpack`一次。当一个胶囊被多次消耗时的行为是未定义的。
- en: Parameters
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**tensor** – a tensor to be exported'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**tensor** - 要导出的张量'
- en: The DLPack capsule shares the tensor’s memory.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: DLPack胶囊共享张量的内存。

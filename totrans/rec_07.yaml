- en: torchrec.fx
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: torchrec.fx
- en: 原文：[https://pytorch.org/torchrec/torchrec.fx.html](https://pytorch.org/torchrec/torchrec.fx.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/torchrec/torchrec.fx.html](https://pytorch.org/torchrec/torchrec.fx.html)
- en: Torchrec Tracer
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Torchrec跟踪器
- en: Custom FX tracer for torchrec
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: torchrec的自定义FX跟踪器
- en: See [Torch.FX documentation](https://pytorch.org/docs/stable/fx.html)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[Torch.FX文档](https://pytorch.org/docs/stable/fx.html)
- en: '## torchrec.fx.tracer[](#module-torchrec.fx.tracer "Permalink to this heading")'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: torchrec.fx.tracer
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Bases: `Tracer`'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 基类：`跟踪器`
- en: Custom FX tracer for torchrec
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: torchrec的自定义FX跟踪器
- en: See [Torch.FX documentation](https://pytorch.org/docs/stable/fx.html)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[Torch.FX文档](https://pytorch.org/docs/stable/fx.html)
- en: We create a custom FX tracer to trace torchrec based models. The custom tracer
    handles python generic types (i.e. NoWait[T], Awaitable[T]) and lower it to TorchScript
    if needed
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个自定义的FX跟踪器来跟踪基于torchrec的模型。自定义跟踪器处理Python通用类型（即NoWait[T]，Awaitable[T]），并在需要时将其降级为TorchScript
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A method to specify the behavior of tracing when preparing values to be used
    as arguments to nodes in the `Graph`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一种指定跟踪行为的方法，用于准备作为“图形”中节点参数使用的值
- en: Adds support for the NoWait type in addition to the default tracer
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 除了默认跟踪器外，还添加了对NoWait类型的支持
- en: 'Parameters:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a** (*Any*) – The value to be emitted as an `Argument` in the `Graph`.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**（*任何*）- 要作为“图形”中的`参数`发出的值。'
- en: 'Returns:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: The value `a` converted into the appropriate `Argument`
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 将值`a`转换为适当的`参数`
- en: 'Return type:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: Argument
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Override FX definition to include quantized embedding bags
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 覆盖FX定义以包括量化嵌入袋
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Allows trace-ability of non registered modules. This is typically used for Table
    Batched Embeddings made to look like nn.EmbeddingBags
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 允许跟踪非注册模块。这通常用于使表批量嵌入看起来像nn.EmbeddingBags
- en: '[PRE7]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Backwards-compatibility for this API is guaranteed.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此API的向后兼容性得到保证。
- en: '[PRE9]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Symbolic tracing API
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 符号跟踪API
- en: Given an `nn.Module` or function instance `root`, this function will return
    a `GraphModule` constructed by recording operations seen while tracing through
    `root`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个`nn.Module`或函数实例`root`，此函数将返回通过跟踪`root`时看到的操作构建的`GraphModule`。
- en: '`concrete_args` allows you to partially specialize your function, whether it’s
    to remove control flow or data structures.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`concrete_args`允许您部分专门化您的函数，无论是删除控制流还是数据结构。'
- en: 'Parameters:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**root** (*Union**[**torch.nn.Module**,* *Callable**]*) – Module or function
    to be traced and converted into a Graph representation.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**root**（*Union**[**torch.nn.Module**,* *Callable**]*）- 要跟踪并转换为图形表示的模块或函数。'
- en: '**concrete_args** (*Optional**[**Dict**[**str**,* *any**]**]*) – Inputs to
    be partially specialized'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**concrete_args**（*可选**[**Dict**[**str**,* *任何**]**]*）- 要部分专门化的输入'
- en: 'Returns:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: a Module created from the recorded operations from `root`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 从`root`中记录的操作创建的模块。
- en: 'Return type:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: 'GraphModule  ## Module contents[](#module-0 "Permalink to this heading")'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图形模块
- en: Torchrec Tracer
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Torchrec跟踪器
- en: Custom FX tracer for torchrec
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: torchrec的自定义FX跟踪器
- en: See [Torch.FX documentation](https://pytorch.org/docs/stable/fx.html)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[Torch.FX文档](https://pytorch.org/docs/stable/fx.html)

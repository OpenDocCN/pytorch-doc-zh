["```py\nfrom torchtext.models import T5Transform\n\npadding_idx = 0\neos_idx = 1\nmax_seq_len = 512\nt5_sp_model_path = \"https://download.pytorch.org/models/text/t5_tokenizer_base.model\"\n\ntransform = T5Transform(\n    sp_model_path=t5_sp_model_path,\n    max_seq_len=max_seq_len,\n    eos_idx=eos_idx,\n    padding_idx=padding_idx,\n) \n```", "```py\nfrom torchtext.models import T5_BASE_GENERATION\ntransform = T5_BASE_GENERATION.transform() \n```", "```py\nfrom torchtext.models import T5_BASE_GENERATION\n\nt5_base = T5_BASE_GENERATION\ntransform = t5_base.transform()\nmodel = t5_base.get_model()\nmodel.eval() \n```", "```py\nfrom torchtext.prototype.generate import GenerationUtils\n\nsequence_generator = GenerationUtils(model) \n```", "```py\nfrom functools import [partial](https://docs.python.org/3/library/functools.html#functools.partial \"functools.partial\")\n\nfrom torch.utils.data import [DataLoader](https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader \"torch.utils.data.DataLoader\")\nfrom torchtext.datasets import CNNDM\n\ncnndm_batch_size = 5\ncnndm_datapipe = CNNDM(split=\"test\")\ntask = \"summarize\"\n\ndef apply_prefix(task, x):\n    return f\"{task}: \" + x[0], x[1]\n\ncnndm_datapipe = cnndm_datapipe.map([partial](https://docs.python.org/3/library/functools.html#functools.partial \"functools.partial\")(apply_prefix, task))\ncnndm_datapipe = cnndm_datapipe.batch(cnndm_batch_size)\ncnndm_datapipe = cnndm_datapipe.rows2columnar([\"article\", \"abstract\"])\ncnndm_dataloader = [DataLoader](https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader \"torch.utils.data.DataLoader\")(cnndm_datapipe, shuffle=True, batch_size=None) \n```", "```py\ndef batch_prefix(task, x):\n return {\n     \"article\": [f'{task}: ' + y for y in x[\"article\"]],\n     \"abstract\": x[\"abstract\"]\n }\n\ncnndm_batch_size = 5\ncnndm_datapipe = CNNDM(split=\"test\")\ntask = 'summarize'\n\ncnndm_datapipe = cnndm_datapipe.batch(cnndm_batch_size).rows2columnar([\"article\", \"abstract\"])\ncnndm_datapipe = cnndm_datapipe.map([partial](https://docs.python.org/3/library/functools.html#functools.partial \"functools.partial\")(batch_prefix, task))\ncnndm_dataloader = [DataLoader](https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader \"torch.utils.data.DataLoader\")(cnndm_datapipe, batch_size=None) \n```", "```py\nfrom torchtext.datasets import IMDB\n\nimdb_batch_size = 3\nimdb_datapipe = IMDB(split=\"test\")\ntask = \"sst2 sentence\"\nlabels = {\"1\": \"negative\", \"2\": \"positive\"}\n\ndef process_labels(labels, x):\n    return x[1], labels[str(x[0])]\n\nimdb_datapipe = imdb_datapipe.map([partial](https://docs.python.org/3/library/functools.html#functools.partial \"functools.partial\")(process_labels, labels))\nimdb_datapipe = imdb_datapipe.map([partial](https://docs.python.org/3/library/functools.html#functools.partial \"functools.partial\")(apply_prefix, task))\nimdb_datapipe = imdb_datapipe.batch(imdb_batch_size)\nimdb_datapipe = imdb_datapipe.rows2columnar([\"text\", \"label\"])\nimdb_dataloader = [DataLoader](https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader \"torch.utils.data.DataLoader\")(imdb_datapipe, batch_size=None) \n```", "```py\nfrom torchtext.datasets import Multi30k\n\nmulti_batch_size = 5\nlanguage_pair = (\"en\", \"de\")\nmulti_datapipe = Multi30k(split=\"test\", language_pair=language_pair)\ntask = \"translate English to German\"\n\nmulti_datapipe = multi_datapipe.map([partial](https://docs.python.org/3/library/functools.html#functools.partial \"functools.partial\")(apply_prefix, task))\nmulti_datapipe = multi_datapipe.batch(multi_batch_size)\nmulti_datapipe = multi_datapipe.rows2columnar([\"english\", \"german\"])\nmulti_dataloader = [DataLoader](https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader \"torch.utils.data.DataLoader\")(multi_datapipe, batch_size=None) \n```", "```py\nbatch = next(iter(cnndm_dataloader))\ninput_text = batch[\"article\"]\ntarget = batch[\"abstract\"]\nbeam_size = 1\n\nmodel_input = transform(input_text)\nmodel_output = sequence_generator.generate(model_input, eos_idx=eos_idx, num_beams=beam_size)\noutput_text = transform.decode(model_output.tolist())\n\nfor i in range(cnndm_batch_size):\n    print(f\"Example {i+1}:\\n\")\n    print(f\"prediction: {output_text[i]}\\n\")\n    print(f\"target: {target[i]}\\n\\n\") \n```", "```py\nExample 1:\n\nprediction: the 24-year-old has been tattooed for over a decade . he has landed in australia\nto start work on a new campaign . he says he is 'taking it in your stride' to be honest .\n\ntarget: London-based model Stephen James Hendry famed for his full body tattoo . The supermodel\nis in Sydney for a new modelling campaign . Australian fans understood to have already located\nhim at his hotel . The 24-year-old heartthrob is recently single .\n\nExample 2:\n\nprediction: a stray pooch has used up at least three of her own after being hit by a\ncar and buried in a field . the dog managed to stagger to a nearby farm, dirt-covered\nand emaciated, where she was found . she suffered a dislocated jaw, leg injuries and a\ncaved-in sinus cavity -- and still requires surgery to help her breathe .\n\ntarget: Theia, a bully breed mix, was apparently hit by a car, whacked with a hammer\nand buried in a field . \"She's a true miracle dog and she deserves a good life,\" says\nSara Mellado, who is looking for a home for Theia .\n\nExample 3:\n\nprediction: mohammad Javad Zarif arrived in Iran on a sunny friday morning . he has gone\na long way to bring Iran in from the cold and allow it to rejoin the international\ncommunity . but there are some facts about him that are less well-known .\n\ntarget: Mohammad Javad Zarif has spent more time with John Kerry than any other\nforeign minister . He once participated in a takeover of the Iranian Consulate in San\nFrancisco . The Iranian foreign minister tweets in English .\n\nExample 4:\n\nprediction: five americans were monitored for three weeks after being exposed to Ebola in\nwest africa . one of the five had a heart-related issue and has been discharged but hasn't\nleft the area . they are clinicians for Partners in Health, a Boston-based aid group .\n\ntarget: 17 Americans were exposed to the Ebola virus while in Sierra Leone in March .\nAnother person was diagnosed with the disease and taken to hospital in Maryland .\nNational Institutes of Health says the patient is in fair condition after weeks of\ntreatment .\n\nExample 5:\n\nprediction: the student was identified during an investigation by campus police and\nthe office of student affairs . he admitted to placing the noose on the tree early\nWednesday morning . the incident is one of several recent racist events to affect\ncollege students .\n\ntarget: Student is no longer on Duke University campus and will face disciplinary\nreview . School officials identified student during investigation and the person\nadmitted to hanging the noose, Duke says . The noose, made of rope, was discovered on\ncampus about 2 a.m. \n```", "```py\nbatch = next(iter(imdb_dataloader))\ninput_text = batch[\"text\"]\ntarget = batch[\"label\"]\nbeam_size = 1\n\nmodel_input = transform(input_text)\nmodel_output = sequence_generator.generate(model_input, eos_idx=eos_idx, num_beams=beam_size)\noutput_text = transform.decode(model_output.tolist())\n\nfor i in range(imdb_batch_size):\n    print(f\"Example {i+1}:\\n\")\n    print(f\"input_text: {input_text[i]}\\n\")\n    print(f\"prediction: {output_text[i]}\\n\")\n    print(f\"target: {target[i]}\\n\\n\") \n```", "```py\nExample 1:\n\ninput_text: sst2 sentence: I love sci-fi and am willing to put up with a lot. Sci-fi\nmovies/TV are usually underfunded, under-appreciated and misunderstood. I tried to like\nthis, I really did, but it is to good TV sci-fi as Babylon 5 is to Star Trek (the original).\nSilly prosthetics, cheap cardboard sets, stilted dialogues, CG that doesn't match the\nbackground, and painfully one-dimensional characters cannot be overcome with a 'sci-fi'\nsetting. (I'm sure there are those of you out there who think Babylon 5 is good sci-fi TV.\nIt's not. It's clich\u00e9d and uninspiring.) While US viewers might like emotion and character\ndevelopment, sci-fi is a genre that does not take itself seriously (cf. Star Trek). It may\ntreat important issues, yet not as a serious philosophy. It's really difficult to care about\nthe characters here as they are not simply foolish, just missing a spark of life. Their\nactions and reactions are wooden and predictable, often painful to watch. The makers of Earth\nKNOW it's rubbish as they have to always say \"Gene Roddenberry's Earth...\" otherwise people\nwould not continue watching. Roddenberry's ashes must be turning in their orbit as this dull,\ncheap, poorly edited (watching it without advert breaks really brings this home) trudging\nTrabant of a show lumbers into space. Spoiler. So, kill off a main character. And then bring\nhim back as another actor. Jeeez. Dallas all over again.\n\nprediction: negative\n\ntarget: negative\n\nExample 2:\n\ninput_text: sst2 sentence: Worth the entertainment value of a rental, especially if you like\naction movies. This one features the usual car chases, fights with the great Van Damme kick\nstyle, shooting battles with the 40 shell load shotgun, and even terrorist style bombs. All\nof this is entertaining and competently handled but there is nothing that really blows you\naway if you've seen your share before.<br /><br />The plot is made interesting by the\ninclusion of a rabbit, which is clever but hardly profound. Many of the characters are\nheavily stereotyped -- the angry veterans, the terrified illegal aliens, the crooked cops,\nthe indifferent feds, the bitchy tough lady station head, the crooked politician, the fat\nfederale who looks like he was typecast as the Mexican in a Hollywood movie from the 1940s.\nAll passably acted but again nothing special.<br /><br />I thought the main villains were\npretty well done and fairly well acted. By the end of the movie you certainly knew who the\ngood guys were and weren't. There was an emotional lift as the really bad ones got their just\ndeserts. Very simplistic, but then you weren't expecting Hamlet, right? The only thing I found\nreally annoying was the constant cuts to VDs daughter during the last fight scene.<br /><br />\nNot bad. Not good. Passable 4.\n\nprediction: positive\n\ntarget: negative\n\nExample 3:\n\ninput_text: sst2 sentence: its a totally average film with a few semi-alright action sequences\nthat make the plot seem a little better and remind the viewer of the classic van dam films.\nparts of the plot don't make sense and seem to be added in to use up time. the end plot is that\nof a very basic type that doesn't leave the viewer guessing and any twists are obvious from the\nbeginning. the end scene with the flask backs don't make sense as they are added in and seem to\nhave little relevance to the history of van dam's character. not really worth watching again,\nbit disappointed in the end production, even though it is apparent it was shot on a low budget\ncertain shots and sections in the film are of poor directed quality.\n\nprediction: negative\n\ntarget: negative \n```", "```py\nbatch = next(iter(multi_dataloader))\ninput_text = batch[\"english\"]\ntarget = batch[\"german\"]\n\nmodel_input = transform(input_text)\nmodel_output = sequence_generator.generate(model_input, eos_idx=eos_idx, num_beams=beam_size)\noutput_text = transform.decode(model_output.tolist())\n\nfor i in range(multi_batch_size):\n    print(f\"Example {i+1}:\\n\")\n    print(f\"input_text: {input_text[i]}\\n\")\n    print(f\"prediction: {output_text[i]}\\n\")\n    print(f\"target: {target[i]}\\n\\n\") \n```", "```py\nExample 1:\n\ninput_text: translate English to German: A man in an orange hat starring at something.\n\nprediction: Ein Mann in einem orangen Hut, der an etwas schaut.\n\ntarget: Ein Mann mit einem orangefarbenen Hut, der etwas anstarrt.\n\nExample 2:\n\ninput_text: translate English to German: A Boston Terrier is running on lush green grass in front of a white fence.\n\nprediction: Ein Boston Terrier l\u00e4uft auf \u00fcppigem gr\u00fcnem Gras vor einem wei\u00dfen Zaun.\n\ntarget: Ein Boston Terrier l\u00e4uft \u00fcber saftig-gr\u00fcnes Gras vor einem wei\u00dfen Zaun.\n\nExample 3:\n\ninput_text: translate English to German: A girl in karate uniform breaking a stick with a front kick.\n\nprediction: Ein M\u00e4dchen in Karate-Uniform bricht einen St\u00f6ck mit einem Frontkick.\n\ntarget: Ein M\u00e4dchen in einem Karateanzug bricht ein Brett mit einem Tritt.\n\nExample 4:\n\ninput_text: translate English to German: Five people wearing winter jackets and helmets stand in the snow, with snowmobiles in the background.\n\nprediction: F\u00fcnf Menschen mit Winterjacken und Helmen stehen im Schnee, mit Schneemobilen im Hintergrund.\n\ntarget: F\u00fcnf Leute in Winterjacken und mit Helmen stehen im Schnee mit Schneemobilen im Hintergrund.\n\nExample 5:\n\ninput_text: translate English to German: People are fixing the roof of a house.\n\nprediction: Die Leute fixieren das Dach eines Hauses.\n\ntarget: Leute Reparieren das Dach eines Hauses. \n```"]
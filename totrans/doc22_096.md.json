["```py\n>>> x = torch.randn(3, 3, names=('N', 'C'))\n>>> x.abs().names\n('N', 'C') \n```", "```py\n>>> x = torch.randn(1, 3, 3, 3, names=('N', 'C', 'H', 'W'))\n>>> x.squeeze('N').names\n('C', 'H', 'W')\n\n>>> x = torch.randn(3, 3, 3, 3, names=('N', 'C', 'H', 'W'))\n>>> x.sum(['N', 'C']).names\n('H', 'W')\n\n# Reduction ops with keepdim=True don't actually remove dimensions.\n>>> x = torch.randn(3, 3, 3, 3, names=('N', 'C', 'H', 'W'))\n>>> x.sum(['N', 'C'], keepdim=True).names\n('N', 'C', 'H', 'W') \n```", "```py\n# tensor: Tensor[   N, None]\n# other:  Tensor[None,    C]\n>>> tensor = torch.randn(3, 3, names=('N', None))\n>>> other = torch.randn(3, 3, names=(None, 'C'))\n>>> (tensor + other).names\n('N', 'C') \n```", "```py\n# Dimensions don't match from the right:\n# tensor: Tensor[N, C]\n# other:  Tensor[   N]\n>>> tensor = torch.randn(3, 3, names=('N', 'C'))\n>>> other = torch.randn(3, names=('N',))\n>>> (tensor + other).names\nRuntimeError: Error when attempting to broadcast dims ['N', 'C'] and dims\n['N']: dim 'C' and dim 'N' are at the same position from the right but do\nnot match.\n\n# Dimensions aren't aligned when matching tensor.names[-1] and other.names[-1]:\n# tensor: Tensor[N, None]\n# other:  Tensor[      N]\n>>> tensor = torch.randn(3, 3, names=('N', None))\n>>> other = torch.randn(3, names=('N',))\n>>> (tensor + other).names\nRuntimeError: Misaligned dims when attempting to broadcast dims ['N'] and\ndims ['N', None]: dim 'N' appears in a different position from the right\nacross both lists. \n```", "```py\n>>> x = torch.randn(3, 3, names=('N', 'C'))\n>>> x.transpose('N', 'C').names\n('C', 'N') \n```", "```py\n>>> x = torch.randn(3, 3, names=('N', 'D'))\n>>> y = torch.randn(3, 3, names=('in', 'out'))\n>>> x.mm(y).names\n('N', 'out') \n```", "```py\n>>> x = torch.randn(3, 3, names=('N', 'D'))\n>>> y = torch.randn(3, names=('something',))\n>>> x.mv(y).names\n('N',) \n```", "```py\n# Batch matrix multiply of matrices Tensor['C', 'D'] and Tensor['E', 'F'].\n# 'A', 'B' are batch dimensions.\n>>> x = torch.randn(3, 3, 3, 3, names=('A', 'B', 'C', 'D'))\n>>> y = torch.randn(3, 3, 3, names=('B', 'E', 'F'))\n>>> torch.matmul(x, y).names\n('A', 'B', 'C', 'F') \n```", "```py\n>>> torch.zeros(2, 3, names=('N', 'C'))\ntensor([[0., 0., 0.],\n [0., 0., 0.]], names=('N', 'C')) \n```", "```py\n>>> x = torch.randn(3, 3)\n>>> y = torch.randn(3, 3, names=('N', 'C'))\n>>> x.names\n(None, None)\n\n>>> x += y\n>>> x.names\n('N', 'C') \n```"]
- en: Additive Synthesis
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加法合成
- en: 原文：[https://pytorch.org/audio/stable/tutorials/additive_synthesis_tutorial.html](https://pytorch.org/audio/stable/tutorials/additive_synthesis_tutorial.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/audio/stable/tutorials/additive_synthesis_tutorial.html](https://pytorch.org/audio/stable/tutorials/additive_synthesis_tutorial.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Click [here](#sphx-glr-download-tutorials-additive-synthesis-tutorial-py) to
    download the full example code
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 点击[这里](#sphx-glr-download-tutorials-additive-synthesis-tutorial-py)下载完整示例代码
- en: '**Author**: [Moto Hira](mailto:moto%40meta.com)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者**: [Moto Hira](mailto:moto%40meta.com)'
- en: This tutorial is the continuation of [Oscillator and ADSR Envelope](./oscillator_tutorial.html).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程是[振荡器和ADSR包络](./oscillator_tutorial.html)的延续。
- en: This tutorial shows how to perform additive synthesis and subtractive synthesis
    using TorchAudio’s DSP functions.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程展示了如何使用TorchAudio的DSP函数执行加法合成和减法合成。
- en: Additive synthesis creates timbre by combining multiple waveform. Subtractive
    synthesis creates timbre by applying filters.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 加法合成通过组合多个波形创建音色。减法合成通过应用滤波器创建音色。
- en: Warning
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: This tutorial requires prototype DSP features, which are available in nightly
    builds.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程需要原型DSP功能，这些功能在夜间构建中可用。
- en: Please refer to [https://pytorch.org/get-started/locally](https://pytorch.org/get-started/locally)
    for instructions for installing a nightly build.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考[https://pytorch.org/get-started/locally](https://pytorch.org/get-started/locally)
    获取安装夜间构建的说明。
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Overview[](#overview "Permalink to this heading")
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述[](#overview "跳转到此标题")
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Creating multiple frequency pitches[](#creating-multiple-frequency-pitches "Permalink
    to this heading")
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建多个频率音高[](#creating-multiple-frequency-pitches "跳转到此标题")
- en: The core of additive synthesis is oscillator. We create a timbre by summing
    up the multiple waveforms generated by oscillator.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 加法合成的核心是振荡器。我们通过将振荡器生成的多个波形相加来创建音色。
- en: In [the oscillator tutorial](./oscillator_tutorial.html), we used [`oscillator_bank()`](../generated/torchaudio.prototype.functional.oscillator_bank.html#torchaudio.prototype.functional.oscillator_bank
    "torchaudio.prototype.functional.oscillator_bank") and [`adsr_envelope()`](../generated/torchaudio.prototype.functional.adsr_envelope.html#torchaudio.prototype.functional.adsr_envelope
    "torchaudio.prototype.functional.adsr_envelope") to generate various waveforms.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在[振荡器教程](./oscillator_tutorial.html)中，我们使用[`oscillator_bank()`](../generated/torchaudio.prototype.functional.oscillator_bank.html#torchaudio.prototype.functional.oscillator_bank
    "torchaudio.prototype.functional.oscillator_bank") 和 [`adsr_envelope()`](../generated/torchaudio.prototype.functional.adsr_envelope.html#torchaudio.prototype.functional.adsr_envelope
    "torchaudio.prototype.functional.adsr_envelope") 生成各种波形。
- en: In this tutorial, we use [`extend_pitch()`](../generated/torchaudio.prototype.functional.extend_pitch.html#torchaudio.prototype.functional.extend_pitch
    "torchaudio.prototype.functional.extend_pitch") to create a timbre from base frequency.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们使用[`extend_pitch()`](../generated/torchaudio.prototype.functional.extend_pitch.html#torchaudio.prototype.functional.extend_pitch
    "torchaudio.prototype.functional.extend_pitch") 从基频创建音色。
- en: First, we define some constants and helper function that we use throughout the
    tutorial.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们定义一些在整个教程中使用的常量和辅助函数。
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Harmonic Overtones[](#harmonic-overtones "Permalink to this heading")
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谐波[](#harmonic-overtones "跳转到此标题")
- en: Harmonic overtones are frequency components that are an integer multiple of
    the fundamental frequency.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 谐波是基频的整数倍频率成分。
- en: We look at how to generate the common waveforms that are used in synthesizers.
    That is,
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看看如何生成合成器中使用的常见波形。也就是说，
- en: Sawtooth wave
  id: totrans-25
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锯齿波
- en: ''
  id: totrans-26
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-27
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Square wave
  id: totrans-28
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方波
- en: ''
  id: totrans-29
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-30
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Triangle wave
  id: totrans-31
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 三角波
- en: Sawtooth wave[](#sawtooth-wave "Permalink to this heading")
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 锯齿波[](#sawtooth-wave "跳转到此标题")
- en: '[Sawtooth wave](https://en.wikipedia.org/wiki/Sawtooth_wave) can be expressed
    as the following. It contains all the integer harmonics, so it is commonly used
    in subtractive synthesis as well.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[锯齿波](https://en.wikipedia.org/wiki/Sawtooth_wave) 可以表示为以下形式。它包含所有整数谐波，因此在减法合成中常被使用。'
- en: \[\begin{align*} y_t &= \sum_{k=1}^{K} A_k \sin ( 2 \pi f_k t ) \\ \text{where}
    \\ f_k &= k f_0 \\ A_k &= -\frac{ (-1) ^k }{k \pi} \end{align*}\]
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{align*} y_t &= \sum_{k=1}^{K} A_k \sin ( 2 \pi f_k t ) \\ \text{其中}
    \\ f_k &= k f_0 \\ A_k &= -\frac{ (-1) ^k }{k \pi} \end{align*}\]
- en: The following function takes fundamental frequencies and amplitudes, and adds
    extend pitch in accordance with the formula above.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数接受基频和振幅，并根据上述公式添加扩展音高。
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now synthesize a waveform
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在合成一个波形
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Oscillator bank (bank size: 46)](../Images/f9720f8c48393179934600ac2f65389d.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![振荡器组 (组大小: 46)](../Images/f9720f8c48393179934600ac2f65389d.png)'
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: null
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: It is possible to oscillate the base frequency to create a time-varying tone
    based on sawtooth wave.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 可以振荡基频以基于锯齿波创建时变音调。
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Oscillator bank (bank size: 46)](../Images/f7f81fb888b8651e7597a2d93fca1647.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![振荡器组 (组大小: 46)](../Images/f7f81fb888b8651e7597a2d93fca1647.png)'
- en: '[PRE9]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: null
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Square wave[](#square-wave "Permalink to this heading")
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方波[](#square-wave "跳转到此标题")
- en: '[Square wave](https://en.wikipedia.org/wiki/Square_wave) contains only odd-integer
    harmonics.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[方波](https://en.wikipedia.org/wiki/Square_wave) 仅包含奇整数谐波。'
- en: \[\begin{align*} y_t &= \sum_{k=0}^{K-1} A_k \sin ( 2 \pi f_k t ) \\ \text{where}
    \\ f_k &= n f_0 \\ A_k &= \frac{ 4 }{n \pi} \\ n &= 2k + 1 \end{align*}\]
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{align*} y_t &= \sum_{k=0}^{K-1} A_k \sin ( 2 \pi f_k t ) \\ \text{其中}
    \\ f_k &= n f_0 \\ A_k &= \frac{ 4 }{n \pi} \\ n &= 2k + 1 \end{align*}\]
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Oscillator bank (bank size: 23)](../Images/34cee6f4901289e37a7b4caea5db81ec.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![振荡器组 (组大小: 23)](../Images/34cee6f4901289e37a7b4caea5db81ec.png)'
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: null
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Triangle wave[](#triangle-wave "Permalink to this heading")
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 三角波[](#triangle-wave "跳转到此标题")
- en: '[Triangle wave](https://en.wikipedia.org/wiki/Triangle_wave) also only contains
    odd-integer harmonics.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[三角波](https://en.wikipedia.org/wiki/Triangle_wave) 也仅包含奇整数谐波。'
- en: \[\begin{align*} y_t &= \sum_{k=0}^{K-1} A_k \sin ( 2 \pi f_k t ) \\ \text{where}
    \\ f_k &= n f_0 \\ A_k &= (-1) ^ k \frac{8}{(n\pi) ^ 2} \\ n &= 2k + 1 \end{align*}\]
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{align*} y_t &= \sum_{k=0}^{K-1} A_k \sin ( 2 \pi f_k t ) \\ \text{其中}
    \\ f_k &= n f_0 \\ A_k &= (-1) ^ k \frac{8}{(n\pi) ^ 2} \\ n &= 2k + 1 \end{align*}\]
- en: '[PRE13]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Oscillator bank (bank size: 23)](../Images/eef0b52ccbd6c4cf4e303036f0fc2863.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![振荡器银行（银行大小：23）](../Images/eef0b52ccbd6c4cf4e303036f0fc2863.png)'
- en: '[PRE15]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: null
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Inharmonic Paritials[](#inharmonic-paritials "Permalink to this heading")
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 非谐波部分[](#inharmonic-paritials "Permalink to this heading")
- en: Inharmonic partials refer to freqencies that are not integer multiple of fundamental
    frequency.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 非谐波部分指的是不是基频的整数倍的频率。
- en: They are essential in re-creating realistic sound or making the result of synthesis
    more interesting.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 它们对于重新创建逼真的声音或使合成结果更有趣至关重要。
- en: Bell sound[](#bell-sound "Permalink to this heading")
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 钟声[](#bell-sound "Permalink to this heading")
- en: '[https://computermusicresource.com/Simple.bell.tutorial.html](https://computermusicresource.com/Simple.bell.tutorial.html)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://computermusicresource.com/Simple.bell.tutorial.html](https://computermusicresource.com/Simple.bell.tutorial.html)'
- en: '[PRE16]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Oscillator bank (bank size: 9)](../Images/4787059407ae32c1a6aaaa83903ac56b.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![振荡器银行（银行大小：9）](../Images/4787059407ae32c1a6aaaa83903ac56b.png)'
- en: null
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: As a comparison, the following is the harmonic version of the above. Only frequency
    values are different. The number of overtones and its amplitudes are same.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 作为对比，以下是上述内容的谐波版本。只有频率值不同。泛音的数量和幅度相同。
- en: '[PRE17]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Oscillator bank (bank size: 9)](../Images/73f01544734dc7809b6d987ccdae6c7f.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![振荡器银行（银行大小：9）](../Images/73f01544734dc7809b6d987ccdae6c7f.png)'
- en: null
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: References[](#references "Permalink to this heading")
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考资料[](#references "Permalink to this heading")
- en: '[https://en.wikipedia.org/wiki/Additive_synthesis](https://en.wikipedia.org/wiki/Additive_synthesis)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Additive_synthesis](https://en.wikipedia.org/wiki/Additive_synthesis)'
- en: '[https://computermusicresource.com/Simple.bell.tutorial.html](https://computermusicresource.com/Simple.bell.tutorial.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://computermusicresource.com/Simple.bell.tutorial.html](https://computermusicresource.com/Simple.bell.tutorial.html)'
- en: '[https://computermusicresource.com/Definitions/additive.synthesis.html](https://computermusicresource.com/Definitions/additive.synthesis.html)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://computermusicresource.com/Definitions/additive.synthesis.html](https://computermusicresource.com/Definitions/additive.synthesis.html)'
- en: '**Total running time of the script:** ( 0 minutes 4.662 seconds)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**脚本的总运行时间：**（0分钟4.662秒）'
- en: '[`Download Python source code: additive_synthesis_tutorial.py`](../_downloads/3b47d1fda1ff1ba89f9df8fcc2d3ba6d/additive_synthesis_tutorial.py)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Download Python source code: additive_synthesis_tutorial.py`](../_downloads/3b47d1fda1ff1ba89f9df8fcc2d3ba6d/additive_synthesis_tutorial.py)'
- en: '[`Download Jupyter notebook: additive_synthesis_tutorial.ipynb`](../_downloads/d2ec3ac999c9665c76413f1e36232990/additive_synthesis_tutorial.ipynb)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Download Jupyter笔记本：additive_synthesis_tutorial.ipynb`](../_downloads/d2ec3ac999c9665c76413f1e36232990/additive_synthesis_tutorial.ipynb)'
- en: '[Gallery generated by Sphinx-Gallery](https://sphinx-gallery.github.io)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sphinx-Gallery生成的画廊](https://sphinx-gallery.github.io)'

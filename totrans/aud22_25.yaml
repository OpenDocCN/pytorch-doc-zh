- en: Audio Feature Extractions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 音频特征提取
- en: 原文：[https://pytorch.org/audio/stable/tutorials/audio_feature_extractions_tutorial.html](https://pytorch.org/audio/stable/tutorials/audio_feature_extractions_tutorial.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/audio/stable/tutorials/audio_feature_extractions_tutorial.html](https://pytorch.org/audio/stable/tutorials/audio_feature_extractions_tutorial.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Click [here](#sphx-glr-download-tutorials-audio-feature-extractions-tutorial-py)
    to download the full example code
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 点击[这里](#sphx-glr-download-tutorials-audio-feature-extractions-tutorial-py)下载完整示例代码
- en: '**Author**: [Moto Hira](mailto:moto%40meta.com)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者**：[Moto Hira](mailto:moto%40meta.com)'
- en: '`torchaudio` implements feature extractions commonly used in the audio domain.
    They are available in `torchaudio.functional` and `torchaudio.transforms`.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`torchaudio` 实现了在音频领域常用的特征提取。它们可以在 `torchaudio.functional` 和 `torchaudio.transforms`
    中找到。'
- en: '`functional` implements features as standalone functions. They are stateless.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '`functional` 将功能实现为独立的函数。它们是无状态的。'
- en: '`transforms` implements features as objects, using implementations from `functional`
    and `torch.nn.Module`. They can be serialized using TorchScript.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`transforms` 将功能实现为对象，使用来自 `functional` 和 `torch.nn.Module` 的实现。它们可以使用 TorchScript
    进行序列化。'
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Overview of audio features[](#overview-of-audio-features "Permalink to this
    heading")
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 音频特征概述[](#overview-of-audio-features "跳转到此标题")
- en: The following diagram shows the relationship between common audio features and
    torchaudio APIs to generate them.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了常见音频特征与 torchaudio API 之间的关系，以生成它们。
- en: '![https://download.pytorch.org/torchaudio/tutorial-assets/torchaudio_feature_extractions.png](../Images/82ba49f78e3cd14b6e337acaf57b11e2.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![https://download.pytorch.org/torchaudio/tutorial-assets/torchaudio_feature_extractions.png](../Images/82ba49f78e3cd14b6e337acaf57b11e2.png)'
- en: For the complete list of available features, please refer to the documentation.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可用功能的完整列表，请参阅文档。
- en: Preparation[](#preparation "Permalink to this heading")
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作[](#preparation "跳转到此标题")
- en: Note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When running this tutorial in Google Colab, install the required packages
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Google Colab 中运行此教程时，请安装所需的软件包
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Spectrogram[](#spectrogram "Permalink to this heading")
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 频谱图[](#spectrogram "跳转到此标题")
- en: To get the frequency make-up of an audio signal as it varies with time, you
    can use [`torchaudio.transforms.Spectrogram()`](../generated/torchaudio.transforms.Spectrogram.html#torchaudio.transforms.Spectrogram
    "torchaudio.transforms.Spectrogram").
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取随时间变化的音频信号的频率构成，可以使用 [`torchaudio.transforms.Spectrogram()`](../generated/torchaudio.transforms.Spectrogram.html#torchaudio.transforms.Spectrogram
    "torchaudio.transforms.Spectrogram")。
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Original waveform, spectrogram](../Images/787b5dbf919118f579d77973c5a30652.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![原始波形，频谱图](../Images/787b5dbf919118f579d77973c5a30652.png)'
- en: '[PRE6]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: null
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: The effect of `n_fft` parameter[](#the-effect-of-n-fft-parameter "Permalink
    to this heading")
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`n_fft` 参数的影响[](#the-effect-of-n-fft-parameter "跳转到此标题")'
- en: The core of spectrogram computation is (short-term) Fourier transform, and the
    `n_fft` parameter corresponds to the \(N\) in the following definition of descrete
    Fourier transform.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 频谱图计算的核心是（短时）傅立叶变换，`n_fft` 参数对应于以下离散傅立叶变换定义中的 \(N\)。
- en: $$ X_k = \sum_{n=0}^{N-1} x_n e^{-\frac{2\pi i}{N} nk} $$
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: $$ X_k = \sum_{n=0}^{N-1} x_n e^{-\frac{2\pi i}{N} nk} $$
- en: (For the detail of Fourier transform, please refer to [Wikipedia](https://en.wikipedia.org/wiki/Fast_Fourier_transform).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: （有关傅立叶变换的详细信息，请参阅[Wikipedia](https://en.wikipedia.org/wiki/Fast_Fourier_transform)。
- en: The value of `n_fft` determines the resolution of frequency axis. However, with
    the higher `n_fft` value, the energy will be distributed among more bins, so when
    you visualize it, it might look more blurry, even thought they are higher resolution.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_fft` 的值决定了频率轴的分辨率。然而，使用更高的 `n_fft` 值时，能量将分布在更多的箱中，因此在可视化时，它可能看起来更模糊，即使它们具有更高的分辨率。'
- en: The following illustrates this;
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是说明;
- en: Note
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`hop_length` determines the time axis resolution. By default, (i.e. `hop_length=None`
    and `win_length=None`), the value of `n_fft // 4` is used. Here we use the same
    `hop_length` value across different `n_fft` so that they have the same number
    of elemets in the time axis.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`hop_length` 决定了时间轴的分辨率。默认情况下（即 `hop_length=None` 和 `win_length=None`），使用 `n_fft
    // 4` 的值。在这里，我们在不同的 `n_fft` 上使用相同的 `hop_length` 值，以便它们在时间轴上具有相同数量的元素。'
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![audio feature extractions tutorial](../Images/ac72de68cdabfdc2ad8f166dcb01c27c.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![音频特征提取教程](../Images/ac72de68cdabfdc2ad8f166dcb01c27c.png)'
- en: When comparing signals, it is desirable to use the same sampling rate, however
    if you must use the different sampling rate, care must be taken for interpretating
    the meaning of `n_fft`. Recall that `n_fft` determines the resolution of the frequency
    axis for a given sampling rate. In other words, what each bin on the frequency
    axis represents is subject to the sampling rate.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在比较信号时，最好使用相同的采样率，但是如果必须使用不同的采样率，则必须小心解释 `n_fft` 的含义。回想一下，`n_fft` 决定了给定采样率的频率轴的分辨率。换句话说，频率轴上的每个箱代表的内容取决于采样率。
- en: As we have seen above, changing the value of `n_fft` does not change the coverage
    of frequency range for the same input signal.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们上面所看到的，改变 `n_fft` 的值并不会改变相同输入信号的频率范围的覆盖。
- en: Let’s downsample the audio and apply spectrogram with the same `n_fft` value.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们对音频进行下采样，并使用相同的 `n_fft` 值应用频谱图。
- en: '[PRE9]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![audio feature extractions tutorial](../Images/e78e0e1cf66866b1f0dd8dadbb0e8612.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![音频特征提取教程](../Images/e78e0e1cf66866b1f0dd8dadbb0e8612.png)'
- en: In the above visualization, the second plot (“Downsampled”) might give the impression
    that the spectrogram is streched. This is because the meaning of frequency bins
    is different from the original one. Even though, they have the same number of
    bins, in the second plot, the frequency is only covered to the half of the original
    sampling rate. This becomes more clear if we resample the downsampled signal again
    so that it has the same sample rate as the original.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述可视化中，第二个图（“下采样”）可能会给人一种频谱图被拉伸的印象。这是因为频率箱的含义与原始的不同。即使它们具有相同数量的箱，在第二个图中，频率仅覆盖到原始采样率的一半。如果我们再次对下采样信号进行重采样，使其具有与原始信号相同的采样率，这一点将变得更加清晰。
- en: GriffinLim[](#griffinlim "Permalink to this heading")
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GriffinLim[](#griffinlim "跳转到此标题")
- en: To recover a waveform from a spectrogram, you can use [`torchaudio.transforms.GriffinLim`](../generated/torchaudio.transforms.GriffinLim.html#torchaudio.transforms.GriffinLim
    "torchaudio.transforms.GriffinLim").
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要从频谱图中恢复波形，可以使用[`torchaudio.transforms.GriffinLim`](../generated/torchaudio.transforms.GriffinLim.html#torchaudio.transforms.GriffinLim
    "torchaudio.transforms.GriffinLim")。
- en: The same set of parameters used for spectrogram must be used.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 必须使用与频谱图相同的参数集。
- en: '[PRE12]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Original, Reconstructed](../Images/32c66b5b578711def753dbb923cb7f66.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![原始，重建](../Images/32c66b5b578711def753dbb923cb7f66.png)'
- en: null
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Mel Filter Bank[](#mel-filter-bank "Permalink to this heading")
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 梅尔滤波器组[](#mel-filter-bank "跳转到此标题")
- en: '[`torchaudio.functional.melscale_fbanks()`](../generated/torchaudio.functional.melscale_fbanks.html#torchaudio.functional.melscale_fbanks
    "torchaudio.functional.melscale_fbanks") generates the filter bank for converting
    frequency bins to mel-scale bins.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[`torchaudio.functional.melscale_fbanks()`](../generated/torchaudio.functional.melscale_fbanks.html#torchaudio.functional.melscale_fbanks
    "torchaudio.functional.melscale_fbanks") 生成用于将频率箱转换为梅尔标度箱的滤波器组。'
- en: Since this function does not require input audio/features, there is no equivalent
    transform in [`torchaudio.transforms()`](../transforms.html#module-torchaudio.transforms
    "torchaudio.transforms").
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 由于此函数不需要输入音频/特征，因此在[`torchaudio.transforms()`](../transforms.html#module-torchaudio.transforms
    "torchaudio.transforms")中没有等效的转换。
- en: '[PRE14]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Mel Filter Bank - torchaudio](../Images/bd8afdf50a081e6142ab13cdd7cdbd51.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![梅尔滤波器组 - torchaudio](../Images/bd8afdf50a081e6142ab13cdd7cdbd51.png)'
- en: Comparison against librosa[](#comparison-against-librosa "Permalink to this
    heading")
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与librosa的比较[](#comparison-against-librosa "跳转到此标题")
- en: For reference, here is the equivalent way to get the mel filter bank with `librosa`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 作为参考，这里是使用`librosa`获取梅尔滤波器组的等效方法。
- en: '[PRE16]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Mel Filter Bank - librosa](../Images/0cf17a8f91bb1c63d22591f5bf2b7ccb.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![梅尔滤波器组 - librosa](../Images/0cf17a8f91bb1c63d22591f5bf2b7ccb.png)'
- en: '[PRE18]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: MelSpectrogram[](#melspectrogram "Permalink to this heading")
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 梅尔频谱图[](#melspectrogram "跳转到此标题")
- en: Generating a mel-scale spectrogram involves generating a spectrogram and performing
    mel-scale conversion. In `torchaudio`, [`torchaudio.transforms.MelSpectrogram()`](../generated/torchaudio.transforms.MelSpectrogram.html#torchaudio.transforms.MelSpectrogram
    "torchaudio.transforms.MelSpectrogram") provides this functionality.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 生成梅尔标度频谱图涉及生成频谱图并执行梅尔标度转换。在`torchaudio`中，[`torchaudio.transforms.MelSpectrogram()`](../generated/torchaudio.transforms.MelSpectrogram.html#torchaudio.transforms.MelSpectrogram
    "torchaudio.transforms.MelSpectrogram") 提供了这种功能。
- en: '[PRE19]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![MelSpectrogram - torchaudio](../Images/3292985cec53c36aa443a745edd38599.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![梅尔频谱图 - torchaudio](../Images/3292985cec53c36aa443a745edd38599.png)'
- en: Comparison against librosa[](#id1 "Permalink to this heading")
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与librosa的比较[](#id1 "跳转到此标题")
- en: For reference, here is the equivalent means of generating mel-scale spectrograms
    with `librosa`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 作为参考，这里是使用`librosa`生成梅尔标度频谱图的等效方法。
- en: '[PRE21]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![MelSpectrogram - librosa](../Images/a38262177175977c17a412eacff0306e.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![梅尔频谱图 - librosa](../Images/a38262177175977c17a412eacff0306e.png)'
- en: '[PRE23]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: MFCC[](#mfcc "Permalink to this heading")
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MFCC[](#mfcc "跳转到此标题")
- en: '[PRE24]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![MFCC](../Images/8453f28c3b04b95f3edf395b34622a94.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![MFCC](../Images/8453f28c3b04b95f3edf395b34622a94.png)'
- en: Comparison against librosa[](#id2 "Permalink to this heading")
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与librosa的比较[](#id2 "跳转到此标题")
- en: '[PRE26]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![MFCC (librosa)](../Images/94712cdb94274c1cacc312e88a22632c.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![MFCC (librosa)](../Images/94712cdb94274c1cacc312e88a22632c.png)'
- en: '[PRE28]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: LFCC[](#lfcc "Permalink to this heading")
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: LFCC[](#lfcc "跳转到此标题")
- en: '[PRE29]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![LFCC](../Images/099b6c76722336c25d2347c22bb1022a.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![LFCC](../Images/099b6c76722336c25d2347c22bb1022a.png)'
- en: Pitch[](#pitch "Permalink to this heading")
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 音高[](#pitch "跳转到此标题")
- en: '[PRE30]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![Pitch Feature](../Images/1f2e9b4055fe894039bd0dc8f5a98bc2.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![音高特征](../Images/1f2e9b4055fe894039bd0dc8f5a98bc2.png)'
- en: '**Total running time of the script:** ( 0 minutes 9.372 seconds)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**脚本的总运行时间：**（0分钟9.372秒）'
- en: '[`Download Python source code: audio_feature_extractions_tutorial.py`](../_downloads/0face80178ed0d1cefd2a173a7262afb/audio_feature_extractions_tutorial.py)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载Python源代码：audio_feature_extractions_tutorial.py`](../_downloads/0face80178ed0d1cefd2a173a7262afb/audio_feature_extractions_tutorial.py)'
- en: '[`Download Jupyter notebook: audio_feature_extractions_tutorial.ipynb`](../_downloads/743bf71677318e38b748ce39acd11a62/audio_feature_extractions_tutorial.ipynb)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载Jupyter笔记本：audio_feature_extractions_tutorial.ipynb`](../_downloads/743bf71677318e38b748ce39acd11a62/audio_feature_extractions_tutorial.ipynb)'
- en: '[Gallery generated by Sphinx-Gallery](https://sphinx-gallery.github.io)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sphinx-Gallery生成的画廊](https://sphinx-gallery.github.io)'

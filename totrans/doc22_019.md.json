["```py\n// Called somewhere in the program beginning\nvoid  init()  {\n  // Sample one in a hundred operator runs randomly\n  addGlobalCallback(\n  RecordFunctionCallback(\n  &onFunctionEnter,\n  &onFunctionExit)\n  .needsInputs(true)\n  .samplingProb(0.01)\n  );\n  // Note, to enable observers in the model calling thread,\n  // call enableRecordFunction() in the thread before running a model\n}\n\nvoid  onFunctionEnter(const  RecordFunction&  fn)  {\n  std::cerr  <<  \"Before function \"  <<  fn.name()\n  <<  \" with \"  <<  fn.inputs().size()  <<  \" inputs\"  <<  std::endl;\n}\n\nvoid  onFunctionExit(const  RecordFunction&  fn)  {\n  std::cerr  <<  \"After function \"  <<  fn.name();\n} \n```", "```py\nSetAPIUsageLogger([](const  std::string&  event_name)  {\n  std::cerr  <<  \"API was used: \"  <<  event_name  <<  std::endl;\n}); \n```", "```py\nSetExportModuleExtraFilesHook([](const  Module&)  {\n  ExtraFilesMap  files;\n  files[\"producer_info.json\"]  =  \"{\\\"user\\\": \\\"\"  +  getenv(\"USER\")  +  \"\\\"}\";\n  return  files;\n}); \n```"]
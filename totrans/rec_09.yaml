- en: torchrec.models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/torchrec/torchrec.models.html](https://pytorch.org/torchrec/torchrec.models.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## torchrec.models.deepfm[](#module-torchrec.models.deepfm "Permalink to this
    heading")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Bases: `Module`'
  prefs: []
  type: TYPE_NORMAL
- en: Processes the dense features of DeepFMNN model. Output layer is sized to the
    embedding_dimension of the EmbeddingBagCollection embeddings.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**in_features** (*int*) – dimensionality of the dense input features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**hidden_layer_size** (*int*) – sizes of the hidden layers in the DenseArch.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**embedding_dim** (*int*) – the same size of the embedding_dimension of sparseArch.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**device** (*torch.device*) – default compute device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**features** (*torch.Tensor*) – size B X num_features.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: an output tensor of size B X D.
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: torch.Tensor
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Bases: `Module`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Processes the output of both SparseArch (sparse_features) and DenseArch (dense_features)
    and apply the general DeepFM interaction according to the external source of DeepFM
    paper: [https://arxiv.org/pdf/1703.04247.pdf](https://arxiv.org/pdf/1703.04247.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: The output dimension is expected to be a cat of dense_features, D.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**fm_in_features** (*int*) – the input dimension of dense_module in DeepFM.
    For example, if the input embeddings is [randn(3, 2, 3), randn(3, 4, 5)], then
    the fm_in_features should be: 2 * 3 + 4 * 5.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**sparse_feature_names** (*List**[**str**]*) – length of F.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**deep_fm_dimension** (*int*) – output of the deep interaction (DI) in the
    DeepFM arch.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dense_features** (*torch.Tensor*) – tensor of size B X D.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**sparse_features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) – KJT of size F * D X B.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: an output tensor of size B X (D + DI + 1).
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: torch.Tensor
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Bases: `Module`'
  prefs: []
  type: TYPE_NORMAL
- en: Final Arch - simple MLP. The output is just one target.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**in_features** (*int*) – the output dimension of the interaction arch.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**features** (*torch.Tensor*) –'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: an output tensor of size B X 1.
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: torch.Tensor
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Bases: `Module`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Basic recsys module with DeepFM arch. Processes sparse features by learning
    pooled embeddings for each feature. Learns the relationship between dense features
    and sparse features by projecting dense features into the same embedding space.
    Learns the interaction among those dense and sparse features by deep_fm proposed
    in this paper: [https://arxiv.org/pdf/1703.04247.pdf](https://arxiv.org/pdf/1703.04247.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: The module assumes all sparse features have the same embedding dimension (i.e,
    each EmbeddingBagConfig uses the same embedding_dim)
  prefs: []
  type: TYPE_NORMAL
- en: 'The following notation is used throughout the documentation for the models:'
  prefs: []
  type: TYPE_NORMAL
- en: 'F: number of sparse features'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'D: embedding_dimension of sparse features'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'B: batch size'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'num_features: number of dense features'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**num_dense_features** (*int*) – the number of input dense features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**embedding_bag_collection** ([*EmbeddingBagCollection*](torchrec.modules.html#torchrec.modules.embedding_modules.EmbeddingBagCollection
    "torchrec.modules.embedding_modules.EmbeddingBagCollection")) – collection of
    embedding bags used to define SparseArch.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**hidden_layer_size** (*int*) – the hidden layer size used in dense module.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**deep_fm_dimension** (*int*) – the output layer size used in deep_fm’s deep
    interaction module.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dense_features** (*torch.Tensor*) – the dense features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**sparse_features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) – the sparse features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: logits with size B X 1.
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: torch.Tensor
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Bases: `Module`'
  prefs: []
  type: TYPE_NORMAL
- en: Processes the sparse features of the DeepFMNN model. Does embedding lookups
    for all EmbeddingBag and embedding features of each collection.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**embedding_bag_collection** ([*EmbeddingBagCollection*](torchrec.modules.html#torchrec.modules.embedding_modules.EmbeddingBagCollection
    "torchrec.modules.embedding_modules.EmbeddingBagCollection")) – represents a collection
    of pooled embeddings.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) –'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: an output KJT of size F * D X B.
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[KeyedJaggedTensor](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: torchrec.models.dlrm[](#torchrec-models-dlrm "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Module contents[](#module-contents "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL

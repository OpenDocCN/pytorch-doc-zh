- en: Transfer Learning for Computer Vision Tutorial
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算机视觉迁移学习教程
- en: 原文：[https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html](https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html](https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Click [here](#sphx-glr-download-beginner-transfer-learning-tutorial-py) to download
    the full example code
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 点击[这里](#sphx-glr-download-beginner-transfer-learning-tutorial-py)下载完整的示例代码
- en: '**Author**: [Sasank Chilamkurthy](https://chsasank.github.io)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者**：[Sasank Chilamkurthy](https://chsasank.github.io)'
- en: In this tutorial, you will learn how to train a convolutional neural network
    for image classification using transfer learning. You can read more about the
    transfer learning at [cs231n notes](https://cs231n.github.io/transfer-learning/)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，您将学习如何使用迁移学习训练卷积神经网络进行图像分类。您可以在[cs231n笔记](https://cs231n.github.io/transfer-learning/)中阅读更多关于迁移学习的信息
- en: Quoting these notes,
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 引用这些笔记，
- en: In practice, very few people train an entire Convolutional Network from scratch
    (with random initialization), because it is relatively rare to have a dataset
    of sufficient size. Instead, it is common to pretrain a ConvNet on a very large
    dataset (e.g. ImageNet, which contains 1.2 million images with 1000 categories),
    and then use the ConvNet either as an initialization or a fixed feature extractor
    for the task of interest.
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 实际上，很少有人从头开始训练整个卷积网络（使用随机初始化），因为拥有足够大小的数据集相对较少。相反，通常是在非常大的数据集上预训练一个卷积网络（例如ImageNet，其中包含120万张带有1000个类别的图像），然后将卷积网络用作感兴趣任务的初始化或固定特征提取器。
- en: 'These two major transfer learning scenarios look as follows:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种主要的迁移学习场景如下：
- en: '**Finetuning the ConvNet**: Instead of random initialization, we initialize
    the network with a pretrained network, like the one that is trained on imagenet
    1000 dataset. Rest of the training looks as usual.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**微调卷积网络**：与随机初始化不同，我们使用预训练网络来初始化网络，比如在imagenet 1000数据集上训练的网络。其余的训练看起来和往常一样。'
- en: '**ConvNet as fixed feature extractor**: Here, we will freeze the weights for
    all of the network except that of the final fully connected layer. This last fully
    connected layer is replaced with a new one with random weights and only this layer
    is trained.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**卷积网络作为固定特征提取器**：在这里，我们将冻结所有网络的权重，除了最后的全连接层之外。这个最后的全连接层被替换为一个具有随机权重的新层，只训练这一层。'
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Load Data
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载数据
- en: We will use torchvision and torch.utils.data packages for loading the data.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用torchvision和torch.utils.data包来加载数据。
- en: The problem we’re going to solve today is to train a model to classify **ants**
    and **bees**. We have about 120 training images each for ants and bees. There
    are 75 validation images for each class. Usually, this is a very small dataset
    to generalize upon, if trained from scratch. Since we are using transfer learning,
    we should be able to generalize reasonably well.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们今天要解决的问题是训练一个模型来分类**蚂蚁**和**蜜蜂**。我们每类有大约120张蚂蚁和蜜蜂的训练图像。每个类别有75张验证图像。通常，如果从头开始训练，这是一个非常小的数据集来进行泛化。由于我们使用迁移学习，我们应该能够相当好地泛化。
- en: This dataset is a very small subset of imagenet.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据集是imagenet的一个非常小的子集。
- en: Note
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Download the data from [here](https://download.pytorch.org/tutorial/hymenoptera_data.zip)
    and extract it to the current directory.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 从[这里](https://download.pytorch.org/tutorial/hymenoptera_data.zip)下载数据并将其解压到当前目录。
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Visualize a few images
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可视化一些图像
- en: Let’s visualize a few training images so as to understand the data augmentations.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们可视化一些训练图像，以便了解数据增强。
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![[''ants'', ''ants'', ''ants'', ''ants'']](../Images/be538c850b645a41a7a77ff388954e14.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![[''蚂蚁''，''蚂蚁''，''蚂蚁''，''蚂蚁'']]（../Images/be538c850b645a41a7a77ff388954e14.png）'
- en: Training the model
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练模型
- en: 'Now, let’s write a general function to train a model. Here, we will illustrate:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们编写一个通用的函数来训练一个模型。在这里，我们将说明：
- en: Scheduling the learning rate
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整学习率
- en: Saving the best model
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存最佳模型
- en: In the following, parameter `scheduler` is an LR scheduler object from `torch.optim.lr_scheduler`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面，参数`scheduler`是来自`torch.optim.lr_scheduler`的LR调度器对象。
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Visualizing the model predictions
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可视化模型预测
- en: Generic function to display predictions for a few images
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 用于显示几张图像预测的通用函数
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Finetuning the ConvNet
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 微调卷积网络
- en: Load a pretrained model and reset final fully connected layer.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 加载一个预训练模型并重置最终的全连接层。
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Train and evaluate
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练和评估
- en: It should take around 15-25 min on CPU. On GPU though, it takes less than a
    minute.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在CPU上应该需要大约15-25分钟。但在GPU上，不到一分钟。
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![predicted: ants, predicted: bees, predicted: ants, predicted: bees, predicted:
    bees, predicted: ants](../Images/ebec7787362bc53fe2289e5740da5756.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![预测：蚂蚁，预测：蜜蜂，预测：蚂蚁，预测：蜜蜂，预测：蜜蜂，预测：蚂蚁](../Images/ebec7787362bc53fe2289e5740da5756.png)'
- en: ConvNet as fixed feature extractor
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 卷积网络作为固定特征提取器
- en: Here, we need to freeze all the network except the final layer. We need to set
    `requires_grad = False` to freeze the parameters so that the gradients are not
    computed in `backward()`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们需要冻结除最后一层之外的所有网络。我们需要将`requires_grad = False`设置为冻结参数，以便在`backward()`中不计算梯度。
- en: You can read more about this in the documentation [here](https://pytorch.org/docs/notes/autograd.html#excluding-subgraphs-from-backward).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在文档中阅读更多信息[这里](https://pytorch.org/docs/notes/autograd.html#excluding-subgraphs-from-backward)。
- en: '[PRE11]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Train and evaluate
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练和评估
- en: On CPU this will take about half the time compared to previous scenario. This
    is expected as gradients don’t need to be computed for most of the network. However,
    forward does need to be computed.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在CPU上，这将比以前的情况快大约一半的时间。这是预期的，因为大部分网络不需要计算梯度。然而，前向计算是需要的。
- en: '[PRE12]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![predicted: bees, predicted: ants, predicted: bees, predicted: bees, predicted:
    ants, predicted: ants](../Images/54625e60404f9c98f34cf32ca56bb118.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![预测：蜜蜂，预测：蚂蚁，预测：蜜蜂，预测：蜜蜂，预测：蚂蚁，预测：蚂蚁](../Images/54625e60404f9c98f34cf32ca56bb118.png)'
- en: Inference on custom images
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对自定义图像进行推断
- en: Use the trained model to make predictions on custom images and visualize the
    predicted class labels along with the images.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用训练好的模型对自定义图像进行预测并可视化预测的类标签以及图像。
- en: '[PRE15]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Predicted: bees](../Images/17f1055ace5b29777ddd62bd25d3df8f.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![预测：蜜蜂](../Images/17f1055ace5b29777ddd62bd25d3df8f.png)'
- en: Further Learning
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步学习
- en: If you would like to learn more about the applications of transfer learning,
    checkout our [Quantized Transfer Learning for Computer Vision Tutorial](https://pytorch.org/tutorials/intermediate/quantized_transfer_learning_tutorial.html).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于迁移学习应用的信息，请查看我们的[计算机视觉迁移学习量化教程](https://pytorch.org/tutorials/intermediate/quantized_transfer_learning_tutorial.html)。
- en: '**Total running time of the script:** ( 1 minutes 36.689 seconds)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**脚本的总运行时间：**（1分钟36.689秒）'
- en: '[`Download Python source code: transfer_learning_tutorial.py`](../_downloads/d923ca53b1bfbeb3c222ae46d65d485e/transfer_learning_tutorial.py)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载Python源代码：transfer_learning_tutorial.py`](../_downloads/d923ca53b1bfbeb3c222ae46d65d485e/transfer_learning_tutorial.py)'
- en: '[`Download Jupyter notebook: transfer_learning_tutorial.ipynb`](../_downloads/74249e7f9f1f398f57ccd094a4f3021b/transfer_learning_tutorial.ipynb)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载Jupyter笔记本：transfer_learning_tutorial.ipynb`](../_downloads/74249e7f9f1f398f57ccd094a4f3021b/transfer_learning_tutorial.ipynb)'
- en: '[Gallery generated by Sphinx-Gallery](https://sphinx-gallery.github.io)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sphinx-Gallery生成的图库](https://sphinx-gallery.github.io)'

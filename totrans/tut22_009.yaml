- en: Transforms
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转换
- en: 原文：[https://pytorch.org/tutorials/beginner/basics/transforms_tutorial.html](https://pytorch.org/tutorials/beginner/basics/transforms_tutorial.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/tutorials/beginner/basics/transforms_tutorial.html](https://pytorch.org/tutorials/beginner/basics/transforms_tutorial.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Click [here](#sphx-glr-download-beginner-basics-transforms-tutorial-py) to download
    the full example code
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 点击[这里](#sphx-glr-download-beginner-basics-transforms-tutorial-py)下载完整示例代码
- en: '[Learn the Basics](intro.html) || [Quickstart](quickstart_tutorial.html) ||
    [Tensors](tensorqs_tutorial.html) || [Datasets & DataLoaders](data_tutorial.html)
    || **Transforms** || [Build Model](buildmodel_tutorial.html) || [Autograd](autogradqs_tutorial.html)
    || [Optimization](optimization_tutorial.html) || [Save & Load Model](saveloadrun_tutorial.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[学习基础知识](intro.html) || [快速入门](quickstart_tutorial.html) || [张量](tensorqs_tutorial.html)
    || [数据集和数据加载器](data_tutorial.html) || **转换** || [构建模型](buildmodel_tutorial.html)
    || [自动求导](autogradqs_tutorial.html) || [优化](optimization_tutorial.html) || [保存和加载模型](saveloadrun_tutorial.html)'
- en: Data does not always come in its final processed form that is required for training
    machine learning algorithms. We use **transforms** to perform some manipulation
    of the data and make it suitable for training.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 数据并不总是以训练机器学习算法所需的最终处理形式出现。我们使用**转换**对数据进行一些处理，使其适合训练。
- en: All TorchVision datasets have two parameters -`transform` to modify the features
    and `target_transform` to modify the labels - that accept callables containing
    the transformation logic. The [torchvision.transforms](https://pytorch.org/vision/stable/transforms.html)
    module offers several commonly-used transforms out of the box.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 所有TorchVision数据集都有两个参数-`transform`用于修改特征和`target_transform`用于修改标签-接受包含转换逻辑的可调用对象。[torchvision.transforms](https://pytorch.org/vision/stable/transforms.html)模块提供了几种常用的转换。
- en: The FashionMNIST features are in PIL Image format, and the labels are integers.
    For training, we need the features as normalized tensors, and the labels as one-hot
    encoded tensors. To make these transformations, we use `ToTensor` and `Lambda`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: FashionMNIST的特征以PIL图像格式呈现，标签为整数。对于训练，我们需要将特征作为标准化张量，将标签作为独热编码张量。为了进行这些转换，我们使用`ToTensor`和`Lambda`。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: ToTensor()
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ToTensor()
- en: '[ToTensor](https://pytorch.org/vision/stable/transforms.html#torchvision.transforms.ToTensor)
    converts a PIL image or NumPy `ndarray` into a `FloatTensor`. and scales the image’s
    pixel intensity values in the range [0., 1.]'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[ToTensor](https://pytorch.org/vision/stable/transforms.html#torchvision.transforms.ToTensor)将PIL图像或NumPy
    `ndarray`转换为`FloatTensor`。并将图像的像素强度值缩放到范围[0., 1.]内。'
- en: Lambda Transforms
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lambda转换
- en: Lambda transforms apply any user-defined lambda function. Here, we define a
    function to turn the integer into a one-hot encoded tensor. It first creates a
    zero tensor of size 10 (the number of labels in our dataset) and calls [scatter_](https://pytorch.org/docs/stable/generated/torch.Tensor.scatter_.html)
    which assigns a `value=1` on the index as given by the label `y`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Lambda转换应用任何用户定义的lambda函数。在这里，我们定义一个函数将整数转换为一个独热编码的张量。它首先创建一个大小为10的零张量（数据集中标签的数量），然后调用[scatter_](https://pytorch.org/docs/stable/generated/torch.Tensor.scatter_.html)，该函数根据标签`y`给定的索引分配`value=1`。
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '* * *'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Further Reading
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '[torchvision.transforms API](https://pytorch.org/vision/stable/transforms.html)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[torchvision.transforms API](https://pytorch.org/vision/stable/transforms.html)'
- en: '**Total running time of the script:** ( 0 minutes 4.410 seconds)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**脚本的总运行时间：**（0分钟4.410秒）'
- en: '[`Download Python source code: transforms_tutorial.py`](../../_downloads/2f1ec3031a7101e25403c5d53a40a401/transforms_tutorial.py)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载Python源代码：transforms_tutorial.py`](../../_downloads/2f1ec3031a7101e25403c5d53a40a401/transforms_tutorial.py)'
- en: '[`Download Jupyter notebook: transforms_tutorial.ipynb`](../../_downloads/9bdb71ef4a637dc36fb461904ccb7056/transforms_tutorial.ipynb)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载Jupyter笔记本：transforms_tutorial.ipynb`](../../_downloads/9bdb71ef4a637dc36fb461904ccb7056/transforms_tutorial.ipynb)'
- en: '[Gallery generated by Sphinx-Gallery](https://sphinx-gallery.github.io)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sphinx-Gallery生成的画廊](https://sphinx-gallery.github.io)'

- en: Named Tensors operator coverage
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 具名张量操作覆盖范围
- en: 原文：[https://pytorch.org/docs/stable/name_inference.html](https://pytorch.org/docs/stable/name_inference.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/docs/stable/name_inference.html](https://pytorch.org/docs/stable/name_inference.html)
- en: Please read [Named Tensors](named_tensor.html#named-tensors-doc) first for an
    introduction to named tensors.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 请先阅读[具名张量](named_tensor.html#named-tensors-doc)以了解具名张量的介绍。
- en: 'This document is a reference for *name inference*, a process that defines how
    named tensors:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档是关于*名称推断*的参考，该过程定义了具名张量如何：
- en: use names to provide additional automatic runtime correctness checks
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用名称提供额外的自动运行时正确性检查
- en: propagate names from input tensors to output tensors
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从输入张量传播名称到输出张量
- en: Below is a list of all operations that are supported with named tensors and
    their associated name inference rules.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是所有支持具名张量及其相关名称推断规则的操作列表。
- en: If you don’t see an operation listed here, but it would help your use case,
    please [search if an issue has already been filed](https://github.com/pytorch/pytorch/issues?q=is%3Aopen+is%3Aissue+label%3A%22module%3A+named+tensor%22)
    and if not, [file one](https://github.com/pytorch/pytorch/issues/new/choose).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在此处找不到所需的操作，请查看是否已经提交了问题，如果没有，请提交一个。
- en: Warning
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: The named tensor API is experimental and subject to change.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 具名张量API是实验性的，可能会发生变化。
- en: Supported Operations
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的操作
- en: '| API | Name inference rule |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| API | 名称推断规则 |'
- en: '| --- | --- |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| [`Tensor.abs()`](generated/torch.Tensor.abs.html#torch.Tensor.abs "torch.Tensor.abs"),
    [`torch.abs()`](generated/torch.abs.html#torch.abs "torch.abs") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.abs()`](generated/torch.Tensor.abs.html#torch.Tensor.abs "torch.Tensor.abs"),
    [`torch.abs()`](generated/torch.abs.html#torch.abs "torch.abs") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.abs_()`](generated/torch.Tensor.abs_.html#torch.Tensor.abs_ "torch.Tensor.abs_")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.abs_()`](generated/torch.Tensor.abs_.html#torch.Tensor.abs_ "torch.Tensor.abs_")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.acos()`](generated/torch.Tensor.acos.html#torch.Tensor.acos "torch.Tensor.acos"),
    [`torch.acos()`](generated/torch.acos.html#torch.acos "torch.acos") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.acos()`](generated/torch.Tensor.acos.html#torch.Tensor.acos "torch.Tensor.acos"),
    [`torch.acos()`](generated/torch.acos.html#torch.acos "torch.acos") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.acos_()`](generated/torch.Tensor.acos_.html#torch.Tensor.acos_ "torch.Tensor.acos_")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.acos_()`](generated/torch.Tensor.acos_.html#torch.Tensor.acos_ "torch.Tensor.acos_")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.add()`](generated/torch.Tensor.add.html#torch.Tensor.add "torch.Tensor.add"),
    [`torch.add()`](generated/torch.add.html#torch.add "torch.add") | [Unifies names
    from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.add()`](generated/torch.Tensor.add.html#torch.Tensor.add "torch.Tensor.add"),
    [`torch.add()`](generated/torch.add.html#torch.add "torch.add") | [统一来自输入的名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`Tensor.add_()`](generated/torch.Tensor.add_.html#torch.Tensor.add_ "torch.Tensor.add_")
    | [Unifies names from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.add_()`](generated/torch.Tensor.add_.html#torch.Tensor.add_ "torch.Tensor.add_")
    | [统一来自输入的名称](#unifies-names-from-inputs-doc) |'
- en: '| [`Tensor.addmm()`](generated/torch.Tensor.addmm.html#torch.Tensor.addmm "torch.Tensor.addmm"),
    [`torch.addmm()`](generated/torch.addmm.html#torch.addmm "torch.addmm") | [Contracts
    away dims](#contracts-away-dims-doc) |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.addmm()`](generated/torch.Tensor.addmm.html#torch.Tensor.addmm "torch.Tensor.addmm"),
    [`torch.addmm()`](generated/torch.addmm.html#torch.addmm "torch.addmm") | [消除维度](#contracts-away-dims-doc)
    |'
- en: '| [`Tensor.addmm_()`](generated/torch.Tensor.addmm_.html#torch.Tensor.addmm_
    "torch.Tensor.addmm_") | [Contracts away dims](#contracts-away-dims-doc) |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.addmm_()`](generated/torch.Tensor.addmm_.html#torch.Tensor.addmm_
    "torch.Tensor.addmm_") | [消除维度](#contracts-away-dims-doc) |'
- en: '| [`Tensor.addmv()`](generated/torch.Tensor.addmv.html#torch.Tensor.addmv "torch.Tensor.addmv"),
    [`torch.addmv()`](generated/torch.addmv.html#torch.addmv "torch.addmv") | [Contracts
    away dims](#contracts-away-dims-doc) |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.addmv()`](generated/torch.Tensor.addmv.html#torch.Tensor.addmv "torch.Tensor.addmv"),
    [`torch.addmv()`](generated/torch.addmv.html#torch.addmv "torch.addmv") | [消除维度](#contracts-away-dims-doc)
    |'
- en: '| [`Tensor.addmv_()`](generated/torch.Tensor.addmv_.html#torch.Tensor.addmv_
    "torch.Tensor.addmv_") | [Contracts away dims](#contracts-away-dims-doc) |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.addmv_()`](generated/torch.Tensor.addmv_.html#torch.Tensor.addmv_
    "torch.Tensor.addmv_") | [消除维度](#contracts-away-dims-doc) |'
- en: '| [`Tensor.align_as()`](named_tensor.html#torch.Tensor.align_as "torch.Tensor.align_as")
    | See documentation |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.align_as()`](named_tensor.html#torch.Tensor.align_as "torch.Tensor.align_as")
    | 查看文档 |'
- en: '| [`Tensor.align_to()`](named_tensor.html#torch.Tensor.align_to "torch.Tensor.align_to")
    | See documentation |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.align_to()`](named_tensor.html#torch.Tensor.align_to "torch.Tensor.align_to")
    | 查看文档 |'
- en: '| [`Tensor.all()`](generated/torch.Tensor.all.html#torch.Tensor.all "torch.Tensor.all"),
    [`torch.all()`](generated/torch.all.html#torch.all "torch.all") | None |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.all()`](generated/torch.Tensor.all.html#torch.Tensor.all "torch.Tensor.all"),
    [`torch.all()`](generated/torch.all.html#torch.all "torch.all") | 无 |'
- en: '| [`Tensor.any()`](generated/torch.Tensor.any.html#torch.Tensor.any "torch.Tensor.any"),
    [`torch.any()`](generated/torch.any.html#torch.any "torch.any") | None |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.any()`](generated/torch.Tensor.any.html#torch.Tensor.any "torch.Tensor.any"),
    [`torch.any()`](generated/torch.any.html#torch.any "torch.any") | 无 |'
- en: '| [`Tensor.asin()`](generated/torch.Tensor.asin.html#torch.Tensor.asin "torch.Tensor.asin"),
    [`torch.asin()`](generated/torch.asin.html#torch.asin "torch.asin") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.asin()`](generated/torch.Tensor.asin.html#torch.Tensor.asin "torch.Tensor.asin"),
    [`torch.asin()`](generated/torch.asin.html#torch.asin "torch.asin") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.asin_()`](generated/torch.Tensor.asin_.html#torch.Tensor.asin_ "torch.Tensor.asin_")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.asin_()`](generated/torch.Tensor.asin_.html#torch.Tensor.asin_ "torch.Tensor.asin_")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.atan()`](generated/torch.Tensor.atan.html#torch.Tensor.atan "torch.Tensor.atan"),
    [`torch.atan()`](generated/torch.atan.html#torch.atan "torch.atan") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.atan()`](generated/torch.Tensor.atan.html#torch.Tensor.atan "torch.Tensor.atan"),
    [`torch.atan()`](generated/torch.atan.html#torch.atan "torch.atan") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.atan2()`](generated/torch.Tensor.atan2.html#torch.Tensor.atan2 "torch.Tensor.atan2"),
    [`torch.atan2()`](generated/torch.atan2.html#torch.atan2 "torch.atan2") | [Unifies
    names from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.atan2()`](generated/torch.Tensor.atan2.html#torch.Tensor.atan2 "torch.Tensor.atan2"),
    [`torch.atan2()`](generated/torch.atan2.html#torch.atan2 "torch.atan2") | [统一来自输入的名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`Tensor.atan2_()`](generated/torch.Tensor.atan2_.html#torch.Tensor.atan2_
    "torch.Tensor.atan2_") | [Unifies names from inputs](#unifies-names-from-inputs-doc)
    |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.atan2_()`](generated/torch.Tensor.atan2_.html#torch.Tensor.atan2_
    "torch.Tensor.atan2_") | [统一来自输入的名称](#unifies-names-from-inputs-doc) |'
- en: '| [`Tensor.atan_()`](generated/torch.Tensor.atan_.html#torch.Tensor.atan_ "torch.Tensor.atan_")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.atan_()`](generated/torch.Tensor.atan_.html#torch.Tensor.atan_ "torch.Tensor.atan_")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.bernoulli()`](generated/torch.Tensor.bernoulli.html#torch.Tensor.bernoulli
    "torch.Tensor.bernoulli"), [`torch.bernoulli()`](generated/torch.bernoulli.html#torch.bernoulli
    "torch.bernoulli") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.bernoulli()`](generated/torch.Tensor.bernoulli.html#torch.Tensor.bernoulli
    "torch.Tensor.bernoulli"), [`torch.bernoulli()`](generated/torch.bernoulli.html#torch.bernoulli
    "torch.bernoulli") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.bernoulli_()`](generated/torch.Tensor.bernoulli_.html#torch.Tensor.bernoulli_
    "torch.Tensor.bernoulli_") | None |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.bernoulli_()`](generated/torch.Tensor.bernoulli_.html#torch.Tensor.bernoulli_
    "torch.Tensor.bernoulli_") | 无 |'
- en: '| [`Tensor.bfloat16()`](generated/torch.Tensor.bfloat16.html#torch.Tensor.bfloat16
    "torch.Tensor.bfloat16") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.bfloat16()`](generated/torch.Tensor.bfloat16.html#torch.Tensor.bfloat16
    "torch.Tensor.bfloat16") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.bitwise_not()`](generated/torch.Tensor.bitwise_not.html#torch.Tensor.bitwise_not
    "torch.Tensor.bitwise_not"), [`torch.bitwise_not()`](generated/torch.bitwise_not.html#torch.bitwise_not
    "torch.bitwise_not") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.bitwise_not()`](generated/torch.Tensor.bitwise_not.html#torch.Tensor.bitwise_not
    "torch.Tensor.bitwise_not"), [`torch.bitwise_not()`](generated/torch.bitwise_not.html#torch.bitwise_not
    "torch.bitwise_not") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.bitwise_not_()`](generated/torch.Tensor.bitwise_not_.html#torch.Tensor.bitwise_not_
    "torch.Tensor.bitwise_not_") | None |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.bitwise_not_()`](generated/torch.Tensor.bitwise_not_.html#torch.Tensor.bitwise_not_
    "torch.Tensor.bitwise_not_") | 无 |'
- en: '| [`Tensor.bmm()`](generated/torch.Tensor.bmm.html#torch.Tensor.bmm "torch.Tensor.bmm"),
    [`torch.bmm()`](generated/torch.bmm.html#torch.bmm "torch.bmm") | [Contracts away
    dims](#contracts-away-dims-doc) |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.bmm()`](generated/torch.Tensor.bmm.html#torch.Tensor.bmm "torch.Tensor.bmm"),
    [`torch.bmm()`](generated/torch.bmm.html#torch.bmm "torch.bmm") | [消除维度](#contracts-away-dims-doc)
    |'
- en: '| [`Tensor.bool()`](generated/torch.Tensor.bool.html#torch.Tensor.bool "torch.Tensor.bool")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.bool()`](generated/torch.Tensor.bool.html#torch.Tensor.bool "torch.Tensor.bool")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.byte()`](generated/torch.Tensor.byte.html#torch.Tensor.byte "torch.Tensor.byte")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.byte()`](generated/torch.Tensor.byte.html#torch.Tensor.byte "torch.Tensor.byte")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`torch.cat()`](generated/torch.cat.html#torch.cat "torch.cat") | [Unifies
    names from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.cat()`](generated/torch.cat.html#torch.cat "torch.cat") | [统一来自输入的名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`Tensor.cauchy_()`](generated/torch.Tensor.cauchy_.html#torch.Tensor.cauchy_
    "torch.Tensor.cauchy_") | None |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.cauchy_()`](generated/torch.Tensor.cauchy_.html#torch.Tensor.cauchy_
    "torch.Tensor.cauchy_") | 无 |'
- en: '| [`Tensor.ceil()`](generated/torch.Tensor.ceil.html#torch.Tensor.ceil "torch.Tensor.ceil"),
    [`torch.ceil()`](generated/torch.ceil.html#torch.ceil "torch.ceil") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.ceil()`](generated/torch.Tensor.ceil.html#torch.Tensor.ceil "torch.Tensor.ceil"),
    [`torch.ceil()`](generated/torch.ceil.html#torch.ceil "torch.ceil") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.ceil_()`](generated/torch.Tensor.ceil_.html#torch.Tensor.ceil_ "torch.Tensor.ceil_")
    | None |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.ceil_()`](generated/torch.Tensor.ceil_.html#torch.Tensor.ceil_ "torch.Tensor.ceil_")
    | 无 |'
- en: '| [`Tensor.char()`](generated/torch.Tensor.char.html#torch.Tensor.char "torch.Tensor.char")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.char()`](generated/torch.Tensor.char.html#torch.Tensor.char "torch.Tensor.char")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.chunk()`](generated/torch.Tensor.chunk.html#torch.Tensor.chunk "torch.Tensor.chunk"),
    [`torch.chunk()`](generated/torch.chunk.html#torch.chunk "torch.chunk") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.chunk()`](generated/torch.Tensor.chunk.html#torch.Tensor.chunk "torch.Tensor.chunk"),
    [`torch.chunk()`](generated/torch.chunk.html#torch.chunk "torch.chunk") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.clamp()`](generated/torch.Tensor.clamp.html#torch.Tensor.clamp "torch.Tensor.clamp"),
    [`torch.clamp()`](generated/torch.clamp.html#torch.clamp "torch.clamp") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.clamp()`](generated/torch.Tensor.clamp.html#torch.Tensor.clamp "torch.Tensor.clamp"),
    [`torch.clamp()`](generated/torch.clamp.html#torch.clamp "torch.clamp") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.clamp_()`](generated/torch.Tensor.clamp_.html#torch.Tensor.clamp_
    "torch.Tensor.clamp_") | None |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.clamp_()`](generated/torch.Tensor.clamp_.html#torch.Tensor.clamp_
    "torch.Tensor.clamp_") | 无 |'
- en: '| [`Tensor.copy_()`](generated/torch.Tensor.copy_.html#torch.Tensor.copy_ "torch.Tensor.copy_")
    | [out function and in-place variants](#out-function-semantics-doc) |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.copy_()`](generated/torch.Tensor.copy_.html#torch.Tensor.copy_ "torch.Tensor.copy_")
    | [输出函数和原地变体](#out-function-semantics-doc) |'
- en: '| [`Tensor.cos()`](generated/torch.Tensor.cos.html#torch.Tensor.cos "torch.Tensor.cos"),
    [`torch.cos()`](generated/torch.cos.html#torch.cos "torch.cos") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.cos()`](generated/torch.Tensor.cos.html#torch.Tensor.cos "torch.Tensor.cos"),
    [`torch.cos()`](generated/torch.cos.html#torch.cos "torch.cos") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.cos_()`](generated/torch.Tensor.cos_.html#torch.Tensor.cos_ "torch.Tensor.cos_")
    | None |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.cos_()`](generated/torch.Tensor.cos_.html#torch.Tensor.cos_ "torch.Tensor.cos_")
    | 无 |'
- en: '| [`Tensor.cosh()`](generated/torch.Tensor.cosh.html#torch.Tensor.cosh "torch.Tensor.cosh"),
    [`torch.cosh()`](generated/torch.cosh.html#torch.cosh "torch.cosh") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.cosh()`](generated/torch.Tensor.cosh.html#torch.Tensor.cosh "torch.Tensor.cosh"),
    [`torch.cosh()`](generated/torch.cosh.html#torch.cosh "torch.cosh") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.cosh_()`](generated/torch.Tensor.cosh_.html#torch.Tensor.cosh_ "torch.Tensor.cosh_")
    | None |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.cosh_()`](generated/torch.Tensor.cosh_.html#torch.Tensor.cosh_ "torch.Tensor.cosh_")
    | 无 |'
- en: '| [`Tensor.acosh()`](generated/torch.Tensor.acosh.html#torch.Tensor.acosh "torch.Tensor.acosh"),
    [`torch.acosh()`](generated/torch.acosh.html#torch.acosh "torch.acosh") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.acosh()`](generated/torch.Tensor.acosh.html#torch.Tensor.acosh "torch.Tensor.acosh"),
    [`torch.acosh()`](generated/torch.acosh.html#torch.acosh "torch.acosh") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.acosh_()`](generated/torch.Tensor.acosh_.html#torch.Tensor.acosh_
    "torch.Tensor.acosh_") | None |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.acosh_()`](generated/torch.Tensor.acosh_.html#torch.Tensor.acosh_
    "torch.Tensor.acosh_") | 无 |'
- en: '| [`Tensor.cpu()`](generated/torch.Tensor.cpu.html#torch.Tensor.cpu "torch.Tensor.cpu")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.cpu()`](generated/torch.Tensor.cpu.html#torch.Tensor.cpu "torch.Tensor.cpu")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.cuda()`](generated/torch.Tensor.cuda.html#torch.Tensor.cuda "torch.Tensor.cuda")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.cuda()`](generated/torch.Tensor.cuda.html#torch.Tensor.cuda "torch.Tensor.cuda")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.cumprod()`](generated/torch.Tensor.cumprod.html#torch.Tensor.cumprod
    "torch.Tensor.cumprod"), [`torch.cumprod()`](generated/torch.cumprod.html#torch.cumprod
    "torch.cumprod") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.cumprod()`](generated/torch.Tensor.cumprod.html#torch.Tensor.cumprod
    "torch.Tensor.cumprod"), [`torch.cumprod()`](generated/torch.cumprod.html#torch.cumprod
    "torch.cumprod") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.cumsum()`](generated/torch.Tensor.cumsum.html#torch.Tensor.cumsum
    "torch.Tensor.cumsum"), [`torch.cumsum()`](generated/torch.cumsum.html#torch.cumsum
    "torch.cumsum") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.cumsum()`](generated/torch.Tensor.cumsum.html#torch.Tensor.cumsum
    "torch.Tensor.cumsum"), [`torch.cumsum()`](generated/torch.cumsum.html#torch.cumsum
    "torch.cumsum") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.data_ptr()`](generated/torch.Tensor.data_ptr.html#torch.Tensor.data_ptr
    "torch.Tensor.data_ptr") | None |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.data_ptr()`](generated/torch.Tensor.data_ptr.html#torch.Tensor.data_ptr
    "torch.Tensor.data_ptr") | 无 |'
- en: '| [`Tensor.deg2rad()`](generated/torch.Tensor.deg2rad.html#torch.Tensor.deg2rad
    "torch.Tensor.deg2rad"), [`torch.deg2rad()`](generated/torch.deg2rad.html#torch.deg2rad
    "torch.deg2rad") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.deg2rad()`](generated/torch.Tensor.deg2rad.html#torch.Tensor.deg2rad
    "torch.Tensor.deg2rad"), [`torch.deg2rad()`](generated/torch.deg2rad.html#torch.deg2rad
    "torch.deg2rad") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| `Tensor.deg2rad_()` | None |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `Tensor.deg2rad_()` | 无 |'
- en: '| [`Tensor.detach()`](generated/torch.Tensor.detach.html#torch.Tensor.detach
    "torch.Tensor.detach"), `torch.detach()` | [Keeps input names](#keeps-input-names-doc)
    |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.detach()`](generated/torch.Tensor.detach.html#torch.Tensor.detach
    "torch.Tensor.detach"), `torch.detach()` | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.detach_()`](generated/torch.Tensor.detach_.html#torch.Tensor.detach_
    "torch.Tensor.detach_") | None |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.detach_()`](generated/torch.Tensor.detach_.html#torch.Tensor.detach_
    "torch.Tensor.detach_") | 无 |'
- en: '| [`Tensor.device`](generated/torch.Tensor.device.html#torch.Tensor.device
    "torch.Tensor.device"), [`torch.device()`](tensor_attributes.html#torch.device
    "torch.device") | None |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.device`](generated/torch.Tensor.device.html#torch.Tensor.device
    "torch.Tensor.device"), [`torch.device()`](tensor_attributes.html#torch.device
    "torch.device") | 无 |'
- en: '| [`Tensor.digamma()`](generated/torch.Tensor.digamma.html#torch.Tensor.digamma
    "torch.Tensor.digamma"), [`torch.digamma()`](generated/torch.digamma.html#torch.digamma
    "torch.digamma") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.digamma()`](generated/torch.Tensor.digamma.html#torch.Tensor.digamma
    "torch.Tensor.digamma"), [`torch.digamma()`](generated/torch.digamma.html#torch.digamma
    "torch.digamma") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.digamma_()`](generated/torch.Tensor.digamma_.html#torch.Tensor.digamma_
    "torch.Tensor.digamma_") | None |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.digamma_()`](generated/torch.Tensor.digamma_.html#torch.Tensor.digamma_
    "torch.Tensor.digamma_") | 无 |'
- en: '| [`Tensor.dim()`](generated/torch.Tensor.dim.html#torch.Tensor.dim "torch.Tensor.dim")
    | None |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.dim()`](generated/torch.Tensor.dim.html#torch.Tensor.dim "torch.Tensor.dim")
    | 无 |'
- en: '| [`Tensor.div()`](generated/torch.Tensor.div.html#torch.Tensor.div "torch.Tensor.div"),
    [`torch.div()`](generated/torch.div.html#torch.div "torch.div") | [Unifies names
    from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.div()`](generated/torch.Tensor.div.html#torch.Tensor.div "torch.Tensor.div"),
    [`torch.div()`](generated/torch.div.html#torch.div "torch.div") | [统一输入名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`Tensor.div_()`](generated/torch.Tensor.div_.html#torch.Tensor.div_ "torch.Tensor.div_")
    | [Unifies names from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.div_()`](generated/torch.Tensor.div_.html#torch.Tensor.div_ "torch.Tensor.div_")
    | [统一输入名称](#unifies-names-from-inputs-doc) |'
- en: '| [`Tensor.dot()`](generated/torch.Tensor.dot.html#torch.Tensor.dot "torch.Tensor.dot"),
    [`torch.dot()`](generated/torch.dot.html#torch.dot "torch.dot") | None |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.dot()`](generated/torch.Tensor.dot.html#torch.Tensor.dot "torch.Tensor.dot"),
    [`torch.dot()`](generated/torch.dot.html#torch.dot "torch.dot") | 无 |'
- en: '| [`Tensor.double()`](generated/torch.Tensor.double.html#torch.Tensor.double
    "torch.Tensor.double") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.double()`](generated/torch.Tensor.double.html#torch.Tensor.double
    "torch.Tensor.double") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.element_size()`](generated/torch.Tensor.element_size.html#torch.Tensor.element_size
    "torch.Tensor.element_size") | None |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.element_size()`](generated/torch.Tensor.element_size.html#torch.Tensor.element_size
    "torch.Tensor.element_size") | 无 |'
- en: '| [`torch.empty()`](generated/torch.empty.html#torch.empty "torch.empty") |
    [Factory functions](#factory-doc) |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.empty()`](generated/torch.empty.html#torch.empty "torch.empty") |
    [工厂函数](#factory-doc) |'
- en: '| [`torch.empty_like()`](generated/torch.empty_like.html#torch.empty_like "torch.empty_like")
    | [Factory functions](#factory-doc) |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.empty_like()`](generated/torch.empty_like.html#torch.empty_like "torch.empty_like")
    | [工厂函数](#factory-doc) |'
- en: '| [`Tensor.eq()`](generated/torch.Tensor.eq.html#torch.Tensor.eq "torch.Tensor.eq"),
    [`torch.eq()`](generated/torch.eq.html#torch.eq "torch.eq") | [Unifies names from
    inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.eq()`](generated/torch.Tensor.eq.html#torch.Tensor.eq "torch.Tensor.eq"),
    [`torch.eq()`](generated/torch.eq.html#torch.eq "torch.eq") | [统一输入名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`Tensor.erf()`](generated/torch.Tensor.erf.html#torch.Tensor.erf "torch.Tensor.erf"),
    [`torch.erf()`](generated/torch.erf.html#torch.erf "torch.erf") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.erf()`](generated/torch.Tensor.erf.html#torch.Tensor.erf "torch.Tensor.erf"),
    [`torch.erf()`](generated/torch.erf.html#torch.erf "torch.erf") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.erf_()`](generated/torch.Tensor.erf_.html#torch.Tensor.erf_ "torch.Tensor.erf_")
    | None |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.erf_()`](generated/torch.Tensor.erf_.html#torch.Tensor.erf_ "torch.Tensor.erf_")
    | 无 |'
- en: '| [`Tensor.erfc()`](generated/torch.Tensor.erfc.html#torch.Tensor.erfc "torch.Tensor.erfc"),
    [`torch.erfc()`](generated/torch.erfc.html#torch.erfc "torch.erfc") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.erfc()`](generated/torch.Tensor.erfc.html#torch.Tensor.erfc "torch.Tensor.erfc"),
    [`torch.erfc()`](generated/torch.erfc.html#torch.erfc "torch.erfc") | 保留输入名称 |'
- en: '| [`Tensor.erfc_()`](generated/torch.Tensor.erfc_.html#torch.Tensor.erfc_ "torch.Tensor.erfc_")
    | None |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.erfc_()`](generated/torch.Tensor.erfc_.html#torch.Tensor.erfc_ "torch.Tensor.erfc_")
    | 无 |'
- en: '| [`Tensor.erfinv()`](generated/torch.Tensor.erfinv.html#torch.Tensor.erfinv
    "torch.Tensor.erfinv"), [`torch.erfinv()`](generated/torch.erfinv.html#torch.erfinv
    "torch.erfinv") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.erfinv()`](generated/torch.Tensor.erfinv.html#torch.Tensor.erfinv
    "torch.Tensor.erfinv"), [`torch.erfinv()`](generated/torch.erfinv.html#torch.erfinv
    "torch.erfinv") | 保留输入名称 |'
- en: '| [`Tensor.erfinv_()`](generated/torch.Tensor.erfinv_.html#torch.Tensor.erfinv_
    "torch.Tensor.erfinv_") | None |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.erfinv_()`](generated/torch.Tensor.erfinv_.html#torch.Tensor.erfinv_
    "torch.Tensor.erfinv_") | 无 |'
- en: '| [`Tensor.exp()`](generated/torch.Tensor.exp.html#torch.Tensor.exp "torch.Tensor.exp"),
    [`torch.exp()`](generated/torch.exp.html#torch.exp "torch.exp") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.exp()`](generated/torch.Tensor.exp.html#torch.Tensor.exp "torch.Tensor.exp"),
    [`torch.exp()`](generated/torch.exp.html#torch.exp "torch.exp") | 保留输入名称 |'
- en: '| [`Tensor.exp_()`](generated/torch.Tensor.exp_.html#torch.Tensor.exp_ "torch.Tensor.exp_")
    | None |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.exp_()`](generated/torch.Tensor.exp_.html#torch.Tensor.exp_ "torch.Tensor.exp_")
    | 无 |'
- en: '| [`Tensor.expand()`](generated/torch.Tensor.expand.html#torch.Tensor.expand
    "torch.Tensor.expand") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.expand()`](generated/torch.Tensor.expand.html#torch.Tensor.expand
    "torch.Tensor.expand") | 保留输入名称 |'
- en: '| [`Tensor.expm1()`](generated/torch.Tensor.expm1.html#torch.Tensor.expm1 "torch.Tensor.expm1"),
    [`torch.expm1()`](generated/torch.expm1.html#torch.expm1 "torch.expm1") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.expm1()`](generated/torch.Tensor.expm1.html#torch.Tensor.expm1 "torch.Tensor.expm1"),
    [`torch.expm1()`](generated/torch.expm1.html#torch.expm1 "torch.expm1") | 保留输入名称
    |'
- en: '| [`Tensor.expm1_()`](generated/torch.Tensor.expm1_.html#torch.Tensor.expm1_
    "torch.Tensor.expm1_") | None |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.expm1_()`](generated/torch.Tensor.expm1_.html#torch.Tensor.expm1_
    "torch.Tensor.expm1_") | 无 |'
- en: '| [`Tensor.exponential_()`](generated/torch.Tensor.exponential_.html#torch.Tensor.exponential_
    "torch.Tensor.exponential_") | None |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.exponential_()`](generated/torch.Tensor.exponential_.html#torch.Tensor.exponential_
    "torch.Tensor.exponential_") | 无 |'
- en: '| [`Tensor.fill_()`](generated/torch.Tensor.fill_.html#torch.Tensor.fill_ "torch.Tensor.fill_")
    | None |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.fill_()`](generated/torch.Tensor.fill_.html#torch.Tensor.fill_ "torch.Tensor.fill_")
    | 无 |'
- en: '| [`Tensor.flatten()`](generated/torch.Tensor.flatten.html#torch.Tensor.flatten
    "torch.Tensor.flatten"), [`torch.flatten()`](generated/torch.flatten.html#torch.flatten
    "torch.flatten") | See documentation |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.flatten()`](generated/torch.Tensor.flatten.html#torch.Tensor.flatten
    "torch.Tensor.flatten"), [`torch.flatten()`](generated/torch.flatten.html#torch.flatten
    "torch.flatten") | 查看文档 |'
- en: '| [`Tensor.float()`](generated/torch.Tensor.float.html#torch.Tensor.float "torch.Tensor.float")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.float()`](generated/torch.Tensor.float.html#torch.Tensor.float "torch.Tensor.float")
    | 保留输入名称 |'
- en: '| [`Tensor.floor()`](generated/torch.Tensor.floor.html#torch.Tensor.floor "torch.Tensor.floor"),
    [`torch.floor()`](generated/torch.floor.html#torch.floor "torch.floor") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.floor()`](generated/torch.Tensor.floor.html#torch.Tensor.floor "torch.Tensor.floor"),
    [`torch.floor()`](generated/torch.floor.html#torch.floor "torch.floor") | 保留输入名称
    |'
- en: '| [`Tensor.floor_()`](generated/torch.Tensor.floor_.html#torch.Tensor.floor_
    "torch.Tensor.floor_") | None |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.floor_()`](generated/torch.Tensor.floor_.html#torch.Tensor.floor_
    "torch.Tensor.floor_") | 无 |'
- en: '| [`Tensor.frac()`](generated/torch.Tensor.frac.html#torch.Tensor.frac "torch.Tensor.frac"),
    [`torch.frac()`](generated/torch.frac.html#torch.frac "torch.frac") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.frac()`](generated/torch.Tensor.frac.html#torch.Tensor.frac "torch.Tensor.frac"),
    [`torch.frac()`](generated/torch.frac.html#torch.frac "torch.frac") | 保留输入名称 |'
- en: '| [`Tensor.frac_()`](generated/torch.Tensor.frac_.html#torch.Tensor.frac_ "torch.Tensor.frac_")
    | None |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.frac_()`](generated/torch.Tensor.frac_.html#torch.Tensor.frac_ "torch.Tensor.frac_")
    | 无 |'
- en: '| [`Tensor.ge()`](generated/torch.Tensor.ge.html#torch.Tensor.ge "torch.Tensor.ge"),
    [`torch.ge()`](generated/torch.ge.html#torch.ge "torch.ge") | [Unifies names from
    inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.ge()`](generated/torch.Tensor.ge.html#torch.Tensor.ge "torch.Tensor.ge"),
    [`torch.ge()`](generated/torch.ge.html#torch.ge "torch.ge") | 统一输入的名称 |'
- en: '| [`Tensor.get_device()`](generated/torch.Tensor.get_device.html#torch.Tensor.get_device
    "torch.Tensor.get_device"), `torch.get_device()` | None |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.get_device()`](generated/torch.Tensor.get_device.html#torch.Tensor.get_device
    "torch.Tensor.get_device"), `torch.get_device()` | 无 |'
- en: '| [`Tensor.grad`](generated/torch.Tensor.grad.html#torch.Tensor.grad "torch.Tensor.grad")
    | None |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.grad`](generated/torch.Tensor.grad.html#torch.Tensor.grad "torch.Tensor.grad")
    | 无 |'
- en: '| [`Tensor.gt()`](generated/torch.Tensor.gt.html#torch.Tensor.gt "torch.Tensor.gt"),
    [`torch.gt()`](generated/torch.gt.html#torch.gt "torch.gt") | [Unifies names from
    inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.gt()`](generated/torch.Tensor.gt.html#torch.Tensor.gt "torch.Tensor.gt"),
    [`torch.gt()`](generated/torch.gt.html#torch.gt "torch.gt") | 统一输入的名称 |'
- en: '| [`Tensor.half()`](generated/torch.Tensor.half.html#torch.Tensor.half "torch.Tensor.half")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.half()`](generated/torch.Tensor.half.html#torch.Tensor.half "torch.Tensor.half")
    | 保留输入名称 |'
- en: '| `Tensor.has_names()` | See documentation |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `Tensor.has_names()` | 查看文档 |'
- en: '| [`Tensor.index_fill()`](generated/torch.Tensor.index_fill.html#torch.Tensor.index_fill
    "torch.Tensor.index_fill"), `torch.index_fill()` | [Keeps input names](#keeps-input-names-doc)
    |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.index_fill()`](generated/torch.Tensor.index_fill.html#torch.Tensor.index_fill
    "torch.Tensor.index_fill"), `torch.index_fill()` | 保留输入名称 |'
- en: '| [`Tensor.index_fill_()`](generated/torch.Tensor.index_fill_.html#torch.Tensor.index_fill_
    "torch.Tensor.index_fill_") | None |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.index_fill_()`](generated/torch.Tensor.index_fill_.html#torch.Tensor.index_fill_
    "torch.Tensor.index_fill_") | 无 |'
- en: '| [`Tensor.int()`](generated/torch.Tensor.int.html#torch.Tensor.int "torch.Tensor.int")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.int()`](generated/torch.Tensor.int.html#torch.Tensor.int "torch.Tensor.int")
    | 保留输入名称 |'
- en: '| [`Tensor.is_contiguous()`](generated/torch.Tensor.is_contiguous.html#torch.Tensor.is_contiguous
    "torch.Tensor.is_contiguous") | None |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.is_contiguous()`](generated/torch.Tensor.is_contiguous.html#torch.Tensor.is_contiguous
    "torch.Tensor.is_contiguous") | 无 |'
- en: '| [`Tensor.is_cuda`](generated/torch.Tensor.is_cuda.html#torch.Tensor.is_cuda
    "torch.Tensor.is_cuda") | None |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.is_cuda`](generated/torch.Tensor.is_cuda.html#torch.Tensor.is_cuda
    "torch.Tensor.is_cuda") | 无 |'
- en: '| [`Tensor.is_floating_point()`](generated/torch.Tensor.is_floating_point.html#torch.Tensor.is_floating_point
    "torch.Tensor.is_floating_point"), [`torch.is_floating_point()`](generated/torch.is_floating_point.html#torch.is_floating_point
    "torch.is_floating_point") | None |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.is_floating_point()`](generated/torch.Tensor.is_floating_point.html#torch.Tensor.is_floating_point
    "torch.Tensor.is_floating_point"), [`torch.is_floating_point()`](generated/torch.is_floating_point.html#torch.is_floating_point
    "torch.is_floating_point") | 无 |'
- en: '| [`Tensor.is_leaf`](generated/torch.Tensor.is_leaf.html#torch.Tensor.is_leaf
    "torch.Tensor.is_leaf") | None |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.is_leaf`](generated/torch.Tensor.is_leaf.html#torch.Tensor.is_leaf
    "torch.Tensor.is_leaf") | 无 |'
- en: '| [`Tensor.is_pinned()`](generated/torch.Tensor.is_pinned.html#torch.Tensor.is_pinned
    "torch.Tensor.is_pinned") | None |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.is_pinned()`](generated/torch.Tensor.is_pinned.html#torch.Tensor.is_pinned
    "torch.Tensor.is_pinned") | 无 |'
- en: '| [`Tensor.is_shared()`](generated/torch.Tensor.is_shared.html#torch.Tensor.is_shared
    "torch.Tensor.is_shared") | None |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.is_shared()`](generated/torch.Tensor.is_shared.html#torch.Tensor.is_shared
    "torch.Tensor.is_shared") | 无 |'
- en: '| [`Tensor.is_signed()`](generated/torch.Tensor.is_signed.html#torch.Tensor.is_signed
    "torch.Tensor.is_signed"), `torch.is_signed()` | None |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.is_signed()`](generated/torch.Tensor.is_signed.html#torch.Tensor.is_signed
    "torch.Tensor.is_signed"), `torch.is_signed()` | 无 |'
- en: '| [`Tensor.is_sparse`](generated/torch.Tensor.is_sparse.html#torch.Tensor.is_sparse
    "torch.Tensor.is_sparse") | None |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.is_sparse`](generated/torch.Tensor.is_sparse.html#torch.Tensor.is_sparse
    "torch.Tensor.is_sparse") | 无 |'
- en: '| [`Tensor.is_sparse_csr`](generated/torch.Tensor.is_sparse_csr.html#torch.Tensor.is_sparse_csr
    "torch.Tensor.is_sparse_csr") | None |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.is_sparse_csr`](generated/torch.Tensor.is_sparse_csr.html#torch.Tensor.is_sparse_csr
    "torch.Tensor.is_sparse_csr") | 无 |'
- en: '| [`torch.is_tensor()`](generated/torch.is_tensor.html#torch.is_tensor "torch.is_tensor")
    | None |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.is_tensor()`](generated/torch.is_tensor.html#torch.is_tensor "torch.is_tensor")
    | 无 |'
- en: '| [`Tensor.item()`](generated/torch.Tensor.item.html#torch.Tensor.item "torch.Tensor.item")
    | None |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.item()`](generated/torch.Tensor.item.html#torch.Tensor.item "torch.Tensor.item")
    | 无 |'
- en: '| [`Tensor.itemsize`](generated/torch.Tensor.itemsize.html#torch.Tensor.itemsize
    "torch.Tensor.itemsize") | None |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.itemsize`](generated/torch.Tensor.itemsize.html#torch.Tensor.itemsize
    "torch.Tensor.itemsize") | 无 |'
- en: '| [`Tensor.kthvalue()`](generated/torch.Tensor.kthvalue.html#torch.Tensor.kthvalue
    "torch.Tensor.kthvalue"), [`torch.kthvalue()`](generated/torch.kthvalue.html#torch.kthvalue
    "torch.kthvalue") | [Removes dimensions](#removes-dimensions-doc) |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.kthvalue()`](generated/torch.Tensor.kthvalue.html#torch.Tensor.kthvalue
    "torch.Tensor.kthvalue"), [`torch.kthvalue()`](generated/torch.kthvalue.html#torch.kthvalue
    "torch.kthvalue") | [移除维度](#removes-dimensions-doc) |'
- en: '| [`Tensor.le()`](generated/torch.Tensor.le.html#torch.Tensor.le "torch.Tensor.le"),
    [`torch.le()`](generated/torch.le.html#torch.le "torch.le") | [Unifies names from
    inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.le()`](generated/torch.Tensor.le.html#torch.Tensor.le "torch.Tensor.le"),
    [`torch.le()`](generated/torch.le.html#torch.le "torch.le") | [从输入中统一名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`Tensor.log()`](generated/torch.Tensor.log.html#torch.Tensor.log "torch.Tensor.log"),
    [`torch.log()`](generated/torch.log.html#torch.log "torch.log") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.log()`](generated/torch.Tensor.log.html#torch.Tensor.log "torch.Tensor.log"),
    [`torch.log()`](generated/torch.log.html#torch.log "torch.log") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.log10()`](generated/torch.Tensor.log10.html#torch.Tensor.log10 "torch.Tensor.log10"),
    [`torch.log10()`](generated/torch.log10.html#torch.log10 "torch.log10") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.log10()`](generated/torch.Tensor.log10.html#torch.Tensor.log10 "torch.Tensor.log10"),
    [`torch.log10()`](generated/torch.log10.html#torch.log10 "torch.log10") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.log10_()`](generated/torch.Tensor.log10_.html#torch.Tensor.log10_
    "torch.Tensor.log10_") | None |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.log10_()`](generated/torch.Tensor.log10_.html#torch.Tensor.log10_
    "torch.Tensor.log10_") | 无 |'
- en: '| [`Tensor.log1p()`](generated/torch.Tensor.log1p.html#torch.Tensor.log1p "torch.Tensor.log1p"),
    [`torch.log1p()`](generated/torch.log1p.html#torch.log1p "torch.log1p") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.log1p()`](generated/torch.Tensor.log1p.html#torch.Tensor.log1p "torch.Tensor.log1p"),
    [`torch.log1p()`](generated/torch.log1p.html#torch.log1p "torch.log1p") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.log1p_()`](generated/torch.Tensor.log1p_.html#torch.Tensor.log1p_
    "torch.Tensor.log1p_") | None |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.log1p_()`](generated/torch.Tensor.log1p_.html#torch.Tensor.log1p_
    "torch.Tensor.log1p_") | 无 |'
- en: '| [`Tensor.log2()`](generated/torch.Tensor.log2.html#torch.Tensor.log2 "torch.Tensor.log2"),
    [`torch.log2()`](generated/torch.log2.html#torch.log2 "torch.log2") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.log2()`](generated/torch.Tensor.log2.html#torch.Tensor.log2 "torch.Tensor.log2"),
    [`torch.log2()`](generated/torch.log2.html#torch.log2 "torch.log2") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.log2_()`](generated/torch.Tensor.log2_.html#torch.Tensor.log2_ "torch.Tensor.log2_")
    | None |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.log2_()`](generated/torch.Tensor.log2_.html#torch.Tensor.log2_ "torch.Tensor.log2_")
    | 无 |'
- en: '| [`Tensor.log_()`](generated/torch.Tensor.log_.html#torch.Tensor.log_ "torch.Tensor.log_")
    | None |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.log_()`](generated/torch.Tensor.log_.html#torch.Tensor.log_ "torch.Tensor.log_")
    | 无 |'
- en: '| [`Tensor.log_normal_()`](generated/torch.Tensor.log_normal_.html#torch.Tensor.log_normal_
    "torch.Tensor.log_normal_") | None |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.log_normal_()`](generated/torch.Tensor.log_normal_.html#torch.Tensor.log_normal_
    "torch.Tensor.log_normal_") | 无 |'
- en: '| [`Tensor.logical_not()`](generated/torch.Tensor.logical_not.html#torch.Tensor.logical_not
    "torch.Tensor.logical_not"), [`torch.logical_not()`](generated/torch.logical_not.html#torch.logical_not
    "torch.logical_not") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.logical_not()`](generated/torch.Tensor.logical_not.html#torch.Tensor.logical_not
    "torch.Tensor.logical_not"), [`torch.logical_not()`](generated/torch.logical_not.html#torch.logical_not
    "torch.logical_not") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.logical_not_()`](generated/torch.Tensor.logical_not_.html#torch.Tensor.logical_not_
    "torch.Tensor.logical_not_") | None |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.logical_not_()`](generated/torch.Tensor.logical_not_.html#torch.Tensor.logical_not_
    "torch.Tensor.logical_not_") | 无 |'
- en: '| [`Tensor.logsumexp()`](generated/torch.Tensor.logsumexp.html#torch.Tensor.logsumexp
    "torch.Tensor.logsumexp"), [`torch.logsumexp()`](generated/torch.logsumexp.html#torch.logsumexp
    "torch.logsumexp") | [Removes dimensions](#removes-dimensions-doc) |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.logsumexp()`](generated/torch.Tensor.logsumexp.html#torch.Tensor.logsumexp
    "torch.Tensor.logsumexp"), [`torch.logsumexp()`](generated/torch.logsumexp.html#torch.logsumexp
    "torch.logsumexp") | [移除维度](#removes-dimensions-doc) |'
- en: '| [`Tensor.long()`](generated/torch.Tensor.long.html#torch.Tensor.long "torch.Tensor.long")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.long()`](generated/torch.Tensor.long.html#torch.Tensor.long "torch.Tensor.long")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.lt()`](generated/torch.Tensor.lt.html#torch.Tensor.lt "torch.Tensor.lt"),
    [`torch.lt()`](generated/torch.lt.html#torch.lt "torch.lt") | [Unifies names from
    inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.lt()`](generated/torch.Tensor.lt.html#torch.Tensor.lt "torch.Tensor.lt"),
    [`torch.lt()`](generated/torch.lt.html#torch.lt "torch.lt") | [从输入统一名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`torch.manual_seed()`](generated/torch.manual_seed.html#torch.manual_seed
    "torch.manual_seed") | None |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.manual_seed()`](generated/torch.manual_seed.html#torch.manual_seed
    "torch.manual_seed") | 无 |'
- en: '| [`Tensor.masked_fill()`](generated/torch.Tensor.masked_fill.html#torch.Tensor.masked_fill
    "torch.Tensor.masked_fill"), `torch.masked_fill()` | [Keeps input names](#keeps-input-names-doc)
    |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.masked_fill()`](generated/torch.Tensor.masked_fill.html#torch.Tensor.masked_fill
    "torch.Tensor.masked_fill"), `torch.masked_fill()` | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.masked_fill_()`](generated/torch.Tensor.masked_fill_.html#torch.Tensor.masked_fill_
    "torch.Tensor.masked_fill_") | None |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.masked_fill_()`](generated/torch.Tensor.masked_fill_.html#torch.Tensor.masked_fill_
    "torch.Tensor.masked_fill_") | 无 |'
- en: '| [`Tensor.masked_select()`](generated/torch.Tensor.masked_select.html#torch.Tensor.masked_select
    "torch.Tensor.masked_select"), [`torch.masked_select()`](generated/torch.masked_select.html#torch.masked_select
    "torch.masked_select") | Aligns mask up to input and then unifies_names_from_input_tensors
    |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.masked_select()`](generated/torch.Tensor.masked_select.html#torch.Tensor.masked_select
    "torch.Tensor.masked_select"), [`torch.masked_select()`](generated/torch.masked_select.html#torch.masked_select
    "torch.masked_select") | 将掩码与输入对齐，然后统一输入张量的名称 |'
- en: '| [`Tensor.matmul()`](generated/torch.Tensor.matmul.html#torch.Tensor.matmul
    "torch.Tensor.matmul"), [`torch.matmul()`](generated/torch.matmul.html#torch.matmul
    "torch.matmul") | [Contracts away dims](#contracts-away-dims-doc) |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.matmul()`](generated/torch.Tensor.matmul.html#torch.Tensor.matmul
    "torch.Tensor.matmul"), [`torch.matmul()`](generated/torch.matmul.html#torch.matmul
    "torch.matmul") | [消除维度](#contracts-away-dims-doc) |'
- en: '| [`Tensor.mean()`](generated/torch.Tensor.mean.html#torch.Tensor.mean "torch.Tensor.mean"),
    [`torch.mean()`](generated/torch.mean.html#torch.mean "torch.mean") | [Removes
    dimensions](#removes-dimensions-doc) |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.mean()`](generated/torch.Tensor.mean.html#torch.Tensor.mean "torch.Tensor.mean"),
    [`torch.mean()`](generated/torch.mean.html#torch.mean "torch.mean") | [移除维度](#removes-dimensions-doc)
    |'
- en: '| [`Tensor.median()`](generated/torch.Tensor.median.html#torch.Tensor.median
    "torch.Tensor.median"), [`torch.median()`](generated/torch.median.html#torch.median
    "torch.median") | [Removes dimensions](#removes-dimensions-doc) |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.median()`](generated/torch.Tensor.median.html#torch.Tensor.median
    "torch.Tensor.median"), [`torch.median()`](generated/torch.median.html#torch.median
    "torch.median") | [移除维度](#removes-dimensions-doc) |'
- en: '| [`Tensor.nanmedian()`](generated/torch.Tensor.nanmedian.html#torch.Tensor.nanmedian
    "torch.Tensor.nanmedian"), [`torch.nanmedian()`](generated/torch.nanmedian.html#torch.nanmedian
    "torch.nanmedian") | [Removes dimensions](#removes-dimensions-doc) |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.nanmedian()`](generated/torch.Tensor.nanmedian.html#torch.Tensor.nanmedian
    "torch.Tensor.nanmedian"), [`torch.nanmedian()`](generated/torch.nanmedian.html#torch.nanmedian
    "torch.nanmedian") | [移除维度](#removes-dimensions-doc) |'
- en: '| [`Tensor.mm()`](generated/torch.Tensor.mm.html#torch.Tensor.mm "torch.Tensor.mm"),
    [`torch.mm()`](generated/torch.mm.html#torch.mm "torch.mm") | [Contracts away
    dims](#contracts-away-dims-doc) |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.mm()`](generated/torch.Tensor.mm.html#torch.Tensor.mm "torch.Tensor.mm"),
    [`torch.mm()`](generated/torch.mm.html#torch.mm "torch.mm") | [消除维度](#contracts-away-dims-doc)
    |'
- en: '| [`Tensor.mode()`](generated/torch.Tensor.mode.html#torch.Tensor.mode "torch.Tensor.mode"),
    [`torch.mode()`](generated/torch.mode.html#torch.mode "torch.mode") | [Removes
    dimensions](#removes-dimensions-doc) |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.mode()`](generated/torch.Tensor.mode.html#torch.Tensor.mode "torch.Tensor.mode"),
    [`torch.mode()`](generated/torch.mode.html#torch.mode "torch.mode") | [移除维度](#removes-dimensions-doc)
    |'
- en: '| [`Tensor.mul()`](generated/torch.Tensor.mul.html#torch.Tensor.mul "torch.Tensor.mul"),
    [`torch.mul()`](generated/torch.mul.html#torch.mul "torch.mul") | [Unifies names
    from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.mul()`](generated/torch.Tensor.mul.html#torch.Tensor.mul "torch.Tensor.mul"),
    [`torch.mul()`](generated/torch.mul.html#torch.mul "torch.mul") | [从输入统一名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`Tensor.mul_()`](generated/torch.Tensor.mul_.html#torch.Tensor.mul_ "torch.Tensor.mul_")
    | [Unifies names from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.mul_()`](generated/torch.Tensor.mul_.html#torch.Tensor.mul_ "torch.Tensor.mul_")
    | [从输入统一名称](#unifies-names-from-inputs-doc) |'
- en: '| [`Tensor.mv()`](generated/torch.Tensor.mv.html#torch.Tensor.mv "torch.Tensor.mv"),
    [`torch.mv()`](generated/torch.mv.html#torch.mv "torch.mv") | [Contracts away
    dims](#contracts-away-dims-doc) |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.mv()`](generated/torch.Tensor.mv.html#torch.Tensor.mv "torch.Tensor.mv"),
    [`torch.mv()`](generated/torch.mv.html#torch.mv "torch.mv") | [消除维度](#contracts-away-dims-doc)
    |'
- en: '| [`Tensor.names`](named_tensor.html#torch.Tensor.names "torch.Tensor.names")
    | See documentation |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.names`](named_tensor.html#torch.Tensor.names "torch.Tensor.names")
    | 查看文档 |'
- en: '| [`Tensor.narrow()`](generated/torch.Tensor.narrow.html#torch.Tensor.narrow
    "torch.Tensor.narrow"), [`torch.narrow()`](generated/torch.narrow.html#torch.narrow
    "torch.narrow") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.narrow()`](generated/torch.Tensor.narrow.html#torch.Tensor.narrow
    "torch.Tensor.narrow"), [`torch.narrow()`](generated/torch.narrow.html#torch.narrow
    "torch.narrow") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.nbytes`](generated/torch.Tensor.nbytes.html#torch.Tensor.nbytes
    "torch.Tensor.nbytes") | None |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.nbytes`](generated/torch.Tensor.nbytes.html#torch.Tensor.nbytes
    "torch.Tensor.nbytes") | 无 |'
- en: '| [`Tensor.ndim`](generated/torch.Tensor.ndim.html#torch.Tensor.ndim "torch.Tensor.ndim")
    | None |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.ndim`](generated/torch.Tensor.ndim.html#torch.Tensor.ndim "torch.Tensor.ndim")
    | 无 |'
- en: '| [`Tensor.ndimension()`](generated/torch.Tensor.ndimension.html#torch.Tensor.ndimension
    "torch.Tensor.ndimension") | None |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.ndimension()`](generated/torch.Tensor.ndimension.html#torch.Tensor.ndimension
    "torch.Tensor.ndimension") | 无 |'
- en: '| [`Tensor.ne()`](generated/torch.Tensor.ne.html#torch.Tensor.ne "torch.Tensor.ne"),
    [`torch.ne()`](generated/torch.ne.html#torch.ne "torch.ne") | [Unifies names from
    inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.ne()`](generated/torch.Tensor.ne.html#torch.Tensor.ne "torch.Tensor.ne"),
    [`torch.ne()`](generated/torch.ne.html#torch.ne "torch.ne") | [统一输入名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`Tensor.neg()`](generated/torch.Tensor.neg.html#torch.Tensor.neg "torch.Tensor.neg"),
    [`torch.neg()`](generated/torch.neg.html#torch.neg "torch.neg") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.neg()`](generated/torch.Tensor.neg.html#torch.Tensor.neg "torch.Tensor.neg"),
    [`torch.neg()`](generated/torch.neg.html#torch.neg "torch.neg") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.neg_()`](generated/torch.Tensor.neg_.html#torch.Tensor.neg_ "torch.Tensor.neg_")
    | None |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.neg_()`](generated/torch.Tensor.neg_.html#torch.Tensor.neg_ "torch.Tensor.neg_")
    | 无 |'
- en: '| [`torch.normal()`](generated/torch.normal.html#torch.normal "torch.normal")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.normal()`](generated/torch.normal.html#torch.normal "torch.normal")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.normal_()`](generated/torch.Tensor.normal_.html#torch.Tensor.normal_
    "torch.Tensor.normal_") | None |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.normal_()`](generated/torch.Tensor.normal_.html#torch.Tensor.normal_
    "torch.Tensor.normal_") | 无 |'
- en: '| [`Tensor.numel()`](generated/torch.Tensor.numel.html#torch.Tensor.numel "torch.Tensor.numel"),
    [`torch.numel()`](generated/torch.numel.html#torch.numel "torch.numel") | None
    |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.numel()`](generated/torch.Tensor.numel.html#torch.Tensor.numel "torch.Tensor.numel"),
    [`torch.numel()`](generated/torch.numel.html#torch.numel "torch.numel") | 无 |'
- en: '| [`torch.ones()`](generated/torch.ones.html#torch.ones "torch.ones") | [Factory
    functions](#factory-doc) |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.ones()`](generated/torch.ones.html#torch.ones "torch.ones") | [工厂函数](#factory-doc)
    |'
- en: '| [`Tensor.pow()`](generated/torch.Tensor.pow.html#torch.Tensor.pow "torch.Tensor.pow"),
    [`torch.pow()`](generated/torch.pow.html#torch.pow "torch.pow") | [Unifies names
    from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.pow()`](generated/torch.Tensor.pow.html#torch.Tensor.pow "torch.Tensor.pow"),
    [`torch.pow()`](generated/torch.pow.html#torch.pow "torch.pow") | [统一输入名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`Tensor.pow_()`](generated/torch.Tensor.pow_.html#torch.Tensor.pow_ "torch.Tensor.pow_")
    | None |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.pow_()`](generated/torch.Tensor.pow_.html#torch.Tensor.pow_ "torch.Tensor.pow_")
    | 无 |'
- en: '| [`Tensor.prod()`](generated/torch.Tensor.prod.html#torch.Tensor.prod "torch.Tensor.prod"),
    [`torch.prod()`](generated/torch.prod.html#torch.prod "torch.prod") | [Removes
    dimensions](#removes-dimensions-doc) |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.prod()`](generated/torch.Tensor.prod.html#torch.Tensor.prod "torch.Tensor.prod"),
    [`torch.prod()`](generated/torch.prod.html#torch.prod "torch.prod") | [移除维度](#removes-dimensions-doc)
    |'
- en: '| [`Tensor.rad2deg()`](generated/torch.Tensor.rad2deg.html#torch.Tensor.rad2deg
    "torch.Tensor.rad2deg"), [`torch.rad2deg()`](generated/torch.rad2deg.html#torch.rad2deg
    "torch.rad2deg") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.rad2deg()`](generated/torch.Tensor.rad2deg.html#torch.Tensor.rad2deg
    "torch.Tensor.rad2deg"), [`torch.rad2deg()`](generated/torch.rad2deg.html#torch.rad2deg
    "torch.rad2deg") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| `Tensor.rad2deg_()` | None |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| `Tensor.rad2deg_()` | 无 |'
- en: '| [`torch.rand()`](generated/torch.rand.html#torch.rand "torch.rand") | [Factory
    functions](#factory-doc) |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.rand()`](generated/torch.rand.html#torch.rand "torch.rand") | [工厂函数](#factory-doc)
    |'
- en: '| [`torch.rand()`](generated/torch.rand.html#torch.rand "torch.rand") | [Factory
    functions](#factory-doc) |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.rand()`](generated/torch.rand.html#torch.rand "torch.rand") | [工厂函数](#factory-doc)
    |'
- en: '| [`torch.randn()`](generated/torch.randn.html#torch.randn "torch.randn") |
    [Factory functions](#factory-doc) |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.randn()`](generated/torch.randn.html#torch.randn "torch.randn") |
    [工厂函数](#factory-doc) |'
- en: '| [`torch.randn()`](generated/torch.randn.html#torch.randn "torch.randn") |
    [Factory functions](#factory-doc) |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.randn()`](generated/torch.randn.html#torch.randn "torch.randn") |
    [工厂函数](#factory-doc) |'
- en: '| [`Tensor.random_()`](generated/torch.Tensor.random_.html#torch.Tensor.random_
    "torch.Tensor.random_") | None |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.random_()`](generated/torch.Tensor.random_.html#torch.Tensor.random_
    "torch.Tensor.random_") | 无 |'
- en: '| [`Tensor.reciprocal()`](generated/torch.Tensor.reciprocal.html#torch.Tensor.reciprocal
    "torch.Tensor.reciprocal"), [`torch.reciprocal()`](generated/torch.reciprocal.html#torch.reciprocal
    "torch.reciprocal") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.reciprocal()`](generated/torch.Tensor.reciprocal.html#torch.Tensor.reciprocal
    "torch.Tensor.reciprocal"), [`torch.reciprocal()`](generated/torch.reciprocal.html#torch.reciprocal
    "torch.reciprocal") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.reciprocal_()`](generated/torch.Tensor.reciprocal_.html#torch.Tensor.reciprocal_
    "torch.Tensor.reciprocal_") | None |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.reciprocal_()`](generated/torch.Tensor.reciprocal_.html#torch.Tensor.reciprocal_
    "torch.Tensor.reciprocal_") | 无 |'
- en: '| [`Tensor.refine_names()`](named_tensor.html#torch.Tensor.refine_names "torch.Tensor.refine_names")
    | See documentation |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.refine_names()`](named_tensor.html#torch.Tensor.refine_names "torch.Tensor.refine_names")
    | 查看文档 |'
- en: '| [`Tensor.register_hook()`](generated/torch.Tensor.register_hook.html#torch.Tensor.register_hook
    "torch.Tensor.register_hook") | None |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.register_hook()`](generated/torch.Tensor.register_hook.html#torch.Tensor.register_hook
    "torch.Tensor.register_hook") | 无 |'
- en: '| [`Tensor.register_post_accumulate_grad_hook()`](generated/torch.Tensor.register_post_accumulate_grad_hook.html#torch.Tensor.register_post_accumulate_grad_hook
    "torch.Tensor.register_post_accumulate_grad_hook") | None |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.register_post_accumulate_grad_hook()`](generated/torch.Tensor.register_post_accumulate_grad_hook.html#torch.Tensor.register_post_accumulate_grad_hook
    "torch.Tensor.register_post_accumulate_grad_hook") | 无 |'
- en: '| [`Tensor.rename()`](named_tensor.html#torch.Tensor.rename "torch.Tensor.rename")
    | See documentation |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.rename()`](named_tensor.html#torch.Tensor.rename "torch.Tensor.rename")
    | 查看文档 |'
- en: '| [`Tensor.rename_()`](named_tensor.html#torch.Tensor.rename_ "torch.Tensor.rename_")
    | See documentation |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.rename_()`](named_tensor.html#torch.Tensor.rename_ "torch.Tensor.rename_")
    | 查看文档 |'
- en: '| [`Tensor.requires_grad`](generated/torch.Tensor.requires_grad.html#torch.Tensor.requires_grad
    "torch.Tensor.requires_grad") | None |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.requires_grad`](generated/torch.Tensor.requires_grad.html#torch.Tensor.requires_grad
    "torch.Tensor.requires_grad") | 无 |'
- en: '| [`Tensor.requires_grad_()`](generated/torch.Tensor.requires_grad_.html#torch.Tensor.requires_grad_
    "torch.Tensor.requires_grad_") | None |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.requires_grad_()`](generated/torch.Tensor.requires_grad_.html#torch.Tensor.requires_grad_
    "torch.Tensor.requires_grad_") | 无 |'
- en: '| [`Tensor.resize_()`](generated/torch.Tensor.resize_.html#torch.Tensor.resize_
    "torch.Tensor.resize_") | Only allow resizes that do not change shape |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.resize_()`](generated/torch.Tensor.resize_.html#torch.Tensor.resize_
    "torch.Tensor.resize_") | 仅允许不改变形状的调整 |'
- en: '| [`Tensor.resize_as_()`](generated/torch.Tensor.resize_as_.html#torch.Tensor.resize_as_
    "torch.Tensor.resize_as_") | Only allow resizes that do not change shape |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.resize_as_()`](generated/torch.Tensor.resize_as_.html#torch.Tensor.resize_as_
    "torch.Tensor.resize_as_") | 仅允许不改变形状的调整大小 |'
- en: '| [`Tensor.round()`](generated/torch.Tensor.round.html#torch.Tensor.round "torch.Tensor.round"),
    [`torch.round()`](generated/torch.round.html#torch.round "torch.round") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.round()`](generated/torch.Tensor.round.html#torch.Tensor.round "torch.Tensor.round"),
    [`torch.round()`](generated/torch.round.html#torch.round "torch.round") | 保留输入名称
    |'
- en: '| [`Tensor.round_()`](generated/torch.Tensor.round_.html#torch.Tensor.round_
    "torch.Tensor.round_") | None |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.round_()`](generated/torch.Tensor.round_.html#torch.Tensor.round_
    "torch.Tensor.round_") | 无 |'
- en: '| [`Tensor.rsqrt()`](generated/torch.Tensor.rsqrt.html#torch.Tensor.rsqrt "torch.Tensor.rsqrt"),
    [`torch.rsqrt()`](generated/torch.rsqrt.html#torch.rsqrt "torch.rsqrt") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.rsqrt()`](generated/torch.Tensor.rsqrt.html#torch.Tensor.rsqrt "torch.Tensor.rsqrt"),
    [`torch.rsqrt()`](generated/torch.rsqrt.html#torch.rsqrt "torch.rsqrt") | 保留输入名称
    |'
- en: '| [`Tensor.rsqrt_()`](generated/torch.Tensor.rsqrt_.html#torch.Tensor.rsqrt_
    "torch.Tensor.rsqrt_") | None |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.rsqrt_()`](generated/torch.Tensor.rsqrt_.html#torch.Tensor.rsqrt_
    "torch.Tensor.rsqrt_") | 无 |'
- en: '| [`Tensor.select()`](generated/torch.Tensor.select.html#torch.Tensor.select
    "torch.Tensor.select"), [`torch.select()`](generated/torch.select.html#torch.select
    "torch.select") | [Removes dimensions](#removes-dimensions-doc) |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.select()`](generated/torch.Tensor.select.html#torch.Tensor.select
    "torch.Tensor.select"), [`torch.select()`](generated/torch.select.html#torch.select
    "torch.select") | 移除维度 |'
- en: '| [`Tensor.short()`](generated/torch.Tensor.short.html#torch.Tensor.short "torch.Tensor.short")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.short()`](generated/torch.Tensor.short.html#torch.Tensor.short "torch.Tensor.short")
    | 保留输入名称 |'
- en: '| [`Tensor.sigmoid()`](generated/torch.Tensor.sigmoid.html#torch.Tensor.sigmoid
    "torch.Tensor.sigmoid"), [`torch.sigmoid()`](generated/torch.sigmoid.html#torch.sigmoid
    "torch.sigmoid") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sigmoid()`](generated/torch.Tensor.sigmoid.html#torch.Tensor.sigmoid
    "torch.Tensor.sigmoid"), [`torch.sigmoid()`](generated/torch.sigmoid.html#torch.sigmoid
    "torch.sigmoid") | 保留输入名称 |'
- en: '| [`Tensor.sigmoid_()`](generated/torch.Tensor.sigmoid_.html#torch.Tensor.sigmoid_
    "torch.Tensor.sigmoid_") | None |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sigmoid_()`](generated/torch.Tensor.sigmoid_.html#torch.Tensor.sigmoid_
    "torch.Tensor.sigmoid_") | 无 |'
- en: '| [`Tensor.sign()`](generated/torch.Tensor.sign.html#torch.Tensor.sign "torch.Tensor.sign"),
    [`torch.sign()`](generated/torch.sign.html#torch.sign "torch.sign") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sign()`](generated/torch.Tensor.sign.html#torch.Tensor.sign "torch.Tensor.sign"),
    [`torch.sign()`](generated/torch.sign.html#torch.sign "torch.sign") | 保留输入名称 |'
- en: '| [`Tensor.sign_()`](generated/torch.Tensor.sign_.html#torch.Tensor.sign_ "torch.Tensor.sign_")
    | None |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sign_()`](generated/torch.Tensor.sign_.html#torch.Tensor.sign_ "torch.Tensor.sign_")
    | 无 |'
- en: '| [`Tensor.sgn()`](generated/torch.Tensor.sgn.html#torch.Tensor.sgn "torch.Tensor.sgn"),
    [`torch.sgn()`](generated/torch.sgn.html#torch.sgn "torch.sgn") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sgn()`](generated/torch.Tensor.sgn.html#torch.Tensor.sgn "torch.Tensor.sgn"),
    [`torch.sgn()`](generated/torch.sgn.html#torch.sgn "torch.sgn") | 保留输入名称 |'
- en: '| [`Tensor.sgn_()`](generated/torch.Tensor.sgn_.html#torch.Tensor.sgn_ "torch.Tensor.sgn_")
    | None |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sgn_()`](generated/torch.Tensor.sgn_.html#torch.Tensor.sgn_ "torch.Tensor.sgn_")
    | 无 |'
- en: '| [`Tensor.sin()`](generated/torch.Tensor.sin.html#torch.Tensor.sin "torch.Tensor.sin"),
    [`torch.sin()`](generated/torch.sin.html#torch.sin "torch.sin") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sin()`](generated/torch.Tensor.sin.html#torch.Tensor.sin "torch.Tensor.sin"),
    [`torch.sin()`](generated/torch.sin.html#torch.sin "torch.sin") | 保留输入名称 |'
- en: '| [`Tensor.sin_()`](generated/torch.Tensor.sin_.html#torch.Tensor.sin_ "torch.Tensor.sin_")
    | None |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sin_()`](generated/torch.Tensor.sin_.html#torch.Tensor.sin_ "torch.Tensor.sin_")
    | 无 |'
- en: '| [`Tensor.sinh()`](generated/torch.Tensor.sinh.html#torch.Tensor.sinh "torch.Tensor.sinh"),
    [`torch.sinh()`](generated/torch.sinh.html#torch.sinh "torch.sinh") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sinh()`](generated/torch.Tensor.sinh.html#torch.Tensor.sinh "torch.Tensor.sinh"),
    [`torch.sinh()`](generated/torch.sinh.html#torch.sinh "torch.sinh") | 保留输入名称 |'
- en: '| [`Tensor.sinh_()`](generated/torch.Tensor.sinh_.html#torch.Tensor.sinh_ "torch.Tensor.sinh_")
    | None |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sinh_()`](generated/torch.Tensor.sinh_.html#torch.Tensor.sinh_ "torch.Tensor.sinh_")
    | 无 |'
- en: '| [`Tensor.asinh()`](generated/torch.Tensor.asinh.html#torch.Tensor.asinh "torch.Tensor.asinh"),
    [`torch.asinh()`](generated/torch.asinh.html#torch.asinh "torch.asinh") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.asinh()`](generated/torch.Tensor.asinh.html#torch.Tensor.asinh "torch.Tensor.asinh"),
    [`torch.asinh()`](generated/torch.asinh.html#torch.asinh "torch.asinh") | 保留输入名称
    |'
- en: '| [`Tensor.asinh_()`](generated/torch.Tensor.asinh_.html#torch.Tensor.asinh_
    "torch.Tensor.asinh_") | None |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.asinh_()`](generated/torch.Tensor.asinh_.html#torch.Tensor.asinh_
    "torch.Tensor.asinh_") | 无 |'
- en: '| [`Tensor.size()`](generated/torch.Tensor.size.html#torch.Tensor.size "torch.Tensor.size")
    | None |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.size()`](generated/torch.Tensor.size.html#torch.Tensor.size "torch.Tensor.size")
    | 无 |'
- en: '| [`Tensor.softmax()`](generated/torch.Tensor.softmax.html#torch.Tensor.softmax
    "torch.Tensor.softmax"), [`torch.softmax()`](generated/torch.softmax.html#torch.softmax
    "torch.softmax") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.softmax()`](generated/torch.Tensor.softmax.html#torch.Tensor.softmax
    "torch.Tensor.softmax"), [`torch.softmax()`](generated/torch.softmax.html#torch.softmax
    "torch.softmax") | 保留输入名称 |'
- en: '| [`Tensor.split()`](generated/torch.Tensor.split.html#torch.Tensor.split "torch.Tensor.split"),
    [`torch.split()`](generated/torch.split.html#torch.split "torch.split") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.split()`](generated/torch.Tensor.split.html#torch.Tensor.split "torch.Tensor.split"),
    [`torch.split()`](generated/torch.split.html#torch.split "torch.split") | 保留输入名称
    |'
- en: '| [`Tensor.sqrt()`](generated/torch.Tensor.sqrt.html#torch.Tensor.sqrt "torch.Tensor.sqrt"),
    [`torch.sqrt()`](generated/torch.sqrt.html#torch.sqrt "torch.sqrt") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sqrt()`](generated/torch.Tensor.sqrt.html#torch.Tensor.sqrt "torch.Tensor.sqrt"),
    [`torch.sqrt()`](generated/torch.sqrt.html#torch.sqrt "torch.sqrt") | 保留输入名称 |'
- en: '| [`Tensor.sqrt_()`](generated/torch.Tensor.sqrt_.html#torch.Tensor.sqrt_ "torch.Tensor.sqrt_")
    | None |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sqrt_()`](generated/torch.Tensor.sqrt_.html#torch.Tensor.sqrt_ "torch.Tensor.sqrt_")
    | 无 |'
- en: '| [`Tensor.squeeze()`](generated/torch.Tensor.squeeze.html#torch.Tensor.squeeze
    "torch.Tensor.squeeze"), [`torch.squeeze()`](generated/torch.squeeze.html#torch.squeeze
    "torch.squeeze") | [Removes dimensions](#removes-dimensions-doc) |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.squeeze()`](generated/torch.Tensor.squeeze.html#torch.Tensor.squeeze
    "torch.Tensor.squeeze"), [`torch.squeeze()`](generated/torch.squeeze.html#torch.squeeze
    "torch.squeeze") | [移除维度](#removes-dimensions-doc) |'
- en: '| [`Tensor.std()`](generated/torch.Tensor.std.html#torch.Tensor.std "torch.Tensor.std"),
    [`torch.std()`](generated/torch.std.html#torch.std "torch.std") | [Removes dimensions](#removes-dimensions-doc)
    |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.std()`](generated/torch.Tensor.std.html#torch.Tensor.std "torch.Tensor.std"),
    [`torch.std()`](generated/torch.std.html#torch.std "torch.std") | [移除维度](#removes-dimensions-doc)
    |'
- en: '| [`torch.std_mean()`](generated/torch.std_mean.html#torch.std_mean "torch.std_mean")
    | [Removes dimensions](#removes-dimensions-doc) |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.std_mean()`](generated/torch.std_mean.html#torch.std_mean "torch.std_mean")
    | [移除维度](#removes-dimensions-doc) |'
- en: '| [`Tensor.stride()`](generated/torch.Tensor.stride.html#torch.Tensor.stride
    "torch.Tensor.stride") | None |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.stride()`](generated/torch.Tensor.stride.html#torch.Tensor.stride
    "torch.Tensor.stride") | 无 |'
- en: '| [`Tensor.sub()`](generated/torch.Tensor.sub.html#torch.Tensor.sub "torch.Tensor.sub"),
    [`torch.sub()`](generated/torch.sub.html#torch.sub "torch.sub") | [Unifies names
    from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sub()`](generated/torch.Tensor.sub.html#torch.Tensor.sub "torch.Tensor.sub"),
    [`torch.sub()`](generated/torch.sub.html#torch.sub "torch.sub") | [统一输入的名称](#unifies-names-from-inputs-doc)
    |'
- en: '| [`Tensor.sub_()`](generated/torch.Tensor.sub_.html#torch.Tensor.sub_ "torch.Tensor.sub_")
    | [Unifies names from inputs](#unifies-names-from-inputs-doc) |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sub_()`](generated/torch.Tensor.sub_.html#torch.Tensor.sub_ "torch.Tensor.sub_")
    | [统一输入的名称](#unifies-names-from-inputs-doc) |'
- en: '| [`Tensor.sum()`](generated/torch.Tensor.sum.html#torch.Tensor.sum "torch.Tensor.sum"),
    [`torch.sum()`](generated/torch.sum.html#torch.sum "torch.sum") | [Removes dimensions](#removes-dimensions-doc)
    |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.sum()`](generated/torch.Tensor.sum.html#torch.Tensor.sum "torch.Tensor.sum"),
    [`torch.sum()`](generated/torch.sum.html#torch.sum "torch.sum") | [移除维度](#removes-dimensions-doc)
    |'
- en: '| [`Tensor.tan()`](generated/torch.Tensor.tan.html#torch.Tensor.tan "torch.Tensor.tan"),
    [`torch.tan()`](generated/torch.tan.html#torch.tan "torch.tan") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.tan()`](generated/torch.Tensor.tan.html#torch.Tensor.tan "torch.Tensor.tan"),
    [`torch.tan()`](generated/torch.tan.html#torch.tan "torch.tan") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.tan_()`](generated/torch.Tensor.tan_.html#torch.Tensor.tan_ "torch.Tensor.tan_")
    | None |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.tan_()`](generated/torch.Tensor.tan_.html#torch.Tensor.tan_ "torch.Tensor.tan_")
    | 无 |'
- en: '| [`Tensor.tanh()`](generated/torch.Tensor.tanh.html#torch.Tensor.tanh "torch.Tensor.tanh"),
    [`torch.tanh()`](generated/torch.tanh.html#torch.tanh "torch.tanh") | [Keeps input
    names](#keeps-input-names-doc) |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.tanh()`](generated/torch.Tensor.tanh.html#torch.Tensor.tanh "torch.Tensor.tanh"),
    [`torch.tanh()`](generated/torch.tanh.html#torch.tanh "torch.tanh") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.tanh_()`](generated/torch.Tensor.tanh_.html#torch.Tensor.tanh_ "torch.Tensor.tanh_")
    | None |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.tanh_()`](generated/torch.Tensor.tanh_.html#torch.Tensor.tanh_ "torch.Tensor.tanh_")
    | 无 |'
- en: '| [`Tensor.atanh()`](generated/torch.Tensor.atanh.html#torch.Tensor.atanh "torch.Tensor.atanh"),
    [`torch.atanh()`](generated/torch.atanh.html#torch.atanh "torch.atanh") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.atanh()`](generated/torch.Tensor.atanh.html#torch.Tensor.atanh "torch.Tensor.atanh"),
    [`torch.atanh()`](generated/torch.atanh.html#torch.atanh "torch.atanh") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.atanh_()`](generated/torch.Tensor.atanh_.html#torch.Tensor.atanh_
    "torch.Tensor.atanh_") | None |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.atanh_()`](generated/torch.Tensor.atanh_.html#torch.Tensor.atanh_
    "torch.Tensor.atanh_") | 无 |'
- en: '| [`torch.tensor()`](generated/torch.tensor.html#torch.tensor "torch.tensor")
    | [Factory functions](#factory-doc) |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.tensor()`](generated/torch.tensor.html#torch.tensor "torch.tensor")
    | [工厂函数](#factory-doc) |'
- en: '| [`Tensor.to()`](generated/torch.Tensor.to.html#torch.Tensor.to "torch.Tensor.to")
    | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.to()`](generated/torch.Tensor.to.html#torch.Tensor.to "torch.Tensor.to")
    | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.topk()`](generated/torch.Tensor.topk.html#torch.Tensor.topk "torch.Tensor.topk"),
    [`torch.topk()`](generated/torch.topk.html#torch.topk "torch.topk") | [Removes
    dimensions](#removes-dimensions-doc) |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.topk()`](generated/torch.Tensor.topk.html#torch.Tensor.topk "torch.Tensor.topk"),
    [`torch.topk()`](generated/torch.topk.html#torch.topk "torch.topk") | [移除维度](#removes-dimensions-doc)
    |'
- en: '| [`Tensor.transpose()`](generated/torch.Tensor.transpose.html#torch.Tensor.transpose
    "torch.Tensor.transpose"), [`torch.transpose()`](generated/torch.transpose.html#torch.transpose
    "torch.transpose") | [Permutes dimensions](#permutes-dimensions-doc) |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.transpose()`](generated/torch.Tensor.transpose.html#torch.Tensor.transpose
    "torch.Tensor.transpose"), [`torch.transpose()`](generated/torch.transpose.html#torch.transpose
    "torch.transpose") | [重新排列维度](#permutes-dimensions-doc) |'
- en: '| [`Tensor.trunc()`](generated/torch.Tensor.trunc.html#torch.Tensor.trunc "torch.Tensor.trunc"),
    [`torch.trunc()`](generated/torch.trunc.html#torch.trunc "torch.trunc") | [Keeps
    input names](#keeps-input-names-doc) |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.trunc()`](generated/torch.Tensor.trunc.html#torch.Tensor.trunc "torch.Tensor.trunc"),
    [`torch.trunc()`](generated/torch.trunc.html#torch.trunc "torch.trunc") | [保留输入名称](#keeps-input-names-doc)
    |'
- en: '| [`Tensor.trunc_()`](generated/torch.Tensor.trunc_.html#torch.Tensor.trunc_
    "torch.Tensor.trunc_") | None |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.trunc_()`](generated/torch.Tensor.trunc_.html#torch.Tensor.trunc_
    "torch.Tensor.trunc_") | 无 |'
- en: '| [`Tensor.type()`](generated/torch.Tensor.type.html#torch.Tensor.type "torch.Tensor.type")
    | None |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.type()`](generated/torch.Tensor.type.html#torch.Tensor.type "torch.Tensor.type")
    | 无 |'
- en: '| [`Tensor.type_as()`](generated/torch.Tensor.type_as.html#torch.Tensor.type_as
    "torch.Tensor.type_as") | [Keeps input names](#keeps-input-names-doc) |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.type_as()`](generated/torch.Tensor.type_as.html#torch.Tensor.type_as
    "torch.Tensor.type_as") | [保留输入名称](#keeps-input-names-doc) |'
- en: '| [`Tensor.unbind()`](generated/torch.Tensor.unbind.html#torch.Tensor.unbind
    "torch.Tensor.unbind"), [`torch.unbind()`](generated/torch.unbind.html#torch.unbind
    "torch.unbind") | [Removes dimensions](#removes-dimensions-doc) |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.unbind()`](generated/torch.Tensor.unbind.html#torch.Tensor.unbind
    "torch.Tensor.unbind"), [`torch.unbind()`](generated/torch.unbind.html#torch.unbind
    "torch.unbind") | [移除维度](#removes-dimensions-doc) |'
- en: '| [`Tensor.unflatten()`](generated/torch.Tensor.unflatten.html#torch.Tensor.unflatten
    "torch.Tensor.unflatten") | See documentation |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.unflatten()`](generated/torch.Tensor.unflatten.html#torch.Tensor.unflatten
    "torch.Tensor.unflatten") | 查看文档 |'
- en: '| [`Tensor.uniform_()`](generated/torch.Tensor.uniform_.html#torch.Tensor.uniform_
    "torch.Tensor.uniform_") | None |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.uniform_()`](generated/torch.Tensor.uniform_.html#torch.Tensor.uniform_
    "torch.Tensor.uniform_") | 无 |'
- en: '| [`Tensor.var()`](generated/torch.Tensor.var.html#torch.Tensor.var "torch.Tensor.var"),
    [`torch.var()`](generated/torch.var.html#torch.var "torch.var") | [Removes dimensions](#removes-dimensions-doc)
    |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.var()`](generated/torch.Tensor.var.html#torch.Tensor.var "torch.Tensor.var"),
    [`torch.var()`](generated/torch.var.html#torch.var "torch.var") | [删除维度](#removes-dimensions-doc)
    |'
- en: '| [`torch.var_mean()`](generated/torch.var_mean.html#torch.var_mean "torch.var_mean")
    | [Removes dimensions](#removes-dimensions-doc) |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.var_mean()`](generated/torch.var_mean.html#torch.var_mean "torch.var_mean")
    | [删除维度](#removes-dimensions-doc) |'
- en: '| [`Tensor.zero_()`](generated/torch.Tensor.zero_.html#torch.Tensor.zero_ "torch.Tensor.zero_")
    | None |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| [`Tensor.zero_()`](generated/torch.Tensor.zero_.html#torch.Tensor.zero_ "torch.Tensor.zero_")
    | None |'
- en: '| [`torch.zeros()`](generated/torch.zeros.html#torch.zeros "torch.zeros") |
    [Factory functions](#factory-doc) |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| [`torch.zeros()`](generated/torch.zeros.html#torch.zeros "torch.zeros") |
    [工厂函数](#factory-doc) |'
- en: '## Keeps input names'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '## 保留输入名称'
- en: All pointwise unary functions follow this rule as well as some other unary functions.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 所有逐点一元函数都遵循此规则，以及一些其他一元函数。
- en: 'Check names: None'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查名称：无
- en: 'Propagate names: input tensor’s names are propagated to the output.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传播名称：输入张量的名称传播到输出。
- en: '[PRE0]  ## Removes dimensions'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE0]  ## 删除维度'
- en: All reduction ops like [`sum()`](generated/torch.Tensor.sum.html#torch.Tensor.sum
    "torch.Tensor.sum") remove dimensions by reducing over the desired dimensions.
    Other operations like [`select()`](generated/torch.Tensor.select.html#torch.Tensor.select
    "torch.Tensor.select") and [`squeeze()`](generated/torch.Tensor.squeeze.html#torch.Tensor.squeeze
    "torch.Tensor.squeeze") remove dimensions.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 所有类似[`sum()`](generated/torch.Tensor.sum.html#torch.Tensor.sum "torch.Tensor.sum")的减少操作通过减少所需维度来删除维度。其他操作，如[`select()`](generated/torch.Tensor.select.html#torch.Tensor.select
    "torch.Tensor.select")和[`squeeze()`](generated/torch.Tensor.squeeze.html#torch.Tensor.squeeze
    "torch.Tensor.squeeze")会删除维度。
- en: Wherever one can pass an integer dimension index to an operator, one can also
    pass a dimension name. Functions that take lists of dimension indices can also
    take in a list of dimension names.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 无论何时可以将整数维度索引传递给运算符，也可以传递维度名称。接受维度索引列表的函数也可以接受维度名称列表。
- en: 'Check names: If `dim` or `dims` is passed in as a list of names, check that
    those names exist in `self`.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查名称：如果`dim`或`dims`作为名称列表传入，请检查这些名称是否存在于`self`中。
- en: 'Propagate names: If the dimensions of the input tensor specified by `dim` or
    `dims` are not present in the output tensor, then the corresponding names of those
    dimensions do not appear in `output.names`.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传播名称：如果由`dim`或`dims`指定的输入张量的维度不存在于输出张量中，则这些维度的相应名称不会出现在`output.names`中。
- en: '[PRE1]  ## Unifies names from inputs[](#unifies-names-from-inputs "Permalink
    to this heading")'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE1]  ## 统一输入的名称[](#unifies-names-from-inputs "Permalink to this heading")'
- en: All binary arithmetic ops follow this rule. Operations that broadcast still
    broadcast positionally from the right to preserve compatibility with unnamed tensors.
    To perform explicit broadcasting by names, use [`Tensor.align_as()`](named_tensor.html#torch.Tensor.align_as
    "torch.Tensor.align_as").
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 所有二元算术运算都遵循此规则。广播操作仍然从右侧按位置广播，以保持与未命名张量的兼容性。要通过名称执行显式广播，请使用[`Tensor.align_as()`](named_tensor.html#torch.Tensor.align_as
    "torch.Tensor.align_as")。
- en: 'Check names: All names must match positionally from the right. i.e., in `tensor
    + other`, `match(tensor.names[i], other.names[i])` must be true for all `i` in
    `(-min(tensor.dim(), other.dim()) + 1, -1]`.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查名称：所有名称必须从右侧按位置匹配。即，在`tensor + other`中，对于所有`i`，`match(tensor.names[i], other.names[i])`必须为真，其中`i`在`(-min(tensor.dim(),
    other.dim()) + 1, -1]`中。
- en: 'Check names: Furthermore, all named dimensions must be aligned from the right.
    During matching, if we match a named dimension `A` with an unnamed dimension `None`,
    then `A` must not appear in the tensor with the unnamed dimension.'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查名称：此外，所有命名维度必须从右侧对齐。在匹配过程中，如果我们将命名维度`A`与未命名维度`None`匹配，那么`A`不能出现在具有未命名维度的张量中。
- en: 'Propagate names: unify pairs of names from the right from both tensors to produce
    output names.'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传播名称：从两个张量的右侧统一名称对以生成输出名称。
- en: For example,
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，
- en: '[PRE2]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Check names:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 检查名称：
- en: '`match(tensor.names[-1], other.names[-1])` is `True`'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`match(tensor.names[-1], other.names[-1])`为`True`'
- en: '`match(tensor.names[-2], tensor.names[-2])` is `True`'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`match(tensor.names[-2], tensor.names[-2])`为`True`'
- en: Because we matched `None` in [`tensor`](generated/torch.tensor.html#torch.tensor
    "torch.tensor") with `'C'`, check to make sure `'C'` doesn’t exist in [`tensor`](generated/torch.tensor.html#torch.tensor
    "torch.tensor") (it does not).
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因为我们在[`tensor`](generated/torch.tensor.html#torch.tensor "torch.tensor")中将`None`与`'C'`匹配，因此请确保`'C'`不存在于[`tensor`](generated/torch.tensor.html#torch.tensor
    "torch.tensor")中（它不存在）。
- en: Check to make sure `'N'` doesn’t exists in `other` (it does not).
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查确保`'N'`不存在于`other`中（不存在）。
- en: Finally, the output names are computed with `[unify('N', None), unify(None,
    'C')] = ['N', 'C']`
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，输出名称通过`[unify('N', None), unify(None, 'C')] = ['N', 'C']`计算
- en: 'More examples:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 更多示例：
- en: '[PRE3]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'In both of the last examples, it is possible to align the tensors by names
    and then perform the addition. Use [`Tensor.align_as()`](named_tensor.html#torch.Tensor.align_as
    "torch.Tensor.align_as") to align tensors by name or [`Tensor.align_to()`](named_tensor.html#torch.Tensor.align_to
    "torch.Tensor.align_to") to align tensors to a custom dimension ordering.  ##
    Permutes dimensions'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '在最后两个示例中，可以通过名称对齐张量，然后执行加法。使用[`Tensor.align_as()`](named_tensor.html#torch.Tensor.align_as
    "torch.Tensor.align_as")按名称对齐张量，或使用[`Tensor.align_to()`](named_tensor.html#torch.Tensor.align_to
    "torch.Tensor.align_to")按自定义维度顺序对齐张量。  ## 重新排列维度'
- en: Some operations, like [`Tensor.t()`](generated/torch.Tensor.t.html#torch.Tensor.t
    "torch.Tensor.t"), permute the order of dimensions. Dimension names are attached
    to individual dimensions so they get permuted as well.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 一些操作，比如[`Tensor.t()`](generated/torch.Tensor.t.html#torch.Tensor.t "torch.Tensor.t")，会改变维度的顺序。维度名称附加到各个维度上，因此它们也会被重新排列。
- en: If the operator takes in positional index `dim`, it is also able to take a dimension
    name as `dim`.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 如果运算符接受位置索引`dim`，也可以将维度名称作为`dim`。
- en: 'Check names: If `dim` is passed as a name, check that it exists in the tensor.'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查名称：如果`dim`作为名称传入，请检查它是否存在于张量中。
- en: 'Propagate names: Permute dimension names in the same way as the dimensions
    that are being permuted.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传播名称：以与被置换的维度相同的方式置换维度名称。
- en: '[PRE4]  ## Contracts away dims'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE4]##收缩维度'
- en: Matrix multiply functions follow some variant of this. Let’s go through [`torch.mm()`](generated/torch.mm.html#torch.mm
    "torch.mm") first and then generalize the rule for batch matrix multiplication.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵乘法函数遵循某种变体。让我们先看看[`torch.mm()`](generated/torch.mm.html#torch.mm "torch.mm")，然后推广批量矩阵乘法的规则。
- en: 'For `torch.mm(tensor, other)`:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`torch.mm(tensor, other)`：
- en: 'Check names: None'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查名称：无
- en: 'Propagate names: result names are `(tensor.names[-2], other.names[-1])`.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传播名称：结果名称为`(tensor.names[-2], other.names[-1])`。
- en: '[PRE5]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Inherently, a matrix multiplication performs a dot product over two dimensions,
    collapsing them. When two tensors are matrix-multiplied, the contracted dimensions
    disappear and do not show up in the output tensor.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 从本质上讲，矩阵乘法在两个维度上执行点积，将它们折叠。当两个张量进行矩阵乘法时，收缩的维度消失，不会出现在输出张量中。
- en: '[`torch.mv()`](generated/torch.mv.html#torch.mv "torch.mv"), [`torch.dot()`](generated/torch.dot.html#torch.dot
    "torch.dot") work in a similar way: name inference does not check input names
    and removes the dimensions that are involved in the dot product:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '[`torch.mv()`](generated/torch.mv.html#torch.mv "torch.mv")，[`torch.dot()`](generated/torch.dot.html#torch.dot
    "torch.dot")的工作方式类似：名称推断不检查输入名称，并移除参与点积的维度：'
- en: '[PRE6]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now, let’s take a look at `torch.matmul(tensor, other)`. Assume that `tensor.dim()
    >= 2` and `other.dim() >= 2`.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看`torch.matmul(tensor, other)`。假设`tensor.dim() >= 2`且`other.dim() >=
    2`。
- en: 'Check names: Check that the batch dimensions of the inputs are aligned and
    broadcastable. See [Unifies names from inputs](#unifies-names-from-inputs-doc)
    for what it means for the inputs to be aligned.'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查名称：检查输入的批量维度是否对齐且可广播。查看[从输入统一名称](#unifies-names-from-inputs-doc)以了解输入对齐的含义。
- en: 'Propagate names: result names are obtained by unifying the batch dimensions
    and removing the contracted dimensions: `unify(tensor.names[:-2], other.names[:-2])
    + (tensor.names[-2], other.names[-1])`.'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传播名称：结果名称通过统一批量维度并移除收缩维度来获得：`unify(tensor.names[:-2], other.names[:-2]) + (tensor.names[-2],
    other.names[-1])`。
- en: 'Examples:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE7]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Finally, there are fused `add` versions of many matmul functions. i.e., [`addmm()`](generated/torch.addmm.html#torch.addmm
    "torch.addmm") and [`addmv()`](generated/torch.addmv.html#torch.addmv "torch.addmv").
    These are treated as composing name inference for i.e. [`mm()`](generated/torch.mm.html#torch.mm
    "torch.mm") and name inference for [`add()`](generated/torch.add.html#torch.add
    "torch.add").  ## Factory functions'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，许多matmul函数有融合的`add`版本。即，[`addmm()`](generated/torch.addmm.html#torch.addmm
    "torch.addmm")和[`addmv()`](generated/torch.addmv.html#torch.addmv "torch.addmv")。这些被视为对`mm()`和`add()`进行名称推断的组合。##工厂函数
- en: Factory functions now take a new `names` argument that associates a name with
    each dimension.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 工厂函数现在接受一个新的`names`参数，将每个维度与一个名称关联起来。
- en: '[PRE8]  ## out function and in-place variants[](#out-function-and-in-place-variants
    "Permalink to this heading")'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE8]##输出函数和就地变体[](#out-function-and-in-place-variants "跳转到此标题")'
- en: 'A tensor specified as an `out=` tensor has the following behavior:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 指定为`out=`张量的张量具有以下行为：
- en: If it has no named dimensions, then the names computed from the operation get
    propagated to it.
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果没有命名维度，则从操作中计算的名称会传播到其中。
- en: If it has any named dimensions, then the names computed from the operation must
    be exactly equal to the existing names. Otherwise, the operation errors.
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有任何命名维度，则从操作中计算的名称必须与现有名称完全相等。否则，操作会出错。
- en: 'All in-place methods modify inputs to have names equal to the computed names
    from name inference. For example:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 所有就地方法都会修改输入，使其具有与名称推断的计算名称相等。例如：
- en: '[PRE9]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'

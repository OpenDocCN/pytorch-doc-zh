- en: Torchaudio Documentation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/audio/stable/index.html](https://pytorch.org/audio/stable/index.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![_images/logo.png](../Images/b53d726dbc41b0fa6ad51fac70918434.png)'
  prefs: []
  type: TYPE_IMG
- en: Torchaudio is a library for audio and signal processing with PyTorch. It provides
    I/O, signal and data processing functions, datasets, model implementations and
    application components.
  prefs: []
  type: TYPE_NORMAL
- en: Tutorials[](#tutorials "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: All
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[#### AM inference with CUDA CTC Beam Seach Decoder'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Pipelines,ASR,CTC-Decoder,CUDA-CTC-Decoder'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to perform ASR beam search decoding with GPU, using `torchaudio.models.decoder.cuda_ctc_decoder`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e7a25e95763882cf04670faa0448fc45.png)](tutorials/asr_inference_with_cuda_ctc_decoder_tutorial.html)
    [#### On device audio-visual automatic speech recognition'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: I/O,Pipelines,RNNT'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to stream audio and video from laptop webcam and perform audio-visual
    automatic speech recognition using Emformer-RNNT model.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7029d284337ec7c2222d6b4344ac49d0.png)](tutorials/device_avsr.html)
    [#### Loading waveform Tensors from files and saving them'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: I/O'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to query/load audio files and save waveform tensors to files, using
    `torchaudio.info`, `torchaudio.load` and `torchaudio.save` functions.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7c7697acfe69544b47c02ec3585cb2b9.png)](tutorials/audio_io_tutorial.html)
    [#### CTC Forced Alignment API'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: CTC,Forced-Alignment'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to use TorchAudio's CTC forced alignment API (`torchaudio.functional.forced_align`).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/503e8ce33cf1bab2fe0bfc31ab06eb0c.png)](tutorials/ctc_forced_alignment_api_tutorial.html)
    [#### Forced alignment for multilingual data'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Forced-Alignment'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to use align multiligual data using TorchAudio's CTC forced alignment
    API (`torchaudio.functional.forced_align`) and a multiligual Wav2Vec2 model.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b9c0f51256a6c25345ba2e4cc08a7f33.png)](tutorials/forced_alignment_for_multilingual_data_tutorial.html)
    [#### Streaming media decoding with StreamReader'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: I/O,StreamReader'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to load audio/video to Tensors using `torchaudio.io.StreamReader`
    class.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0507eb3112fdbfd24e3e2ba13aa3e3fa.png)](tutorials/streamreader_basic_tutorial.html)
    [#### Device input, synthetic audio/video, and filtering with StreamReader'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: I/O,StreamReader'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to load media from hardware devices, generate synthetic audio/video,
    and apply filters to them with `torchaudio.io.StreamReader`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f6073184469be7b25be3322e22b86f48.png)](tutorials/streamreader_advanced_tutorial.html)
    [#### Streaming media encoding with StreamWriter'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: I/O,StreamWriter'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to save audio/video with `torchaudio.io.StreamWriter`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/47bb257a04b8d31914c1c25526704a87.png)](tutorials/streamwriter_basic_tutorial.html)
    [#### Playing media with StreamWriter'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: I/O,StreamWriter'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to play audio/video with `torchaudio.io.StreamWriter`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c17a8cd1a15881d6b95242ba538fcb7f.png)](tutorials/streamwriter_advanced.html)
    [#### Hardware accelerated video decoding with NVDEC'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: I/O,StreamReader'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to use HW video decoder.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/89ac3082e35e60e3410d81d1563ed18b.png)](tutorials/nvdec_tutorial.html)
    [#### Hardware accelerated video encoding with NVENC'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: I/O,StreamWriter'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to use HW video encoder.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/89ac3082e35e60e3410d81d1563ed18b.png)](tutorials/nvenc_tutorial.html)
    [#### Apply effects and codecs to waveform'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Preprocessing'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to apply effects and codecs to waveform using `torchaudio.io.AudioEffector`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8404ff1ec9d47bea48da5b113159e989.png)](tutorials/effector_tutorial.html)
    [#### Audio resampling with bandlimited sinc interpolation'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Preprocessing'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to resample audio tensor with `torchaudio.functional.resample` and
    `torchaudio.transforms.Resample`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/72a6c1814ddfb5c23adec67efd1e0b66.png)](tutorials/audio_resampling_tutorial.html)
    [#### Audio data augmentation'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Preprocessing'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to use `torchaudio.functional` and `torchaudio.transforms` modules
    to perform data augmentation.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c80cb203950ac50011446822e0d43a9a.png)](tutorials/audio_data_augmentation_tutorial.html)
    [#### Audio feature extraction'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Preprocessing'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to use `torchaudio.functional` and `torchaudio.transforms` modules
    to extract features from waveform.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/66b0577f2a89d08f0ffcdd5bf744fc56.png)](tutorials/audio_feature_extractions_tutorial.html)
    [#### Audio feature augmentation'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Preprocessing'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to use `torchaudio.functional` and `torchaudio.transforms` modules
    to perform feature augmentation.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/34118d94eaa384b854c9418ad5da1f95.png)](tutorials/audio_feature_augmentation_tutorial.html)
    [#### Generating waveforms with oscillator'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: DSP'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7533eae9ba1a1de4063506e20c82e055.png)](tutorials/oscillator_tutorial.html)
    [#### Additive Synthesis'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: DSP'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f9720f8c48393179934600ac2f65389d.png)](tutorials/additive_synthesis_tutorial.html)
    [#### Designing digital filters'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: DSP'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/028f20c05a4c635e9b4dc624deff86d9.png)](tutorials/filter_design_tutorial.html)
    [#### Subtractive Synthesis'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: DSP'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ceefcd60c63f2946e39ad0990b7155b2.png)](tutorials/subtractive_synthesis_tutorial.html)
    [#### Audio dataset'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Dataset'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to use `torchaudio.datasets` module.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/45bf746a4ad837db90636d007045fba9.png)](tutorials/audio_datasets_tutorial.html)
    [#### AM inference with Wav2Vec2'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: ASR,wav2vec2'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to perform acoustic model inference with Wav2Vec2 (`torchaudio.pipelines.Wav2Vec2ASRBundle`).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/759e5d687d4fd430de33b8a738b7d35e.png)](tutorials/speech_recognition_pipeline_tutorial.html)
    [#### LM inference with CTC Beam Seach Decoder'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Pipelines,ASR,wav2vec2,CTC-Decoder'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to perform ASR beam search decoding with lexicon and language model,
    using `torchaudio.models.decoder.ctc_decoder`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e7a25e95763882cf04670faa0448fc45.png)](tutorials/asr_inference_with_ctc_decoder_tutorial.html)
    [#### Online ASR with Emformer RNN-T'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Pipelines,ASR,RNNT,StreamReader'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to perform online ASR with Emformer RNN-T (`torchaudio.pipelines.RNNTBundle`)
    and `torchaudio.io.StreamReader`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8eb911527cd412c646efcf3a47694751.png)](tutorials/online_asr_tutorial.html)
    [#### Real-time microphone ASR with Emformer RNN-T'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Pipelines,ASR,RNNT,StreamReader'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to transcribe speech fomr microphone with Emformer RNN-T (`torchaudio.pipelines.RNNTBundle`)
    and `torchaudio.io.StreamReader`.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9f1cbd6779e3f9b5466a62958ff1aa4d.png)](tutorials/device_asr.html)
    [#### Forced Alignment with Wav2Vec2'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Pipelines,Forced-Alignment,wav2vec2'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to align text to speech with Wav2Vec 2 (`torchaudio.pipelines.Wav2Vec2ASRBundle`).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8d2c58eb58c5541cb88d3d7020a48231.png)](tutorials/forced_alignment_tutorial.html)
    [#### Text-to-Speech with Tacotron2'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Pipelines,TTS-(Text-to-Speech)'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to generate speech from text with Tacotron2 (`torchaudio.pipelines.Tacotron2TTSBundle`).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9eb051bb2da7cc1078a42ad11d2a0e37.png)](tutorials/tacotron2_pipeline_tutorial.html)
    [#### Speech Enhancement with MVDR Beamforming'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Pipelines,Speech-Enhancement'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to improve speech quality with MVDR Beamforming.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e3534984cab738a2fc134dd82d26b689.png)](tutorials/mvdr_tutorial.html)
    [#### Music Source Separation with Hybrid Demucs'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Pipelines,Source-Separation'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to perform music source separation with pre-trained Hybrid Demucs
    (`torchaudio.pipelines.SourceSeparationBundle`).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/923517e38a4a4d8b89489fbd1603f0f4.png)](tutorials/hybrid_demucs_tutorial.html)
    [#### Torchaudio-Squim: Non-intrusive Speech Assessment in TorchAudio'
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics: Pipelines,Speech Assessment,Speech Enhancement'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to estimate subjective and objective metrics with pre-trained TorchAudio-SQUIM
    models (`torchaudio.pipelines.SQUIMObjective`).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/62ea891fdabe714735b28751d17e57b5.png)](tutorials/squim_tutorial.html)'
  prefs: []
  type: TYPE_IMG
- en: Citing torchaudio[](#citing-torchaudio "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you find torchaudio useful, please cite the following paper:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Yang, Y.-Y., Hira, M., Ni, Z., Chourdia, A., Astafurov, A., Chen, C., Yeh,
    C.-F., Puhrsch, C., Pollack, D., Genzel, D., Greenberg, D., Yang, E. Z., Lian,
    J., Mahadeokar, J., Hwang, J., Chen, J., Goldsborough, P., Roy, P., Narenthiran,
    S., Watanabe, S., Chintala, S., Quenneville-Bélair, V, & Shi, Y. (2021). TorchAudio:
    Building Blocks for Audio and Speech Processing. arXiv preprint arXiv:2110.15018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In BibTeX format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE

["```py\nclass torch.monitor.Aggregation\u00b6\n```", "```py\nproperty name\u00b6\n```", "```py\nclass torch.monitor.Stat\u00b6\n```", "```py\n__init__(self: torch._C._monitor.Stat, name: str, aggregations: List[torch._C._monitor.Aggregation], window_size: datetime.timedelta, max_samples: int = 9223372036854775807) \u2192 None\u00b6\n```", "```py\nadd(self: torch._C._monitor.Stat, v: float) \u2192 None\u00b6\n```", "```py\nproperty count\u00b6\n```", "```py\nget(self: torch._C._monitor.Stat) \u2192 Dict[torch._C._monitor.Aggregation, float]\u00b6\n```", "```py\nproperty name\u00b6\n```", "```py\nclass torch.monitor.data_value_t\u00b6\n```", "```py\nclass torch.monitor.Event\u00b6\n```", "```py\n__init__(self: torch._C._monitor.Event, name: str, timestamp: datetime.datetime, data: Dict[str, data_value_t]) \u2192 None\u00b6\n```", "```py\nproperty data\u00b6\n```", "```py\nproperty name\u00b6\n```", "```py\nproperty timestamp\u00b6\n```", "```py\nclass torch.monitor.EventHandlerHandle\u00b6\n```", "```py\ntorch.monitor.log_event(event: torch._C._monitor.Event) \u2192 None\u00b6\n```", "```py\ntorch.monitor.register_event_handler(callback: Callable[[torch._C._monitor.Event], None]) \u2192 torch._C._monitor.EventHandlerHandle\u00b6\n```", "```py\ntorch.monitor.unregister_event_handler(handler: torch._C._monitor.EventHandlerHandle) \u2192 None\u00b6\n```", "```py\nclass torch.monitor.TensorboardEventHandler(writer)\u00b6\n```", "```py\n>>> from torch.utils.tensorboard import SummaryWriter\n>>> from torch.monitor import TensorboardEventHandler, register_event_handler\n>>> writer = SummaryWriter(\"log_dir\")\n>>> register_event_handler(TensorboardEventHandler(writer)) \n```", "```py\n__init__(writer)\u00b6\n```"]
["```py\nclass torch.utils.benchmark.Timer(stmt='pass', setup='pass', global_setup='', timer=<built-in function perf_counter>, globals=None, label=None, sub_label=None, description=None, env=None, num_threads=1, language=Language.PYTHON)\u00b6\n```", "```py\n     | n=1 | n=4 | ...\n                            ------------- ...\n    ReLU(x + 1): (float)    | ... | ... | ...\n    ReLU(x + 1): (int)      | ... | ... | ... \n    ```", "```py\nadaptive_autorange(threshold=0.1, *, min_run_time=0.01, max_run_time=10.0, callback=None)\u00b6\n```", "```py\n`setup`\n\ntimes = []\nwhile times.sum < max_run_time\n    start = timer()\n    for _ in range(block_size):\n        `stmt`\n    times.append(timer() - start)\n\n    enough_data = len(times)>3 and times.sum > min_run_time\n    small_iqr=times.iqr/times.mean<threshold\n\n    if enough_data and small_iqr:\n        break \n```", "```py\nblocked_autorange(callback=None, min_run_time=0.2)\u00b6\n```", "```py\n`setup`\n\ntotal_time = 0\nwhile total_time < min_run_time\n    start = timer()\n    for _ in range(block_size):\n        `stmt`\n    total_time += (timer() - start) \n```", "```py\ncollect_callgrind(number: int, *, repeats: None, collect_baseline: bool, retain_out_file: bool) \u2192 CallgrindStats\u00b6\n```", "```py\ncollect_callgrind(number: int, *, repeats: int, collect_baseline: bool, retain_out_file: bool) \u2192 Tuple[CallgrindStats, ...]\n```", "```py\ntimeit(number=1000000)\u00b6\n```", "```py\nclass torch.utils.benchmark.Measurement(number_per_run, raw_times, task_spec, metadata=None)\u00b6\n```", "```py\nstatic merge(measurements)\u00b6\n```", "```py\nproperty significant_figures: int\u00b6\n```", "```py\nclass torch.utils.benchmark.CallgrindStats(task_spec, number_per_run, built_with_debug_symbols, baseline_inclusive_stats, baseline_exclusive_stats, stmt_inclusive_stats, stmt_exclusive_stats, stmt_callgrind_out)\u00b6\n```", "```py\nas_standardized()\u00b6\n```", "```py\n23234231 /tmp/first_build_dir/thing.c:foo(...)\n 9823794 /tmp/first_build_dir/thing.c:bar(...)\n  ...\n   53453 .../aten/src/Aten/...:function_that_actually_changed(...)\n  ...\n -9823794 /tmp/second_build_dir/thing.c:bar(...)\n-23234231 /tmp/second_build_dir/thing.c:foo(...) \n```", "```py\ncounts(*, denoise=False)\u00b6\n```", "```py\ndelta(other, inclusive=False)\u00b6\n```", "```py\nstats(inclusive=False)\u00b6\n```", "```py\nclass torch.utils.benchmark.FunctionCounts(_data, inclusive, truncate_rows=True, _linewidth=None)\u00b6\n```", "```py\ndenoise()\u00b6\n```", "```py\nfilter(filter_fn)\u00b6\n```", "```py\ntransform(map_fn)\u00b6\n```"]
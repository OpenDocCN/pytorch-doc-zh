- en: torchaudio.prototype.transforms¶
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/audio/stable/prototype.transforms.html](https://pytorch.org/audio/stable/prototype.transforms.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '| [`BarkScale`](generated/torchaudio.prototype.transforms.BarkScale.html#torchaudio.prototype.transforms.BarkScale
    "torchaudio.prototype.transforms.BarkScale") | Turn a normal STFT into a bark
    frequency STFT with triangular filter banks. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BarkSpectrogram`](generated/torchaudio.prototype.transforms.BarkSpectrogram.html#torchaudio.prototype.transforms.BarkSpectrogram
    "torchaudio.prototype.transforms.BarkSpectrogram") | Create BarkSpectrogram for
    a raw audio signal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ChromaScale`](generated/torchaudio.prototype.transforms.ChromaScale.html#torchaudio.prototype.transforms.ChromaScale
    "torchaudio.prototype.transforms.ChromaScale") | Converts spectrogram to chromagram.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`ChromaSpectrogram`](generated/torchaudio.prototype.transforms.ChromaSpectrogram.html#torchaudio.prototype.transforms.ChromaSpectrogram
    "torchaudio.prototype.transforms.ChromaSpectrogram") | Generates chromagram for
    audio signal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`InverseBarkScale`](generated/torchaudio.prototype.transforms.InverseBarkScale.html#torchaudio.prototype.transforms.InverseBarkScale
    "torchaudio.prototype.transforms.InverseBarkScale") | Estimate a STFT in normal
    frequency domain from bark frequency domain. |'
  prefs: []
  type: TYPE_TB

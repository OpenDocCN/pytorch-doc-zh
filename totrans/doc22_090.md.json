["```py\ntorch.utils.dlpack.from_dlpack(ext_tensor) \u2192 Tensor\u00b6\n```", "```py\n>>> import torch.utils.dlpack\n>>> t = torch.arange(4)\n\n# Convert a tensor directly (supported in PyTorch >= 1.10)\n>>> t2 = torch.from_dlpack(t)\n>>> t2[:2] = -1  # show that memory is shared\n>>> t2\ntensor([-1, -1,  2,  3])\n>>> t\ntensor([-1, -1,  2,  3])\n\n# The old-style DLPack usage, with an intermediate capsule object\n>>> capsule = torch.utils.dlpack.to_dlpack(t)\n>>> capsule\n<capsule object \"dltensor\" at ...>\n>>> t3 = torch.from_dlpack(capsule)\n>>> t3\ntensor([-1, -1,  2,  3])\n>>> t3[0] = -9  # now we're sharing memory between 3 tensors\n>>> t3\ntensor([-9, -1,  2,  3])\n>>> t2\ntensor([-9, -1,  2,  3])\n>>> t\ntensor([-9, -1,  2,  3]) \n```", "```py\ntorch.utils.dlpack.to_dlpack(tensor) \u2192 PyCapsule\u00b6\n```"]
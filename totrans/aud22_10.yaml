- en: Building on Linux and macOS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux和macOS上构建
- en: 原文：[https://pytorch.org/audio/stable/build.linux.html](https://pytorch.org/audio/stable/build.linux.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/audio/stable/build.linux.html](https://pytorch.org/audio/stable/build.linux.html)
- en: 1\. Install Conda and activate conda environment[](#install-conda-and-activate-conda-environment
    "Permalink to this heading")
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 安装Conda并激活conda环境[](#install-conda-and-activate-conda-environment "此标题的永久链接")
- en: Please folllow the instruction at [https://docs.conda.io/en/latest/miniconda.html](https://docs.conda.io/en/latest/miniconda.html)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照[https://docs.conda.io/en/latest/miniconda.html](https://docs.conda.io/en/latest/miniconda.html)上的说明操作
- en: 2\. Install PyTorch[](#install-pytorch "Permalink to this heading")
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 安装PyTorch[](#install-pytorch "此标题的永久链接")
- en: Please select the version of PyTorch you want to install from [https://pytorch.org/get-started/locally/](https://pytorch.org/get-started/locally/)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 请从[https://pytorch.org/get-started/locally/](https://pytorch.org/get-started/locally/)选择要安装的PyTorch版本
- en: Here, we install nightly build.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们安装夜间构建。
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 3\. Install build tools[](#install-build-tools "Permalink to this heading")
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 安装构建工具[](#install-build-tools "此标题的永久链接")
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 4\. Clone the torchaudio repository[](#clone-the-torchaudio-repository "Permalink
    to this heading")
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 克隆torchaudio存储库[](#clone-the-torchaudio-repository "此标题的永久链接")
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 5\. Build[](#build "Permalink to this heading")
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 构建[](#build "此标题的永久链接")
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Due to the complexity of build process, TorchAudio only supports in-place build.
    To use `pip`, please use `--no-use-pep517` option.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 由于构建过程的复杂性，TorchAudio仅支持原地构建。要使用`pip`，请使用`--no-use-pep517`选项。
- en: '`pip install -v -e . --no-use-pep517`'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip install -v -e . --no-use-pep517`'
- en: '[Optional] Build TorchAudio with a custom built FFmpeg[](#optional-build-torchaudio-with-a-custom-built-ffmpeg
    "Permalink to this heading")'
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[可选] 使用自定义构建的FFmpeg构建TorchAudio[](#optional-build-torchaudio-with-a-custom-built-ffmpeg
    "此标题的永久链接")'
- en: By default, torchaudio tries to build FFmpeg extension with support for multiple
    FFmpeg versions. This process uses pre-built FFmpeg libraries compiled for specific
    CPU architectures like `x86_64` and `aarch64` (`arm64`).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，torchaudio尝试构建支持多个FFmpeg版本的FFmpeg扩展。此过程使用为特定CPU架构（如`x86_64`和`aarch64`（`arm64`））编译的预构建FFmpeg库。
- en: If your CPU is not one of those, then the build process can fail. To workaround,
    one can disable FFmpeg integration (by setting the environment variable `USE_FFMPEG=0`)
    or switch to the single version FFmpeg extension.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的CPU不是其中之一，则构建过程可能会失败。为了解决问题，可以禁用FFmpeg集成（通过设置环境变量`USE_FFMPEG=0`）或切换到单版本FFmpeg扩展。
- en: To build single version FFmpeg extension, FFmpeg binaries must be provided by
    user and available in the build environment. To do so, install FFmpeg and set
    `FFMPEG_ROOT` environment variable to specify the location of FFmpeg.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建单版本FFmpeg扩展，用户必须提供FFmpeg二进制文件，并在构建环境中可用。为此，请安装FFmpeg并设置`FFMPEG_ROOT`环境变量以指定FFmpeg的位置。
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'

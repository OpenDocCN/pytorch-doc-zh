- en: Building on Linux and macOS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/audio/stable/build.linux.html](https://pytorch.org/audio/stable/build.linux.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 1\. Install Conda and activate conda environment[](#install-conda-and-activate-conda-environment
    "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Please folllow the instruction at [https://docs.conda.io/en/latest/miniconda.html](https://docs.conda.io/en/latest/miniconda.html)
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Install PyTorch[](#install-pytorch "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Please select the version of PyTorch you want to install from [https://pytorch.org/get-started/locally/](https://pytorch.org/get-started/locally/)
  prefs: []
  type: TYPE_NORMAL
- en: Here, we install nightly build.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 3\. Install build tools[](#install-build-tools "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 4\. Clone the torchaudio repository[](#clone-the-torchaudio-repository "Permalink
    to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 5\. Build[](#build "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Due to the complexity of build process, TorchAudio only supports in-place build.
    To use `pip`, please use `--no-use-pep517` option.
  prefs: []
  type: TYPE_NORMAL
- en: '`pip install -v -e . --no-use-pep517`'
  prefs: []
  type: TYPE_NORMAL
- en: '[Optional] Build TorchAudio with a custom built FFmpeg[](#optional-build-torchaudio-with-a-custom-built-ffmpeg
    "Permalink to this heading")'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By default, torchaudio tries to build FFmpeg extension with support for multiple
    FFmpeg versions. This process uses pre-built FFmpeg libraries compiled for specific
    CPU architectures like `x86_64` and `aarch64` (`arm64`).
  prefs: []
  type: TYPE_NORMAL
- en: If your CPU is not one of those, then the build process can fail. To workaround,
    one can disable FFmpeg integration (by setting the environment variable `USE_FFMPEG=0`)
    or switch to the single version FFmpeg extension.
  prefs: []
  type: TYPE_NORMAL
- en: To build single version FFmpeg extension, FFmpeg binaries must be provided by
    user and available in the build environment. To do so, install FFmpeg and set
    `FFMPEG_ROOT` environment variable to specify the location of FFmpeg.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE

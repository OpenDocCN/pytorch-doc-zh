- en: Spatial Transformer Networks Tutorial
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 空间变换网络教程
- en: 原文：[https://pytorch.org/tutorials/intermediate/spatial_transformer_tutorial.html](https://pytorch.org/tutorials/intermediate/spatial_transformer_tutorial.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/tutorials/intermediate/spatial_transformer_tutorial.html](https://pytorch.org/tutorials/intermediate/spatial_transformer_tutorial.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Click [here](#sphx-glr-download-intermediate-spatial-transformer-tutorial-py)
    to download the full example code
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 点击[这里](#sphx-glr-download-intermediate-spatial-transformer-tutorial-py)下载完整的示例代码
- en: '**Author**: [Ghassen HAMROUNI](https://github.com/GHamrouni)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者**：[Ghassen HAMROUNI](https://github.com/GHamrouni)'
- en: '![../_images/FSeq.png](../Images/877d6867c0446fc513ee14aeb45673fb.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/FSeq.png](../Images/877d6867c0446fc513ee14aeb45673fb.png)'
- en: In this tutorial, you will learn how to augment your network using a visual
    attention mechanism called spatial transformer networks. You can read more about
    the spatial transformer networks in the [DeepMind paper](https://arxiv.org/abs/1506.02025)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，您将学习如何使用称为空间变换网络的视觉注意机制来增强您的网络。您可以在[DeepMind论文](https://arxiv.org/abs/1506.02025)中阅读更多关于空间变换网络的信息。
- en: Spatial transformer networks are a generalization of differentiable attention
    to any spatial transformation. Spatial transformer networks (STN for short) allow
    a neural network to learn how to perform spatial transformations on the input
    image in order to enhance the geometric invariance of the model. For example,
    it can crop a region of interest, scale and correct the orientation of an image.
    It can be a useful mechanism because CNNs are not invariant to rotation and scale
    and more general affine transformations.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 空间变换网络是可微分注意力的泛化，适用于任何空间变换。空间变换网络（简称STN）允许神经网络学习如何对输入图像执行空间变换，以增强模型的几何不变性。例如，它可以裁剪感兴趣的区域，缩放和校正图像的方向。这可能是一个有用的机制，因为CNN对旋转和缩放以及更一般的仿射变换不具有不变性。
- en: One of the best things about STN is the ability to simply plug it into any existing
    CNN with very little modification.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: STN最好的一点是能够简单地将其插入到任何现有的CNN中，几乎不需要修改。
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Loading the data
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载数据
- en: In this post we experiment with the classic MNIST dataset. Using a standard
    convolutional network augmented with a spatial transformer network.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们使用经典的MNIST数据集进行实验。使用标准的卷积网络增强了空间变换网络。
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Depicting spatial transformer networks
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描绘空间变换网络
- en: 'Spatial transformer networks boils down to three main components :'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 空间变换网络归结为三个主要组件：
- en: The localization network is a regular CNN which regresses the transformation
    parameters. The transformation is never learned explicitly from this dataset,
    instead the network learns automatically the spatial transformations that enhances
    the global accuracy.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地化网络是一个普通的CNN，用于回归变换参数。这个变换从未从这个数据集中明确学习，相反，网络自动学习增强全局准确性的空间变换。
- en: The grid generator generates a grid of coordinates in the input image corresponding
    to each pixel from the output image.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网格生成器生成与输出图像中的每个像素对应的输入图像中的坐标网格。
- en: The sampler uses the parameters of the transformation and applies it to the
    input image.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 采样器使用变换的参数并将其应用于输入图像。
- en: '![../_images/stn-arch.png](../Images/0f822bf7763e04e2824dcc9c9dd89eea.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/stn-arch.png](../Images/0f822bf7763e04e2824dcc9c9dd89eea.png)'
- en: Note
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: We need the latest version of PyTorch that contains affine_grid and grid_sample
    modules.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要包含affine_grid和grid_sample模块的最新版本的PyTorch。
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Training the model
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练模型
- en: Now, let’s use the SGD algorithm to train the model. The network is learning
    the classification task in a supervised way. In the same time the model is learning
    STN automatically in an end-to-end fashion.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用SGD算法来训练模型。网络以监督方式学习分类任务。同时，模型以端到端的方式自动学习STN。
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Visualizing the STN results
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化STN结果
- en: Now, we will inspect the results of our learned visual attention mechanism.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将检查我们学习的视觉注意机制的结果。
- en: We define a small helper function in order to visualize the transformations
    while training.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义了一个小的辅助函数，以便在训练过程中可视化变换。
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Dataset Images, Transformed Images](../Images/a77d97dad93b9a6680a39672f8bf21ff.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![数据集图像，变换后的图像](../Images/a77d97dad93b9a6680a39672f8bf21ff.png)'
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**Total running time of the script:** ( 3 minutes 30.487 seconds)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**脚本的总运行时间：**（3分钟30.487秒）'
- en: '[`Download Python source code: spatial_transformer_tutorial.py`](../_downloads/a4f07fecba75b5e84fe9e56cac0c7b71/spatial_transformer_tutorial.py)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载Python源代码：spatial_transformer_tutorial.py`](../_downloads/a4f07fecba75b5e84fe9e56cac0c7b71/spatial_transformer_tutorial.py)'
- en: '[`Download Jupyter notebook: spatial_transformer_tutorial.ipynb`](../_downloads/a5513958454950ed22df8da4c47f6429/spatial_transformer_tutorial.ipynb)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载Jupyter笔记本：spatial_transformer_tutorial.ipynb`](../_downloads/a5513958454950ed22df8da4c47f6429/spatial_transformer_tutorial.ipynb)'
- en: '[Gallery generated by Sphinx-Gallery](https://sphinx-gallery.github.io)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sphinx-Gallery生成的画廊](https://sphinx-gallery.github.io)'

["```py\ntorch.default_generator Returns the default CPU torch.Generator\u00b6\n```", "```py\n>>> x = torch.zeros(1, requires_grad=True)\n>>> with torch.no_grad():\n...     y = x * 2\n>>> y.requires_grad\nFalse\n\n>>> is_train = False\n>>> with torch.set_grad_enabled(is_train):\n...     y = x * 2\n>>> y.requires_grad\nFalse\n\n>>> torch.set_grad_enabled(True)  # this can also be used as a function\n>>> y = x * 2\n>>> y.requires_grad\nTrue\n\n>>> torch.set_grad_enabled(False)\n>>> y = x * 2\n>>> y.requires_grad\nFalse \n```", "```py\nclass torch.SymInt(node)\u00b6\n```", "```py\nclass torch.SymFloat(node)\u00b6\n```", "```py\nclass torch.SymBool(node)\u00b6\n```", "```py\nclass torch.Tag\u00b6\n```", "```py\nproperty name\u00b6\n```"]
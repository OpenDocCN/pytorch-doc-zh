- en: Windows FAQ
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows 常见问题
- en: 原文：[https://pytorch.org/docs/stable/notes/windows.html](https://pytorch.org/docs/stable/notes/windows.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/docs/stable/notes/windows.html](https://pytorch.org/docs/stable/notes/windows.html)
- en: Building from source
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从源代码构建
- en: Include optional components[](#include-optional-components "Permalink to this
    heading")
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 包括可选组件[](#include-optional-components "跳转到此标题的永久链接")
- en: 'There are two supported components for Windows PyTorch: MKL and MAGMA. Here
    are the steps to build with them.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Windows PyTorch 有两个支持的组件：MKL 和 MAGMA。以下是使用它们构建的步骤。
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Speeding CUDA build for Windows[](#speeding-cuda-build-for-windows "Permalink
    to this heading")
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加速 Windows 的 CUDA 构建[](#speeding-cuda-build-for-windows "跳转到此标题的永久链接")
- en: Visual Studio doesn’t support parallel custom task currently. As an alternative,
    we can use `Ninja` to parallelize CUDA build tasks. It can be used by typing only
    a few lines of code.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 目前不支持并行自定义任务。作为替代方案，我们可以使用 `Ninja` 来并行化 CUDA 构建任务。只需输入几行代码即可使用。
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: One key install script
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个关键的安装脚本
- en: You can take a look at [this set of scripts](https://github.com/peterjc123/pytorch-scripts).
    It will lead the way for you.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以查看[这组脚本](https://github.com/peterjc123/pytorch-scripts)。它会为您指明方向。
- en: Extension
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展
- en: CFFI Extension
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CFFI 扩展
- en: The support for CFFI Extension is very experimental. You must specify additional
    `libraries` in `Extension` object to make it build on Windows.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: CFFI 扩展的支持非常实验性。您必须在 `Extension` 对象中指定额外的 `libraries` 来使其在 Windows 上构建。
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Cpp Extension
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Cpp 扩展
- en: This type of extension has better support compared with the previous one. However,
    it still needs some manual configuration. First, you should open the **x86_x64
    Cross Tools Command Prompt for VS 2017**. And then, you can start your compiling
    process.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的扩展与之前的支持更好。但是，它仍然需要一些手动配置。首先，您应该打开 **x86_x64 Cross Tools Command Prompt
    for VS 2017**。然后，您可以开始编译过程。
- en: Installation
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装
- en: Package not found in win-32 channel.[](#package-not-found-in-win-32-channel
    "Permalink to this heading")
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: win-32 频道中找不到包。[](#package-not-found-in-win-32-channel "跳转到此标题的永久链接")
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: PyTorch doesn’t work on 32-bit system. Please use Windows and Python 64-bit
    version.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch 不支持 32 位系统。请使用 Windows 和 Python 的 64 位版本。
- en: Import error
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导入错误
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The problem is caused by the missing of the essential files. Actually, we include
    almost all the essential files that PyTorch need for the conda package except
    VC2017 redistributable and some mkl libraries. You can resolve this by typing
    the following command.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是由于缺少必要文件而引起的。实际上，我们几乎包含了 PyTorch 包所需的所有必要文件，除了 VC2017 可再发行和一些 mkl 库。您可以通过输入以下命令解决这个问题。
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As for the wheels package, since we didn’t pack some libraries and VS2017 redistributable
    files in, please make sure you install them manually. The [VS 2017 redistributable
    installer](https://aka.ms/vs/15/release/VC_redist.x64.exe) can be downloaded.
    And you should also pay attention to your installation of Numpy. Make sure it
    uses MKL instead of OpenBLAS. You may type in the following command.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 至于 wheels 包，由于我们没有打包一些库和 VS2017 可再发行文件，请确保您手动安装它们。可以下载 [VS 2017 可再发行安装程序](https://aka.ms/vs/15/release/VC_redist.x64.exe)。您还应该注意您的
    Numpy 安装。确保它使用 MKL 而不是 OpenBLAS。您可以输入以下命令。
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Another possible cause may be you are using GPU version without NVIDIA graphics
    cards. Please replace your GPU package with the CPU one.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可能的原因是您正在使用没有 NVIDIA 显卡的 GPU 版本。请用 CPU 版本替换您的 GPU 包。
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This is actually an upstream issue of Anaconda. When you initialize your environment
    with conda-forge channel, this issue will emerge. You may fix the intel-openmp
    libraries through this command.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上是 Anaconda 的一个上游问题。当您使用 conda-forge 频道初始化环境时，这个问题会出现。您可以通过这个命令修复 intel-openmp
    库。
- en: '[PRE8]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Usage (multiprocessing)
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用法（多进程）
- en: Multiprocessing error without if-clause protection[](#multiprocessing-error-without-if-clause-protection
    "Permalink to this heading")
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 没有 if 语句保护的多进程错误[](#multiprocessing-error-without-if-clause-protection "跳转到此标题的永久链接")
- en: '[PRE9]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The implementation of `multiprocessing` is different on Windows, which uses
    `spawn` instead of `fork`. So we have to wrap the code with an if-clause to protect
    the code from executing multiple times. Refactor your code into the following
    structure.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 上的 `multiprocessing` 实现与其他系统不同，它使用 `spawn` 而不是 `fork`。因此，我们必须用 if 语句包装代码，以防止代码多次执行。将您的代码重构为以下结构。
- en: '[PRE10]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Multiprocessing error “Broken pipe”[](#multiprocessing-error-broken-pipe "Permalink
    to this heading")
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多进程错误“管道中断”[](#multiprocessing-error-broken-pipe "跳转到此标题的永久链接")
- en: '[PRE11]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This issue happens when the child process ends before the parent process finishes
    sending data. There may be something wrong with your code. You can debug your
    code by reducing the `num_worker` of [`DataLoader`](../data.html#torch.utils.data.DataLoader
    "torch.utils.data.DataLoader") to zero and see if the issue persists.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当子进程在父进程完成发送数据之前结束时，就会出现这个问题。您的代码可能有问题。您可以通过将 [`DataLoader`](../data.html#torch.utils.data.DataLoader
    "torch.utils.data.DataLoader") 的 `num_worker` 减少到零来调试您的代码，看看问题是否仍然存在。
- en: Multiprocessing error “driver shut down”[](#multiprocessing-error-driver-shut-down
    "Permalink to this heading")
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多进程错误“驱动程序关闭”[](#multiprocessing-error-driver-shut-down "跳转到此标题的永久链接")
- en: '[PRE12]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Please update your graphics driver. If this persists, this may be that your
    graphics card is too old or the calculation is too heavy for your card. Please
    update the TDR settings according to this [post](https://www.pugetsystems.com/labs/hpc/Working-around-TDR-in-Windows-for-a-better-GPU-computing-experience-777/).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 请更新您的显卡驱动程序。如果问题仍然存在，可能是您的显卡太旧或计算量太大。请根据这篇[文章](https://www.pugetsystems.com/labs/hpc/Working-around-TDR-in-Windows-for-a-better-GPU-computing-experience-777/)更新
    TDR 设置。
- en: CUDA IPC operations
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CUDA IPC 操作
- en: '[PRE13]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: They are not supported on Windows. Something like doing multiprocessing on CUDA
    tensors cannot succeed, there are two alternatives for this.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 它们不支持 Windows。例如，在 CUDA 张量上进行多进程操作是不可能成功的，有两种替代方案。
- en: 1\. Don’t use `multiprocessing`. Set the `num_worker` of [`DataLoader`](../data.html#torch.utils.data.DataLoader
    "torch.utils.data.DataLoader") to zero.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 不要使用 `multiprocessing`。将 [`DataLoader`](../data.html#torch.utils.data.DataLoader
    "torch.utils.data.DataLoader") 的 `num_worker` 设置为零。
- en: 2\. Share CPU tensors instead. Make sure your custom `DataSet` returns CPU tensors.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 共享 CPU 张量。确保您的自定义 `DataSet` 返回 CPU 张量。

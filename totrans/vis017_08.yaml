- en: Decoding / Encoding images and videos¶
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/vision/stable/io.html](https://pytorch.org/vision/stable/io.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The `torchvision.io` package provides functions for performing IO operations.
    They are currently specific to reading and writing images and videos.
  prefs: []
  type: TYPE_NORMAL
- en: Images[¶](#images "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`read_image`](generated/torchvision.io.read_image.html#torchvision.io.read_image
    "torchvision.io.read_image")(path[, mode]) | Reads a JPEG or PNG image into a
    3 dimensional RGB or grayscale Tensor. |'
  prefs: []
  type: TYPE_TB
- en: '| [`decode_image`](generated/torchvision.io.decode_image.html#torchvision.io.decode_image
    "torchvision.io.decode_image")(input[, mode]) | Detects whether an image is a
    JPEG or PNG and performs the appropriate operation to decode the image into a
    3 dimensional RGB or grayscale Tensor. |'
  prefs: []
  type: TYPE_TB
- en: '| [`encode_jpeg`](generated/torchvision.io.encode_jpeg.html#torchvision.io.encode_jpeg
    "torchvision.io.encode_jpeg")(input[, quality]) | Takes an input tensor in CHW
    layout and returns a buffer with the contents of its corresponding JPEG file.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`decode_jpeg`](generated/torchvision.io.decode_jpeg.html#torchvision.io.decode_jpeg
    "torchvision.io.decode_jpeg")(input[, mode, device]) | Decodes a JPEG image into
    a 3 dimensional RGB or grayscale Tensor. |'
  prefs: []
  type: TYPE_TB
- en: '| [`write_jpeg`](generated/torchvision.io.write_jpeg.html#torchvision.io.write_jpeg
    "torchvision.io.write_jpeg")(input, filename[, quality]) | Takes an input tensor
    in CHW layout and saves it in a JPEG file. |'
  prefs: []
  type: TYPE_TB
- en: '| [`encode_png`](generated/torchvision.io.encode_png.html#torchvision.io.encode_png
    "torchvision.io.encode_png")(input[, compression_level]) | Takes an input tensor
    in CHW layout and returns a buffer with the contents of its corresponding PNG
    file. |'
  prefs: []
  type: TYPE_TB
- en: '| [`decode_png`](generated/torchvision.io.decode_png.html#torchvision.io.decode_png
    "torchvision.io.decode_png")(input[, mode]) | Decodes a PNG image into a 3 dimensional
    RGB or grayscale Tensor. |'
  prefs: []
  type: TYPE_TB
- en: '| [`write_png`](generated/torchvision.io.write_png.html#torchvision.io.write_png
    "torchvision.io.write_png")(input, filename[, compression_level]) | Takes an input
    tensor in CHW layout (or HW in the case of grayscale images) and saves it in a
    PNG file. |'
  prefs: []
  type: TYPE_TB
- en: '| [`read_file`](generated/torchvision.io.read_file.html#torchvision.io.read_file
    "torchvision.io.read_file")(path) | Reads and outputs the bytes contents of a
    file as a uint8 Tensor with one dimension. |'
  prefs: []
  type: TYPE_TB
- en: '| [`write_file`](generated/torchvision.io.write_file.html#torchvision.io.write_file
    "torchvision.io.write_file")(filename, data) | Writes the contents of an uint8
    tensor with one dimension to a file. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ImageReadMode`](generated/torchvision.io.ImageReadMode.html#torchvision.io.ImageReadMode
    "torchvision.io.ImageReadMode")(value) | Support for various modes while reading
    images. |'
  prefs: []
  type: TYPE_TB
- en: Video[¶](#video "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`read_video`](generated/torchvision.io.read_video.html#torchvision.io.read_video
    "torchvision.io.read_video")(filename[, start_pts, end_pts, ...]) | Reads a video
    from a file, returning both the video frames and the audio frames |'
  prefs: []
  type: TYPE_TB
- en: '| [`read_video_timestamps`](generated/torchvision.io.read_video_timestamps.html#torchvision.io.read_video_timestamps
    "torchvision.io.read_video_timestamps")(filename[, pts_unit]) | List the video
    frames timestamps. |'
  prefs: []
  type: TYPE_TB
- en: '| [`write_video`](generated/torchvision.io.write_video.html#torchvision.io.write_video
    "torchvision.io.write_video")(filename, video_array, fps[, ...]) | Writes a 4d
    tensor in [T, H, W, C] format in a video file |'
  prefs: []
  type: TYPE_TB
- en: Fine-grained video API[¶](#fine-grained-video-api "Permalink to this heading")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In addition to the `read_video` function, we provide a high-performance lower-level
    API for more fine-grained control compared to the `read_video` function. It does
    all this whilst fully supporting torchscript.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: The fine-grained video API is in Beta stage, and backward compatibility is not
    guaranteed.
  prefs: []
  type: TYPE_NORMAL
- en: '| [`VideoReader`](generated/torchvision.io.VideoReader.html#torchvision.io.VideoReader
    "torchvision.io.VideoReader")(src[, stream, num_threads]) | Fine-grained video-reading
    API. |'
  prefs: []
  type: TYPE_TB
- en: 'Example of inspecting a video:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE

- en: torchtext¶
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/text/stable/index.html](https://pytorch.org/text/stable/index.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![_images/torchtext_logo.png](../Images/113ea1c7782e25cabab1e1b7a4e14a49.png)'
  prefs: []
  type: TYPE_IMG
- en: This library is part of the [PyTorch](http://pytorch.org/) project. PyTorch
    is an open source machine learning framework.
  prefs: []
  type: TYPE_NORMAL
- en: 'Features described in this documentation are classified by release status:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Stable:* These features will be maintained long-term and there should generally
    be no major performance limitations or gaps in documentation. We also expect to
    maintain backwards compatibility (although breaking changes can happen and notice
    will be given one release ahead of time).'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Beta:* Features are tagged as Beta because the API may change based on user
    feedback, because the performance needs to improve, or because coverage across
    operators is not yet complete. For Beta features, we are committing to seeing
    the feature through to the Stable classification. We are not, however, committing
    to backwards compatibility.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Prototype:* These features are typically not available as part of binary distributions
    like PyPI or Conda, except sometimes behind run-time flags, and are at an early
    stage for feedback and testing.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The [`torchtext`](#module-torchtext "torchtext") package consists of data processing
    utilities and popular datasets for natural language.
  prefs: []
  type: TYPE_NORMAL
- en: Package Reference
  prefs: []
  type: TYPE_NORMAL
- en: '[torchtext.nn](nn_modules.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MultiheadAttentionContainer](nn_modules.html#multiheadattentioncontainer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[InProjContainer](nn_modules.html#inprojcontainer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ScaledDotProduct](nn_modules.html#scaleddotproduct)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchtext.data.functional](data_functional.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[generate_sp_model](data_functional.html#generate-sp-model)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[load_sp_model](data_functional.html#load-sp-model)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[sentencepiece_numericalizer](data_functional.html#sentencepiece-numericalizer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[sentencepiece_tokenizer](data_functional.html#sentencepiece-tokenizer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[custom_replace](data_functional.html#custom-replace)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[simple_space_split](data_functional.html#simple-space-split)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[numericalize_tokens_from_iterator](data_functional.html#numericalize-tokens-from-iterator)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[filter_wikipedia_xml](data_functional.html#filter-wikipedia-xml)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[to_map_style_dataset](data_functional.html#to-map-style-dataset)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchtext.data.metrics](data_metrics.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[bleu_score](data_metrics.html#bleu-score)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchtext.data.utils](data_utils.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[get_tokenizer](data_utils.html#get-tokenizer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ngrams_iterator](data_utils.html#ngrams-iterator)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchtext.datasets](datasets.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Text Classification](datasets.html#text-classification)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Language Modeling](datasets.html#language-modeling)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Machine Translation](datasets.html#machine-translation)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sequence Tagging](datasets.html#sequence-tagging)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Question Answer](datasets.html#question-answer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unsupervised Learning](datasets.html#unsupervised-learning)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchtext.vocab](vocab.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Vocab](vocab.html#vocab)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[vocab](vocab.html#id1)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[build_vocab_from_iterator](vocab.html#build-vocab-from-iterator)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Vectors](vocab.html#vectors)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GloVe](vocab.html#glove)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[FastText](vocab.html#fasttext)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[CharNGram](vocab.html#charngram)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchtext.utils](utils.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[reporthook](utils.html#reporthook)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[download_from_url](utils.html#download-from-url)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[extract_archive](utils.html#extract-archive)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchtext.transforms](transforms.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SentencePieceTokenizer](transforms.html#sentencepiecetokenizer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[GPT2BPETokenizer](transforms.html#gpt2bpetokenizer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[CLIPTokenizer](transforms.html#cliptokenizer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RegexTokenizer](transforms.html#regextokenizer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[BERTTokenizer](transforms.html#berttokenizer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[VocabTransform](transforms.html#vocabtransform)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ToTensor](transforms.html#totensor)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[LabelToIndex](transforms.html#labeltoindex)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Truncate](transforms.html#truncate)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[AddToken](transforms.html#addtoken)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sequential](transforms.html#sequential)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PadTransform](transforms.html#padtransform)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[StrToIntTransform](transforms.html#strtointtransform)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[CharBPETokenizer](transforms.html#charbpetokenizer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchtext.functional](functional.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[to_tensor](functional.html#to-tensor)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[truncate](functional.html#truncate)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[add_token](functional.html#add-token)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[str_to_int](functional.html#str-to-int)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchtext.models](models.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RobertaBundle](models.html#robertabundle)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[XLMR_BASE_ENCODER](models.html#xlmr-base-encoder)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[XLMR_LARGE_ENCODER](models.html#xlmr-large-encoder)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ROBERTA_BASE_ENCODER](models.html#roberta-base-encoder)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ROBERTA_LARGE_ENCODER](models.html#roberta-large-encoder)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting Started[¶](#getting-started "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Getting Started
  prefs: []
  type: TYPE_NORMAL
- en: '[SST-2 Binary text classification with XLM-RoBERTa model](tutorials/sst2_classification_non_distributed.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[T5-Base Model for Summarization, Sentiment Classification, and Translation](tutorials/t5_demo.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PyTorch Libraries
  prefs: []
  type: TYPE_NORMAL
- en: '[PyTorch](https://pytorch.org/docs)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchaudio](https://pytorch.org/audio)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchtext](https://pytorch.org/text)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[torchvision](https://pytorch.org/vision)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[TorchElastic](https://pytorch.org/elastic/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[TorchServe](https://pytorch.org/serve)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PyTorch on XLA Devices](http://pytorch.org/xla/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL

- en: Audio Data Augmentation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 音频数据增强
- en: 原文：[https://pytorch.org/audio/stable/tutorials/audio_data_augmentation_tutorial.html](https://pytorch.org/audio/stable/tutorials/audio_data_augmentation_tutorial.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/audio/stable/tutorials/audio_data_augmentation_tutorial.html](https://pytorch.org/audio/stable/tutorials/audio_data_augmentation_tutorial.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Click [here](#sphx-glr-download-tutorials-audio-data-augmentation-tutorial-py)
    to download the full example code
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 点击[这里](#sphx-glr-download-tutorials-audio-data-augmentation-tutorial-py)下载完整示例代码
- en: '**Author**: [Moto Hira](mailto:moto%40meta.com)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者**: [Moto Hira](mailto:moto%40meta.com)'
- en: '`torchaudio` provides a variety of ways to augment audio data.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`torchaudio` 提供了多种增强音频数据的方法。'
- en: In this tutorial, we look into a way to apply effects, filters, RIR (room impulse
    response) and codecs.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将探讨一种应用效果、滤波器、RIR（房间冲激响应）和编解码器的方法。
- en: At the end, we synthesize noisy speech over phone from clean speech.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们从干净的语音中合成带噪声的电话语音。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Preparation[](#preparation "Permalink to this heading")
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作[](#preparation "跳转到此标题的永久链接")
- en: First, we import the modules and download the audio assets we use in this tutorial.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们导入模块并下载本教程中使用的音频资产。
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Applying effects and filtering[](#applying-effects-and-filtering "Permalink
    to this heading")
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用效果和滤波[](#applying-effects-and-filtering "跳转到此标题的永久链接")
- en: '[`torchaudio.io.AudioEffector`](../generated/torchaudio.io.AudioEffector.html#torchaudio.io.AudioEffector
    "torchaudio.io.AudioEffector") allows for directly applying filters and codecs
    to Tensor objects, in a similar way as `ffmpeg` command'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`torchaudio.io.AudioEffector`](../generated/torchaudio.io.AudioEffector.html#torchaudio.io.AudioEffector
    "torchaudio.io.AudioEffector") 允许直接将滤波器和编解码器应用于张量对象，类似于 `ffmpeg` 命令'
- en: AudioEffector Usages <./effector_tutorial.html> explains how to use this class,
    so for the detail, please refer to the tutorial.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: AudioEffector 用法 <./effector_tutorial.html> 解释了如何使用这个类，因此详细信息请参考教程。
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note that the number of frames and number of channels are different from those
    of the original after the effects are applied. Let’s listen to the audio.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，应用效果后，帧数和通道数与原始数据不同。让我们听一下音频。
- en: '[PRE6]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Original[](#original "Permalink to this heading")
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原始[](#original "跳转到此标题的永久链接")
- en: '[PRE8]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Original](../Images/fd3a3a2790a98d9fbdf35ffecf8587e9.png)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![原始](../Images/fd3a3a2790a98d9fbdf35ffecf8587e9.png)'
- en: '![Original](../Images/f52e4934ba626b863f8e8a2d4790f2c6.png)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![原始](../Images/f52e4934ba626b863f8e8a2d4790f2c6.png)'
- en: null
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Effects applied[](#effects-applied "Permalink to this heading")
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用的效果[](#effects-applied "跳转到此标题的永久链接")
- en: '[PRE9]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Effects Applied](../Images/a82e5c6d55bae10c1c9e2581fc308d54.png)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![应用了效果](../Images/a82e5c6d55bae10c1c9e2581fc308d54.png)'
- en: '![Effects Applied](../Images/5e9bb14130f4a614142bdb66ad8e731f.png)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![应用了效果](../Images/5e9bb14130f4a614142bdb66ad8e731f.png)'
- en: null
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Simulating room reverberation[](#simulating-room-reverberation "Permalink to
    this heading")
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟房间混响[](#simulating-room-reverberation "跳转到此标题的永久链接")
- en: '[Convolution reverb](https://en.wikipedia.org/wiki/Convolution_reverb) is a
    technique that’s used to make clean audio sound as though it has been produced
    in a different environment.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[卷积混响](https://en.wikipedia.org/wiki/Convolution_reverb) 是一种技术，用于使干净的音频听起来好像是在不同的环境中产生的。'
- en: Using Room Impulse Response (RIR), for instance, we can make clean speech sound
    as though it has been uttered in a conference room.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，使用房间冲激响应（RIR），我们可以使干净的语音听起来好像是在会议室中发出的。
- en: For this process, we need RIR data. The following data are from the VOiCES dataset,
    but you can record your own — just turn on your microphone and clap your hands.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个过程，我们需要 RIR 数据。以下数据来自 VOiCES 数据集，但您也可以录制自己的数据 — 只需打开麦克风并拍手。
- en: '[PRE10]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Room Impulse Response (raw)](../Images/f73a484c4bc6e6778cfb4ad26a629b7a.png)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![房间冲激响应（原始）](../Images/f73a484c4bc6e6778cfb4ad26a629b7a.png)'
- en: '![Room Impulse Response (raw)](../Images/c37679ae712317905097e6ad96d57ed1.png)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![房间冲激响应（原始）](../Images/c37679ae712317905097e6ad96d57ed1.png)'
- en: null
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: First, we need to clean up the RIR. We extract the main impulse and normalize
    it by its power.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要清理 RIR。我们提取主要脉冲并通过其功率进行归一化。
- en: '[PRE11]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Room Impulse Response](../Images/788c83e33cb0b55e5f21cf93bca8808f.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![房间冲激响应](../Images/788c83e33cb0b55e5f21cf93bca8808f.png)'
- en: Then, using [`torchaudio.functional.fftconvolve()`](../generated/torchaudio.functional.fftconvolve.html#torchaudio.functional.fftconvolve
    "torchaudio.functional.fftconvolve"), we convolve the speech signal with the RIR.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用 [`torchaudio.functional.fftconvolve()`](../generated/torchaudio.functional.fftconvolve.html#torchaudio.functional.fftconvolve
    "torchaudio.functional.fftconvolve")，我们将语音信号与 RIR 进行卷积。
- en: '[PRE12]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Original[](#id1 "Permalink to this heading")
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原始[](#id1 "跳转到此标题的永久链接")
- en: '[PRE13]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Original](../Images/0f2a5c0e0bfb1d0890035e4da34d5498.png)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![原始](../Images/0f2a5c0e0bfb1d0890035e4da34d5498.png)'
- en: '![Original](../Images/4b10804a900de5f0e8495b94b28ed9a3.png)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![原始](../Images/4b10804a900de5f0e8495b94b28ed9a3.png)'
- en: null
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: RIR applied[](#rir-applied "Permalink to this heading")
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用了 RIR[](#rir-applied "跳转到此标题的永久链接")
- en: '[PRE14]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![RIR Applied](../Images/0e27d20e2c9282fff85ef0e288df2461.png)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![应用了 RIR](../Images/0e27d20e2c9282fff85ef0e288df2461.png)'
- en: '![RIR Applied](../Images/e378af1235090badb424a929fa3699d3.png)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![应用了RIR](../Images/e378af1235090badb424a929fa3699d3.png)'
- en: null
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Adding background noise[](#adding-background-noise "Permalink to this heading")
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加背景噪声[](#adding-background-noise "跳转到此标题的永久链接")
- en: To introduce background noise to audio data, we can add a noise Tensor to the
    Tensor representing the audio data according to some desired signal-to-noise ratio
    (SNR) [[wikipedia](https://en.wikipedia.org/wiki/Signal-to-noise_ratio)], which
    determines the intensity of the audio data relative to that of the noise in the
    output.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了向音频数据引入背景噪声，我们可以根据一定的信噪比（SNR）[[维基百科](https://en.wikipedia.org/wiki/Signal-to-noise_ratio)]，将噪声张量添加到表示音频数据的张量中，该信噪比确定了输出中音频数据相对于噪声的强度。
- en: $$ \mathrm{SNR} = \frac{P_{signal}}{P_{noise}} $$
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: $$ \mathrm{SNR} = \frac{P_{signal}}{P_{noise}} $$
- en: $$ \mathrm{SNR_{dB}} = 10 \log _{{10}} \mathrm {SNR} $$
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: $$ \mathrm{SNR_{dB}} = 10 \log _{{10}} \mathrm {SNR} $$
- en: To add noise to audio data per SNRs, we use [`torchaudio.functional.add_noise()`](../generated/torchaudio.functional.add_noise.html#torchaudio.functional.add_noise
    "torchaudio.functional.add_noise").
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要根据 SNR 添加噪声到音频数据，我们使用 [`torchaudio.functional.add_noise()`](../generated/torchaudio.functional.add_noise.html#torchaudio.functional.add_noise
    "torchaudio.functional.add_noise")。
- en: '[PRE15]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Background noise[](#background-noise "Permalink to this heading")
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 背景噪音[](#background-noise "Permalink to this heading")
- en: '[PRE16]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Background noise](../Images/2195bd8e66f6a6580ee504b1adb91363.png)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![背景噪音](../Images/2195bd8e66f6a6580ee504b1adb91363.png)'
- en: '![Background noise](../Images/0d5bd7d1f937b6ae3f831e3e52acfd63.png)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![背景噪音](../Images/0d5bd7d1f937b6ae3f831e3e52acfd63.png)'
- en: null
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: SNR 20 dB[](#snr-20-db "Permalink to this heading")
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SNR 20 dB[](#snr-20-db "Permalink to this heading")
- en: '[PRE17]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![SNR: 20 [dB]](../Images/f7a8cf1735194651621a1350821f57dd.png)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![SNR: 20 [dB]](../Images/f7a8cf1735194651621a1350821f57dd.png)'
- en: '![SNR: 20 [dB]](../Images/cdb0c54dbc451ae3a5fcdbf39808ecc1.png)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![SNR: 20 [dB]](../Images/cdb0c54dbc451ae3a5fcdbf39808ecc1.png)'
- en: null
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: SNR 10 dB[](#snr-10-db "Permalink to this heading")
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SNR 10 dB[](#snr-10-db "Permalink to this heading")
- en: '[PRE18]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![SNR: 10 [dB]](../Images/8fd46e30c011a829fcb048b98e4f1ab6.png)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![SNR: 10 [dB]](../Images/8fd46e30c011a829fcb048b98e4f1ab6.png)'
- en: '![SNR: 10 [dB]](../Images/17d02f8b37a65e6ba53bbba437582a37.png)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![SNR: 10 [dB]](../Images/17d02f8b37a65e6ba53bbba437582a37.png)'
- en: null
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: SNR 3 dB[](#snr-3-db "Permalink to this heading")
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SNR 3 dB[](#snr-3-db "Permalink to this heading")
- en: '[PRE19]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![SNR: 3 [dB]](../Images/37e0900a5daa43f41c546c972044c4a0.png)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![SNR: 3 [dB]](../Images/37e0900a5daa43f41c546c972044c4a0.png)'
- en: '![SNR: 3 [dB]](../Images/f50ed2b87b84504cbdb4d465036f9918.png)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![SNR: 3 [dB]](../Images/f50ed2b87b84504cbdb4d465036f9918.png)'
- en: null
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Applying codec to Tensor object[](#applying-codec-to-tensor-object "Permalink
    to this heading")
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将编解码器应用于 Tensor 对象[](#applying-codec-to-tensor-object "Permalink to this heading")
- en: '[`torchaudio.io.AudioEffector`](../generated/torchaudio.io.AudioEffector.html#torchaudio.io.AudioEffector
    "torchaudio.io.AudioEffector") can also apply codecs to a Tensor object.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[`torchaudio.io.AudioEffector`](../generated/torchaudio.io.AudioEffector.html#torchaudio.io.AudioEffector
    "torchaudio.io.AudioEffector") 也可以将编解码器应用于 Tensor 对象。'
- en: '[PRE20]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Original[](#id2 "Permalink to this heading")
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原始[](#id2 "Permalink to this heading")
- en: '[PRE21]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![Original](../Images/7e4df06a19a9b0b5cb5dbb489245e170.png)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![原始](../Images/7e4df06a19a9b0b5cb5dbb489245e170.png)'
- en: '![Original](../Images/f1649f72c67453bb1a4f5aa7df74834d.png)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![原始](../Images/f1649f72c67453bb1a4f5aa7df74834d.png)'
- en: null
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: 8 bit mu-law[](#bit-mu-law "Permalink to this heading")
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 8 位 mu-law[](#bit-mu-law "Permalink to this heading")
- en: '[PRE22]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![8 bit mu-law](../Images/da7d3b00ec3c94bda66e5ed9dcecc4ef.png)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![8 bit mu-law](../Images/da7d3b00ec3c94bda66e5ed9dcecc4ef.png)'
- en: '![8 bit mu-law](../Images/233500bee78b4550f44ff61a1e4265d0.png)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![8 bit mu-law](../Images/233500bee78b4550f44ff61a1e4265d0.png)'
- en: null
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: G.722[](#g-722 "Permalink to this heading")
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: G.722[](#g-722 "Permalink to this heading")
- en: '[PRE23]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![G.722](../Images/97bb1fc2f122f9baab51c4d4178c0369.png)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![G.722](../Images/97bb1fc2f122f9baab51c4d4178c0369.png)'
- en: '![G.722](../Images/79494d74bcb76479497243b7b87b4a1e.png)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![G.722](../Images/79494d74bcb76479497243b7b87b4a1e.png)'
- en: null
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Vorbis[](#vorbis "Permalink to this heading")
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Vorbis[](#vorbis "Permalink to this heading")
- en: '[PRE24]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![Vorbis](../Images/3d2870afbcb3f87befd96c079f07422b.png)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![Vorbis](../Images/3d2870afbcb3f87befd96c079f07422b.png)'
- en: '![Vorbis](../Images/e4d754f05dbc5041ae2702eef0a6e5fc.png)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![Vorbis](../Images/e4d754f05dbc5041ae2702eef0a6e5fc.png)'
- en: null
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Simulating a phone recoding[](#simulating-a-phone-recoding "Permalink to this
    heading")
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟电话录音[](#simulating-a-phone-recoding "Permalink to this heading")
- en: Combining the previous techniques, we can simulate audio that sounds like a
    person talking over a phone in a echoey room with people talking in the background.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 结合前面的技术，我们可以模拟听起来像一个人在带有回声的房间里通过电话交谈，背景有人在说话的音频。
- en: '[PRE25]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Original](../Images/5691335d0652824bed1251f32ebb4df8.png)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![原始](../Images/5691335d0652824bed1251f32ebb4df8.png)'
- en: '![RIR Applied](../Images/2d426224493946d97ab5a594c6ffac62.png)'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![RIR 应用](../Images/2d426224493946d97ab5a594c6ffac62.png)'
- en: '![BG noise added](../Images/7814889105a2285420d8412a167108c0.png)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![添加了背景噪音](../Images/7814889105a2285420d8412a167108c0.png)'
- en: '![Filtered](../Images/95fad1dd9f3d229a7e22a16e829686f3.png)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![Filtered](../Images/95fad1dd9f3d229a7e22a16e829686f3.png)'
- en: '![G.722 Codec Applied](../Images/b087cc2781e5c09b6c5e4e2d541fd64b.png)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![G.722 编解码器应用](../Images/b087cc2781e5c09b6c5e4e2d541fd64b.png)'
- en: Original speech[](#original-speech "Permalink to this heading")
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原始语音[](#original-speech "Permalink to this heading")
- en: '[PRE26]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: null
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: RIR applied[](#id3 "Permalink to this heading")
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 已应用 RIR[](#id3 "Permalink to this heading")
- en: '[PRE27]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: null
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Background noise added[](#background-noise-added "Permalink to this heading")
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加了背景噪音[](#background-noise-added "Permalink to this heading")
- en: '[PRE28]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: null
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Filtered[](#filtered "Permalink to this heading")
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Filtered[](#filtered "Permalink to this heading")
- en: '[PRE29]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: null
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Codec applied[](#codec-applied "Permalink to this heading")
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 已应用编解码器[](#codec-applied "Permalink to this heading")
- en: '[PRE30]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: null
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support the audio element.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: '**Total running time of the script:** ( 0 minutes 13.432 seconds)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**脚本的总运行时间：**（0 分钟 13.432 秒）'
- en: '[`Download Python source code: audio_data_augmentation_tutorial.py`](../_downloads/5035f46f2e1c1557dfa0ffabb90a0b0a/audio_data_augmentation_tutorial.py)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载 Python 源代码：audio_data_augmentation_tutorial.py`](../_downloads/5035f46f2e1c1557dfa0ffabb90a0b0a/audio_data_augmentation_tutorial.py)'
- en: '[`Download Jupyter notebook: audio_data_augmentation_tutorial.ipynb`](../_downloads/08314ca72c2aad9b7951279f0a24a983/audio_data_augmentation_tutorial.ipynb)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载 Jupyter 笔记本：audio_data_augmentation_tutorial.ipynb`](../_downloads/08314ca72c2aad9b7951279f0a24a983/audio_data_augmentation_tutorial.ipynb)'
- en: '[Gallery generated by Sphinx-Gallery](https://sphinx-gallery.github.io)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sphinx-Gallery 生成的画廊](https://sphinx-gallery.github.io)'

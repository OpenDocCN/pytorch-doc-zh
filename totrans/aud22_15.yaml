- en: Audio I/O
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 音频I/O
- en: 原文：[https://pytorch.org/audio/stable/tutorials/audio_io_tutorial.html](https://pytorch.org/audio/stable/tutorials/audio_io_tutorial.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/audio/stable/tutorials/audio_io_tutorial.html](https://pytorch.org/audio/stable/tutorials/audio_io_tutorial.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Click [here](#sphx-glr-download-tutorials-audio-io-tutorial-py) to download
    the full example code
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 点击[这里](#sphx-glr-download-tutorials-audio-io-tutorial-py)下载完整示例代码
- en: '**Author**: [Moto Hira](mailto:moto%40meta.com)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**作者**：[Moto Hira](mailto:moto%40meta.com)'
- en: This tutorial shows how to use TorchAudio’s basic I/O API to inspect audio data,
    load them into PyTorch Tensors and save PyTorch Tensors.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程展示了如何使用TorchAudio的基本I/O API来检查音频数据，将其加载到PyTorch张量中并保存PyTorch张量。
- en: Warning
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: There are multiple changes planned/made to audio I/O in recent releases. For
    the detail of these changes please refer to [Introduction of Dispatcher](../torchaudio.html#dispatcher-migration).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最近的版本中计划/已经对音频I/O进行了多个更改。有关这些更改的详细信息，请参阅[Dispatcher介绍](../torchaudio.html#dispatcher-migration)。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Preparation[](#preparation "Permalink to this heading")
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备[](#preparation "跳转到此标题的永久链接")
- en: First, we import the modules and download the audio assets we use in this tutorial.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们导入模块并下载本教程中使用的音频资产。
- en: Note
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'When running this tutorial in Google Colab, install the required packages with
    the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在Google Colab中运行此教程时，请使用以下命令安装所需的软件包：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Querying audio metadata[](#querying-audio-metadata "Permalink to this heading")
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询音频元数据[](#querying-audio-metadata "跳转到此标题的永久链接")
- en: Function [`torchaudio.info()`](../generated/torchaudio.info.html#torchaudio.info
    "torchaudio.info") fetches audio metadata. You can provide a path-like object
    or file-like object.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 函数[`torchaudio.info()`](../generated/torchaudio.info.html#torchaudio.info "torchaudio.info")获取音频元数据。您可以提供路径类似对象或类似文件对象。
- en: '[PRE5]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Where
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 其中
- en: '`sample_rate` is the sampling rate of the audio'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample_rate`是音频的采样率'
- en: '`num_channels` is the number of channels'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_channels`是通道数'
- en: '`num_frames` is the number of frames per channel'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_frames`是每个通道的帧数'
- en: '`bits_per_sample` is bit depth'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bits_per_sample` 是比特深度'
- en: '`encoding` is the sample coding format'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`encoding`是样本编码格式'
- en: '`encoding` can take on one of the following values:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`encoding`可以取以下值之一：'
- en: '`"PCM_S"`: Signed integer linear PCM'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"PCM_S"`：有符号整数线性PCM'
- en: '`"PCM_U"`: Unsigned integer linear PCM'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"PCM_U"`：无符号整数线性PCM'
- en: '`"PCM_F"`: Floating point linear PCM'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"PCM_F"`：浮点线性PCM'
- en: '`"FLAC"`: Flac, [Free Lossless Audio Codec](https://xiph.org/flac/)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"FLAC"`：Flac，[无损音频编解码器](https://xiph.org/flac/)'
- en: '`"ULAW"`: Mu-law, [[wikipedia](https://en.wikipedia.org/wiki/%CE%9C-law_algorithm)]'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"ULAW"`：Mu-law，[[维基百科](https://en.wikipedia.org/wiki/%CE%9C-law_algorithm)]'
- en: '`"ALAW"`: A-law [[wikipedia](https://en.wikipedia.org/wiki/A-law_algorithm)]'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"ALAW"`：A-law[[维基百科](https://en.wikipedia.org/wiki/A-law_algorithm)]'
- en: '`"MP3"` : MP3, MPEG-1 Audio Layer III'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"MP3"`：MP3，MPEG-1音频层III'
- en: '`"VORBIS"`: OGG Vorbis [[xiph.org](https://xiph.org/vorbis/)]'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"VORBIS"`：OGG Vorbis[[xiph.org](https://xiph.org/vorbis/)]'
- en: '`"AMR_NB"`: Adaptive Multi-Rate [[wikipedia](https://en.wikipedia.org/wiki/Adaptive_Multi-Rate_audio_codec)]'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"AMR_NB"`：自适应多速率[[维基百科](https://en.wikipedia.org/wiki/Adaptive_Multi-Rate_audio_codec)]'
- en: '`"AMR_WB"`: Adaptive Multi-Rate Wideband [[wikipedia](https://en.wikipedia.org/wiki/Adaptive_Multi-Rate_Wideband)]'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"AMR_WB"`：自适应多速率宽带[[维基百科](https://en.wikipedia.org/wiki/Adaptive_Multi-Rate_Wideband)]'
- en: '`"OPUS"`: Opus [[opus-codec.org](https://opus-codec.org/)]'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"OPUS"`：Opus[[opus-codec.org](https://opus-codec.org/)]'
- en: '`"GSM"`: GSM-FR [[wikipedia](https://en.wikipedia.org/wiki/Full_Rate)]'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"GSM"`：GSM-FR[[维基百科](https://en.wikipedia.org/wiki/Full_Rate)]'
- en: '`"HTK"`: Single channel 16-bit PCM'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"HTK"`：单声道16位PCM'
- en: '`"UNKNOWN"` None of above'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"UNKNOWN"` 以上都不是'
- en: '**Note**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '`bits_per_sample` can be `0` for formats with compression and/or variable bit
    rate (such as MP3).'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于具有压缩和/或可变比特率（如MP3）的格式，`bits_per_sample`可以是`0`。
- en: '`num_frames` can be `0` for GSM-FR format.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于GSM-FR格式，`num_frames`可以是`0`。
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Querying file-like object[](#querying-file-like-object "Permalink to this heading")
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询类似文件的对象[](#querying-file-like-object "跳转到此标题的永久链接")
- en: '[`torchaudio.info()`](../generated/torchaudio.info.html#torchaudio.info "torchaudio.info")
    works on file-like objects.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[`torchaudio.info()`](../generated/torchaudio.info.html#torchaudio.info "torchaudio.info")适用于类似文件的对象。'
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When passing a file-like object, `info` does not read all of the underlying
    data; rather, it reads only a portion of the data from the beginning. Therefore,
    for a given audio format, it may not be able to retrieve the correct metadata,
    including the format itself. In such case, you can pass `format` argument to specify
    the format of the audio.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当传递类似文件的对象时，`info`不会读取所有底层数据；相反，它只从开头读取部分数据。因此，对于给定的音频格式，可能无法检索正确的元数据，包括格式本身。在这种情况下，您可以传递`format`参数来指定音频的格式。
- en: Loading audio data[](#loading-audio-data "Permalink to this heading")
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载音频数据[](#loading-audio-data "跳转到此标题的永久链接")
- en: To load audio data, you can use [`torchaudio.load()`](../generated/torchaudio.load.html#torchaudio.load
    "torchaudio.load").
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要加载音频数据，您可以使用[`torchaudio.load()`](../generated/torchaudio.load.html#torchaudio.load
    "torchaudio.load")。
- en: This function accepts a path-like object or file-like object as input.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数接受路径类似对象或类似文件对象作为输入。
- en: The returned value is a tuple of waveform (`Tensor`) and sample rate (`int`).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的值是波形（`Tensor`）和采样率（`int`）的元组。
- en: By default, the resulting tensor object has `dtype=torch.float32` and its value
    range is `[-1.0, 1.0]`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，生成的张量对象的`dtype=torch.float32`，其值范围是`[-1.0, 1.0]`。
- en: For the list of supported format, please refer to [the torchaudio documentation](https://pytorch.org/audio).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 有关支持的格式列表，请参阅[torchaudio文档](https://pytorch.org/audio)。
- en: '[PRE11]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![waveform](../Images/9466cf198ed5765d8c8e3bd73ec41b5b.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![波形](../Images/9466cf198ed5765d8c8e3bd73ec41b5b.png)'
- en: '[PRE14]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Spectrogram](../Images/0c90411a5757b0c0402e369e8c52cc02.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![频谱图](../Images/0c90411a5757b0c0402e369e8c52cc02.png)'
- en: '[PRE16]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Your browser does not support the audio element.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持音频元素。
- en: Loading from file-like object[](#loading-from-file-like-object "Permalink to
    this heading")
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从类似文件的对象加载[](#loading-from-file-like-object "跳转到此标题")
- en: The I/O functions support file-like objects. This allows for fetching and decoding
    audio data from locations within and beyond the local file system. The following
    examples illustrate this.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: I/O函数支持类似文件的对象。这允许从本地文件系统内部和外部的位置获取和解码音频数据。以下示例说明了这一点。
- en: '[PRE17]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![HTTP datasource](../Images/aa8a354438ec7213bf2e13d228e574da.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![HTTP数据源](../Images/aa8a354438ec7213bf2e13d228e574da.png)'
- en: '[PRE18]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![TAR file](../Images/9e8e1ea10bbe1e3e7fb26fa34d71fe35.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![TAR文件](../Images/9e8e1ea10bbe1e3e7fb26fa34d71fe35.png)'
- en: '[PRE19]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![From S3](../Images/2934ed5eec98ab84e92b9bb4f4e2fd1f.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![来自S3](../Images/2934ed5eec98ab84e92b9bb4f4e2fd1f.png)'
- en: Tips on slicing[](#tips-on-slicing "Permalink to this heading")
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 切片技巧[](#tips-on-slicing "跳转到此标题")
- en: Providing `num_frames` and `frame_offset` arguments restricts decoding to the
    corresponding segment of the input.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 提供`num_frames`和`frame_offset`参数会限制解码到输入的相应段。
- en: The same result can be achieved using vanilla Tensor slicing, (i.e. `waveform[:,
    frame_offset:frame_offset+num_frames]`). However, providing `num_frames` and `frame_offset`
    arguments is more efficient.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用普通张量切片也可以实现相同的结果（即`waveform[:, frame_offset:frame_offset+num_frames]`）。但是，提供`num_frames`和`frame_offset`参数更有效。
- en: This is because the function will end data acquisition and decoding once it
    finishes decoding the requested frames. This is advantageous when the audio data
    are transferred via network as the data transfer will stop as soon as the necessary
    amount of data is fetched.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为一旦完成对请求帧的解码，该函数将结束数据采集和解码。当音频数据通过网络传输时，这是有利的，因为数据传输将在获取到必要数量的数据后立即停止。
- en: The following example illustrates this.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例说明了这一点。
- en: '[PRE21]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Saving audio to file[](#saving-audio-to-file "Permalink to this heading")
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保存音频到文件[](#saving-audio-to-file "跳转到此标题")
- en: To save audio data in formats interpretable by common applications, you can
    use [`torchaudio.save()`](../generated/torchaudio.save.html#torchaudio.save "torchaudio.save").
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要将音频数据保存为常见应用程序可解释的格式，您可以使用[`torchaudio.save()`](../generated/torchaudio.save.html#torchaudio.save
    "torchaudio.save")。
- en: This function accepts a path-like object or file-like object.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数接受类似路径的对象或类似文件的对象。
- en: When passing a file-like object, you also need to provide argument `format`
    so that the function knows which format it should use. In the case of a path-like
    object, the function will infer the format from the extension. If you are saving
    to a file without an extension, you need to provide argument `format`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当传递类似文件的对象时，您还需要提供参数`format`，以便函数知道应该使用哪种格式。对于类似路径的对象，函数将从扩展名推断格式。如果要保存到没有扩展名的文件中，您需要提供参数`format`。
- en: When saving WAV-formatted data, the default encoding for `float32` Tensor is
    32-bit floating-point PCM. You can provide arguments `encoding` and `bits_per_sample`
    to change this behavior. For example, to save data in 16-bit signed integer PCM,
    you can do the following.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 保存为WAV格式数据时，默认的`float32`张量编码为32位浮点PCM。您可以提供参数`encoding`和`bits_per_sample`来更改此行为。例如，要以16位有符号整数PCM保存数据，可以执行以下操作。
- en: Note
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Saving data in encodings with a lower bit depth reduces the resulting file size
    but also precision.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 以较低比特深度保存数据会减小生成文件的大小，但也会降低精度。
- en: '[PRE23]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Save without any encoding option. The function will pick up the encoding which
    the provided data fit
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 不使用任何编码选项保存。函数将选择提供的数据适合的编码
- en: '[PRE25]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Save as 16-bit signed integer Linear PCM The resulting file occupies half the
    storage but loses precision
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 保存为16位有符号整数线性PCM，生成的文件占用一半的存储空间，但失去了精度
- en: '[PRE27]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[`torchaudio.save()`](../generated/torchaudio.save.html#torchaudio.save "torchaudio.save")
    can also handle other formats. To name a few:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[`torchaudio.save()`](../generated/torchaudio.save.html#torchaudio.save "torchaudio.save")也可以处理其他格式。举几个例子：'
- en: '[PRE29]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Saving to file-like object[](#saving-to-file-like-object "Permalink to this
    heading")
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保存到类似文件的对象[](#saving-to-file-like-object "跳转到此标题")
- en: Similar to the other I/O functions, you can save audio to file-like objects.
    When saving to a file-like object, argument `format` is required.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他I/O函数类似，您可以将音频保存到类似文件的对象中。保存到类似文件的对象时，需要提供参数`format`。
- en: '[PRE32]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '**Total running time of the script:** ( 0 minutes 1.941 seconds)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**脚本的总运行时间：**（0分钟1.941秒）'
- en: '[`Download Python source code: audio_io_tutorial.py`](../_downloads/a50b7a9d7eda039b9579621100be1417/audio_io_tutorial.py)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载Python源代码：audio_io_tutorial.py`](../_downloads/a50b7a9d7eda039b9579621100be1417/audio_io_tutorial.py)'
- en: '[`Download Jupyter notebook: audio_io_tutorial.ipynb`](../_downloads/4d63e50ab0e70c0e96fd6641e0823ce8/audio_io_tutorial.ipynb)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[`下载Jupyter笔记本：audio_io_tutorial.ipynb`](../_downloads/4d63e50ab0e70c0e96fd6641e0823ce8/audio_io_tutorial.ipynb)'
- en: '[Gallery generated by Sphinx-Gallery](https://sphinx-gallery.github.io)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sphinx-Gallery生成的图库](https://sphinx-gallery.github.io)'

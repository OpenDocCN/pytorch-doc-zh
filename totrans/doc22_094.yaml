- en: Type Info
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/docs/stable/type_info.html](https://pytorch.org/docs/stable/type_info.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The numerical properties of a [`torch.dtype`](tensor_attributes.html#torch.dtype
    "torch.dtype") can be accessed through either the [`torch.finfo`](#torch.torch.finfo
    "torch.torch.finfo") or the [`torch.iinfo`](#torch.torch.iinfo "torch.torch.iinfo").
  prefs: []
  type: TYPE_NORMAL
- en: '## torch.finfo'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A [`torch.finfo`](#torch.torch.finfo "torch.torch.finfo") is an object that
    represents the numerical properties of a floating point [`torch.dtype`](tensor_attributes.html#torch.dtype
    "torch.dtype"), (i.e. `torch.float32`, `torch.float64`, `torch.float16`, and `torch.bfloat16`).
    This is similar to [numpy.finfo](https://docs.scipy.org/doc/numpy/reference/generated/numpy.finfo.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'A [`torch.finfo`](#torch.torch.finfo "torch.torch.finfo") provides the following
    attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| bits | int | The number of bits occupied by the type. |'
  prefs: []
  type: TYPE_TB
- en: '| eps | float | The smallest representable number such that `1.0 + eps != 1.0`.
    |'
  prefs: []
  type: TYPE_TB
- en: '| max | float | The largest representable number. |'
  prefs: []
  type: TYPE_TB
- en: '| min | float | The smallest representable number (typically `-max`). |'
  prefs: []
  type: TYPE_TB
- en: '| tiny | float | The smallest positive normal number. Equivalent to `smallest_normal`.
    |'
  prefs: []
  type: TYPE_TB
- en: '| smallest_normal | float | The smallest positive normal number. See notes.
    |'
  prefs: []
  type: TYPE_TB
- en: '| resolution | float | The approximate decimal resolution of this type, i.e.,
    `10**-precision`. |'
  prefs: []
  type: TYPE_TB
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The constructor of [`torch.finfo`](#torch.torch.finfo "torch.torch.finfo") can
    be called without argument, in which case the class is created for the pytorch
    default dtype (as returned by [`torch.get_default_dtype()`](generated/torch.get_default_dtype.html#torch.get_default_dtype
    "torch.get_default_dtype")).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'smallest_normal returns the smallest *normal* number, but there are smaller
    subnormal numbers. See [https://en.wikipedia.org/wiki/Denormal_number](https://en.wikipedia.org/wiki/Denormal_number)
    for more information.  ## torch.iinfo'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: A [`torch.iinfo`](#torch.torch.iinfo "torch.torch.iinfo") is an object that
    represents the numerical properties of a integer [`torch.dtype`](tensor_attributes.html#torch.dtype
    "torch.dtype") (i.e. `torch.uint8`, `torch.int8`, `torch.int16`, `torch.int32`,
    and `torch.int64`). This is similar to [numpy.iinfo](https://docs.scipy.org/doc/numpy/reference/generated/numpy.iinfo.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'A [`torch.iinfo`](#torch.torch.iinfo "torch.torch.iinfo") provides the following
    attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| bits | int | The number of bits occupied by the type. |'
  prefs: []
  type: TYPE_TB
- en: '| max | int | The largest representable number. |'
  prefs: []
  type: TYPE_TB
- en: '| min | int | The smallest representable number. |'
  prefs: []
  type: TYPE_TB

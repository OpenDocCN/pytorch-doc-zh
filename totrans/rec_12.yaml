- en: torchrec.quant
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: torchrec.quant
- en: 原文：[https://pytorch.org/torchrec/torchrec.quant.html](https://pytorch.org/torchrec/torchrec.quant.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[https://pytorch.org/torchrec/torchrec.quant.html](https://pytorch.org/torchrec/torchrec.quant.html)'
- en: Torchrec Quantization
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Torchrec量化
- en: Torchrec provides a quantized version of EmbeddingBagCollection for inference.
    It relies on fbgemm quantized ops. This reduces the size of the model weights
    and speeds up model execution.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Torchrec为推断提供了EmbeddingBagCollection的量化版本。它依赖于fbgemm量化操作。这减少了模型权重的大小并加快了模型执行速度。
- en: Example
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '## torchrec.quant.embedding_modules[](#module-torchrec.quant.embedding_modules
    "Permalink to this heading")'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '## torchrec.quant.embedding_modules[](#module-torchrec.quant.embedding_modules
    "Permalink to this heading")'
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Bases: [`EmbeddingBagCollectionInterface`](torchrec.modules.html#torchrec.modules.embedding_modules.EmbeddingBagCollectionInterface
    "torchrec.modules.embedding_modules.EmbeddingBagCollectionInterface"), `ModuleNoCopyMixin`'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 基础：[`EmbeddingBagCollectionInterface`](torchrec.modules.html#torchrec.modules.embedding_modules.EmbeddingBagCollectionInterface
    "torchrec.modules.embedding_modules.EmbeddingBagCollectionInterface"), `ModuleNoCopyMixin`
- en: EmbeddingBagCollection represents a collection of pooled embeddings (EmbeddingBags).
    This EmbeddingBagCollection is quantized for lower precision. It relies on fbgemm
    quantized ops and provides table batching.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: EmbeddingBagCollection表示池化嵌入（EmbeddingBags）的集合。这个EmbeddingBagCollection被量化为较低的精度。它依赖于fbgemm量化操作并提供表批处理。
- en: 'It processes sparse data in the form of KeyedJaggedTensor with values of the
    form [F X B X L] F: features (keys) B: batch size L: Length of sparse features
    (jagged)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '它处理形式为 [F X B X L] 的KeyedJaggedTensor的稀疏数据 F: 特征（键） B: 批量大小 L: 稀疏特征的长度（不规则）'
- en: 'and outputs a KeyedTensor with values of the form [B * (F * D)] where F: features
    (keys) D: each feature’s (key’s) embedding dimension B: batch size'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '并输出形式为 [B * (F * D)] 的KeyedTensor，其中 F: 特征（键） D: 每个特征（键）的嵌入维度 B: 批量大小'
- en: 'Parameters:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**table_name_to_quantized_weights** (*Dict**[**str**,* *Tuple**[**Tensor**,*
    *Tensor**]**]*) – map of tables to quantized weights'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**table_name_to_quantized_weights**（*字典**[**str**,* *元组**[**张量**,* *张量**]**]*）-
    表到量化权重的映射'
- en: '**embedding_configs** (*List**[*[*EmbeddingBagConfig*](torchrec.modules.html#torchrec.modules.embedding_configs.EmbeddingBagConfig
    "torchrec.modules.embedding_configs.EmbeddingBagConfig")*]*) – list of embedding
    tables'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**embedding_configs**（*列表**[*[*EmbeddingBagConfig*](torchrec.modules.html#torchrec.modules.embedding_configs.EmbeddingBagConfig
    "torchrec.modules.embedding_configs.EmbeddingBagConfig")*]*）- 嵌入表的列表'
- en: '**is_weighted** – (bool): whether input KeyedJaggedTensor is weighted'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**is_weighted** - (布尔值)：输入的KeyedJaggedTensor是否加权'
- en: '**device** – (Optional[torch.device]): default compute device'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设备** - （可选[torch.device]）：默认计算设备'
- en: 'Call Args:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 调用参数：
- en: 'features: KeyedJaggedTensor,'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 特征：KeyedJaggedTensor，
- en: 'Returns:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: KeyedTensor
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: KeyedTensor
- en: 'Example:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Parameters:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) – KJT of form [F X B X L].'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**特征**（[*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor"））- 形式为 [F X B X L] 的 KJT。'
- en: 'Returns:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: KeyedTensor
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: KeyedTensor
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Bases: [`EmbeddingCollectionInterface`](torchrec.modules.html#torchrec.modules.embedding_modules.EmbeddingCollectionInterface
    "torchrec.modules.embedding_modules.EmbeddingCollectionInterface"), `ModuleNoCopyMixin`'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 基础：[`EmbeddingCollectionInterface`](torchrec.modules.html#torchrec.modules.embedding_modules.EmbeddingCollectionInterface
    "torchrec.modules.embedding_modules.EmbeddingCollectionInterface"), `ModuleNoCopyMixin`
- en: EmbeddingCollection represents a collection of non-pooled embeddings.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: EmbeddingCollection表示非池化嵌入的集合。
- en: 'It processes sparse data in the form of KeyedJaggedTensor of the form [F X
    B X L] where:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 它处理形式为 [F X B X L] 的KeyedJaggedTensor的稀疏数据，其中：
- en: 'F: features (keys)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'F: 特征（键）'
- en: 'B: batch size'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'B: 批量大小'
- en: 'L: length of sparse features (variable)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'L: 稀疏特征的长度（可变）'
- en: 'and outputs Dict[feature (key), JaggedTensor]. Each JaggedTensor contains values
    of the form (B * L) X D where:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 并输出Dict[特征（键），JaggedTensor]。每个JaggedTensor包含形式为 (B * L) X D 的值，其中：
- en: 'B: batch size'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'B: 批量大小'
- en: 'L: length of sparse features (jagged)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'L: 稀疏特征的长度（不规则）'
- en: 'D: each feature’s (key’s) embedding dimension and lengths are of the form L'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'D: 每个特征（键）的嵌入维度和长度的形式为 L'
- en: 'Parameters:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**tables** (*List**[*[*EmbeddingConfig*](torchrec.modules.html#torchrec.modules.embedding_configs.EmbeddingConfig
    "torchrec.modules.embedding_configs.EmbeddingConfig")*]*) – list of embedding
    tables.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**tables**（*列表**[*[*EmbeddingConfig*](torchrec.modules.html#torchrec.modules.embedding_configs.EmbeddingConfig
    "torchrec.modules.embedding_configs.EmbeddingConfig")*]*）- 嵌入表的列表。'
- en: '**device** (*Optional**[**torch.device**]*) – default compute device.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设备**（*可选**[**torch.device**]*）- 默认计算设备。'
- en: '**need_indices** (*bool*) – if we need to pass indices to the final lookup
    result dict'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**need_indices**（*布尔值*）- 如果我们需要将索引传递给最终查找结果字典'
- en: 'Example:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE11]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Parameters:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) – KJT of form [F X B X L].'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**特征**（[*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor"））- 形式为 [F X B X L] 的 KJT。'
- en: 'Returns:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Dict[str, JaggedTensor]
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Dict[str, JaggedTensor]
- en: '[PRE17]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Bases: [`EmbeddingBagCollection`](#torchrec.quant.embedding_modules.EmbeddingBagCollection
    "torchrec.quant.embedding_modules.EmbeddingBagCollection")'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 基础：[`EmbeddingBagCollection`](#torchrec.quant.embedding_modules.EmbeddingBagCollection
    "torchrec.quant.embedding_modules.EmbeddingBagCollection")
- en: '[PRE22]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Parameters:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) – KJT of form [F X B X L].'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**特征**（[*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor"））- 形式为 [F X B X L] 的 KJT。'
- en: 'Returns:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: KeyedTensor
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: KeyedTensor
- en: '[PRE24]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]  ## Module contents[](#module-0 "Permalink to this heading")'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE33]  ## 模块内容[](#module-0 "Permalink to this heading")'
- en: Torchrec Quantization
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Torchrec量化
- en: Torchrec provides a quantized version of EmbeddingBagCollection for inference.
    It relies on fbgemm quantized ops. This reduces the size of the model weights
    and speeds up model execution.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Torchrec为推断提供了EmbeddingBagCollection的量化版本。它依赖于fbgemm量化操作。这减少了模型权重的大小并加快了模型执行速度。
- en: Example
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE34]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'

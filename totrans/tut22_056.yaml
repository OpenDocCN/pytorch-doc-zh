- en: Introduction to ONNX
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/tutorials/beginner/onnx/intro_onnx.html](https://pytorch.org/tutorials/beginner/onnx/intro_onnx.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Click [here](#sphx-glr-download-beginner-onnx-intro-onnx-py) to download the
    full example code
  prefs: []
  type: TYPE_NORMAL
- en: '**Introduction to ONNX** || [Exporting a PyTorch model to ONNX](export_simple_model_to_onnx_tutorial.html)
    || [Extending the ONNX Registry](onnx_registry_tutorial.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Authors: [Thiago Crepaldi](https://github.com/thiagocrepaldi),'
  prefs: []
  type: TYPE_NORMAL
- en: '[Open Neural Network eXchange (ONNX)](https://onnx.ai/) is an open standard
    format for representing machine learning models. The `torch.onnx` module provides
    APIs to capture the computation graph from a native PyTorch [`torch.nn.Module`](https://pytorch.org/docs/stable/generated/torch.nn.Module.html#torch.nn.Module
    "(in PyTorch v2.2)") model and convert it into an [ONNX graph](https://github.com/onnx/onnx/blob/main/docs/IR.md).'
  prefs: []
  type: TYPE_NORMAL
- en: The exported model can be consumed by any of the many [runtimes that support
    ONNX](https://onnx.ai/supported-tools.html#deployModel), including Microsoft’s
    [ONNX Runtime](https://www.onnxruntime.ai).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Currently, there are two flavors of ONNX exporter APIs, but this tutorial will
    focus on the `torch.onnx.dynamo_export`.
  prefs: []
  type: TYPE_NORMAL
- en: The TorchDynamo engine is leveraged to hook into Python’s frame evaluation API
    and dynamically rewrite its bytecode into an [FX graph](https://pytorch.org/docs/stable/fx.html).
    The resulting FX Graph is polished before it is finally translated into an [ONNX
    graph](https://github.com/onnx/onnx/blob/main/docs/IR.md).
  prefs: []
  type: TYPE_NORMAL
- en: The main advantage of this approach is that the [FX graph](https://pytorch.org/docs/stable/fx.html)
    is captured using bytecode analysis that preserves the dynamic nature of the model
    instead of using traditional static tracing techniques.
  prefs: []
  type: TYPE_NORMAL
- en: Dependencies
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PyTorch 2.1.0 or newer is required.
  prefs: []
  type: TYPE_NORMAL
- en: 'The ONNX exporter depends on extra Python packages:'
  prefs: []
  type: TYPE_NORMAL
- en: '[ONNX](https://onnx.ai) standard library'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[ONNX Script](https://onnxscript.ai) library that enables developers to author
    ONNX operators, functions and models using a subset of Python in an expressive,
    and yet simple fashion.'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'They can be installed through [pip](https://pypi.org/project/pip/):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'To validate the installation, run the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Each import must succeed without any errors and the library versions must be
    printed out.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The list below refers to tutorials that ranges from basic examples to advanced
    scenarios, not necessarily in the order they are listed. Feel free to jump directly
    to specific topics of your interest or sit tight and have fun going through all
    of them to learn all there is about the ONNX exporter.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. [Exporting a PyTorch model to ONNX](export_simple_model_to_onnx_tutorial.html)2\.
    [Extending the ONNX registry](onnx_registry_tutorial.html)
  prefs: []
  type: TYPE_NORMAL
- en: '**Total running time of the script:** ( 0 minutes 0.000 seconds)'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Download Python source code: intro_onnx.py`](../../_downloads/ea6986634c1fca7a6c0eaddbfd7f799c/intro_onnx.py)'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Download Jupyter notebook: intro_onnx.ipynb`](../../_downloads/33f8140bedc02273a55c752fe79058e5/intro_onnx.ipynb)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Gallery generated by Sphinx-Gallery](https://sphinx-gallery.github.io)'
  prefs: []
  type: TYPE_NORMAL

- en: torchtext.functional¶
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/text/stable/functional.html](https://pytorch.org/text/stable/functional.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## to_tensor[¶](#to-tensor "Permalink to this heading")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Convert input to torch tensor
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**padding_value** (*Optional**[*[*int*](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")*]*) – Pad value to make each input in the batch of length
    equal to the longest sequence in the batch.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**dtype** ([`torch.dtype`](https://pytorch.org/docs/stable/tensor_attributes.html#torch.dtype
    "(in PyTorch v2.1)")) – [`torch.dtype`](https://pytorch.org/docs/stable/tensor_attributes.html#torch.dtype
    "(in PyTorch v2.1)") of output tensor'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**input** (*Union**[**List**[*[*int*](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")*]**,* *List**[**List**[*[*int*](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")*]**]**]*) – Sequence or batch of token ids'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: Tensor
  prefs: []
  type: TYPE_NORMAL
- en: 'Tutorials using `to_tensor`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![SST-2 Binary text classification with XLM-RoBERTa model](../Images/98241cb68ab73fa3d56bc87944e16fd8.png)'
  prefs: []
  type: TYPE_IMG
- en: '[SST-2 Binary text classification with XLM-RoBERTa model](tutorials/sst2_classification_non_distributed.html#sphx-glr-tutorials-sst2-classification-non-distributed-py)'
  prefs: []
  type: TYPE_NORMAL
- en: SST-2 Binary text classification with XLM-RoBERTa model
  prefs: []
  type: TYPE_NORMAL
- en: truncate[¶](#truncate "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Truncate input sequence or batch
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input** (*Union**[**List**[**Union**[*[*str*](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)")*,* [*int*](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")*]**]**,* *List**[**List**[**Union**[*[*str*](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)")*,* [*int*](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")*]**]**]**]*) – Input sequence or batch to be truncated'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**max_seq_len** ([*int*](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")) – Maximum length beyond which input is discarded'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Truncated sequence
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: Union[List[Union[[str](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)"), [int](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")]], List[List[Union[[str](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)"), [int](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")]]]]
  prefs: []
  type: TYPE_NORMAL
- en: add_token[¶](#add-token "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Add token to start or end of sequence
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input** (*Union**[**List**[**Union**[*[*str*](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)")*,* [*int*](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")*]**]**,* *List**[**List**[**Union**[*[*str*](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)")*,* [*int*](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")*]**]**]**]*) – Input sequence or batch'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**token_id** (*Union**[*[*str*](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)")*,* [*int*](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")*]*) – token to be added'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**begin** ([*bool*](https://docs.python.org/3/library/functions.html#bool "(in
    Python v3.12)")*,* *optional*) – Whether to insert token at start or end or sequence,
    defaults to True'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: sequence or batch with token_id added to begin or end or input
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: Union[List[Union[[str](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)"), [int](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")]], List[List[Union[[str](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)"), [int](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")]]]]
  prefs: []
  type: TYPE_NORMAL
- en: str_to_int[¶](#str-to-int "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Convert string tokens to integers (either single sequence or batch).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input** (*Union**[**List**[*[*str*](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)")*]**,* *List**[**List**[*[*str*](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)")*]**]**]*) – Input sequence or batch'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Sequence or batch of string tokens converted to integers
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: Union[List[[int](https://docs.python.org/3/library/functions.html#int "(in Python
    v3.12)")], List[List[[int](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")]]]
  prefs: []
  type: TYPE_NORMAL

- en: PyTorch TensorBoard Support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/tutorials/beginner/introyt/tensorboardyt_tutorial.html](https://pytorch.org/tutorials/beginner/introyt/tensorboardyt_tutorial.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Click [here](#sphx-glr-download-beginner-introyt-tensorboardyt-tutorial-py)
    to download the full example code
  prefs: []
  type: TYPE_NORMAL
- en: '[Introduction](introyt1_tutorial.html) || [Tensors](tensors_deeper_tutorial.html)
    || [Autograd](autogradyt_tutorial.html) || [Building Models](modelsyt_tutorial.html)
    || **TensorBoard Support** || [Training Models](trainingyt.html) || [Model Understanding](captumyt.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Follow along with the video below or on [youtube](https://www.youtube.com/watch?v=6CEld3hZgqc).
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.youtube.com/embed/6CEld3hZgqc](https://www.youtube.com/embed/6CEld3hZgqc)'
  prefs: []
  type: TYPE_NORMAL
- en: Before You Start
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To run this tutorial, you’ll need to install PyTorch, TorchVision, Matplotlib,
    and TensorBoard.
  prefs: []
  type: TYPE_NORMAL
- en: 'With `conda`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'With `pip`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Once the dependencies are installed, restart this notebook in the Python environment
    where you installed them.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this notebook, we’ll be training a variant of LeNet-5 against the Fashion-MNIST
    dataset. Fashion-MNIST is a set of image tiles depicting various garments, with
    ten class labels indicating the type of garment depicted.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Showing Images in TensorBoard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s start by adding sample images from our dataset to TensorBoard:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![tensorboardyt tutorial](../Images/8498a1fd8664fde87cab20edccaf4cb9.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Above, we used TorchVision and Matplotlib to create a visual grid of a minibatch
    of our input data. Below, we use the `add_image()` call on `SummaryWriter` to
    log the image for consumption by TensorBoard, and we also call `flush()` to make
    sure it’s written to disk right away.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: If you start TensorBoard at the command line and open it in a new browser tab
    (usually at [localhost:6006](localhost:6006)), you should see the image grid under
    the IMAGES tab.
  prefs: []
  type: TYPE_NORMAL
- en: Graphing Scalars to Visualize Training
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: TensorBoard is useful for tracking the progress and efficacy of your training.
    Below, we’ll run a training loop, track some metrics, and save the data for TensorBoard’s
    consumption.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s define a model to categorize our image tiles, and an optimizer and loss
    function for training:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let’s train a single epoch, and evaluate the training vs. validation set
    losses every 1000 batches:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Switch to your open TensorBoard and have a look at the SCALARS tab.
  prefs: []
  type: TYPE_NORMAL
- en: Visualizing Your Model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: TensorBoard can also be used to examine the data flow within your model. To
    do this, call the `add_graph()` method with a model and sample input. When you
    open
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: When you switch over to TensorBoard, you should see a GRAPHS tab. Double-click
    the “NET” node to see the layers and data flow within your model.
  prefs: []
  type: TYPE_NORMAL
- en: Visualizing Your Dataset with Embeddings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The 28-by-28 image tiles we’re using can be modeled as 784-dimensional vectors
    (28 * 28 = 784). It can be instructive to project this to a lower-dimensional
    representation. The `add_embedding()` method will project a set of data onto the
    three dimensions with highest variance, and display them as an interactive 3D
    chart. The `add_embedding()` method does this automatically by projecting to the
    three dimensions with highest variance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below, we’ll take a sample of our data, and generate such an embedding:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Now if you switch to TensorBoard and select the PROJECTOR tab, you should see
    a 3D representation of the projection. You can rotate and zoom the model. Examine
    it at large and small scales, and see whether you can spot patterns in the projected
    data and the clustering of labels.
  prefs: []
  type: TYPE_NORMAL
- en: 'For better visibility, it’s recommended to:'
  prefs: []
  type: TYPE_NORMAL
- en: Select “label” from the “Color by” drop-down on the left.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Toggle the Night Mode icon along the top to place the light-colored images on
    a dark background.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For more information, have a look at:'
  prefs: []
  type: TYPE_NORMAL
- en: PyTorch documentation on [torch.utils.tensorboard.SummaryWriter](https://pytorch.org/docs/stable/tensorboard.html?highlight=summarywriter)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tensorboard tutorial content in the [PyTorch.org Tutorials](https://pytorch.org/tutorials/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more information about TensorBoard, see the [TensorBoard documentation](https://www.tensorflow.org/tensorboard)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Total running time of the script:** ( 2 minutes 34.092 seconds)'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Download Python source code: tensorboardyt_tutorial.py`](../../_downloads/ba6d64f1f8bd0d6b3c21839705dc840a/tensorboardyt_tutorial.py)'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Download Jupyter notebook: tensorboardyt_tutorial.ipynb`](../../_downloads/e2e556f6b4693c2cef716dd7f40caaf6/tensorboardyt_tutorial.ipynb)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Gallery generated by Sphinx-Gallery](https://sphinx-gallery.github.io)'
  prefs: []
  type: TYPE_NORMAL

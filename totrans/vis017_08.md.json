["```py\nimport torchvision\nvideo_path = \"path to a test video\"\n# Constructor allocates memory and a threaded decoder\n# instance per video. At the moment it takes two arguments:\n# path to the video file, and a wanted stream.\nreader = torchvision.io.VideoReader(video_path, \"video\")\n\n# The information about the video can be retrieved using the\n# `get_metadata()` method. It returns a dictionary for every stream, with\n# duration and other relevant metadata (often frame rate)\nreader_md = reader.get_metadata()\n\n# metadata is structured as a dict of dicts with following structure\n# {\"stream_type\": {\"attribute\": [attribute per stream]}}\n#\n# following would print out the list of frame rates for every present video stream\nprint(reader_md[\"video\"][\"fps\"])\n\n# we explicitly select the stream we would like to operate on. In\n# the constructor we select a default video stream, but\n# in practice, we can set whichever stream we would like\nvideo.set_current_stream(\"video:0\") \n```"]
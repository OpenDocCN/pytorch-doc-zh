- en: torchaudio.prototype.functional
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pytorch.org/audio/stable/prototype.functional.html](https://pytorch.org/audio/stable/prototype.functional.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## Utility[](#utility "Permalink to this heading")'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`barkscale_fbanks`](generated/torchaudio.prototype.functional.barkscale_fbanks.html#torchaudio.prototype.functional.barkscale_fbanks
    "torchaudio.prototype.functional.barkscale_fbanks") | Create a frequency bin conversion
    matrix. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chroma_filterbank`](generated/torchaudio.prototype.functional.chroma_filterbank.html#torchaudio.prototype.functional.chroma_filterbank
    "torchaudio.prototype.functional.chroma_filterbank") | Create a frequency-to-chroma
    conversion matrix. |'
  prefs: []
  type: TYPE_TB
- en: DSP[](#dsp "Permalink to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`adsr_envelope`](generated/torchaudio.prototype.functional.adsr_envelope.html#torchaudio.prototype.functional.adsr_envelope
    "torchaudio.prototype.functional.adsr_envelope") | Generate ADSR Envelope |'
  prefs: []
  type: TYPE_TB
- en: '| [`filter_waveform`](generated/torchaudio.prototype.functional.filter_waveform.html#torchaudio.prototype.functional.filter_waveform
    "torchaudio.prototype.functional.filter_waveform") | Applies filters along time
    axis of the given waveform. |'
  prefs: []
  type: TYPE_TB
- en: '| [`extend_pitch`](generated/torchaudio.prototype.functional.extend_pitch.html#torchaudio.prototype.functional.extend_pitch
    "torchaudio.prototype.functional.extend_pitch") | Extend the given time series
    values with multipliers of them. |'
  prefs: []
  type: TYPE_TB
- en: '| [`oscillator_bank`](generated/torchaudio.prototype.functional.oscillator_bank.html#torchaudio.prototype.functional.oscillator_bank
    "torchaudio.prototype.functional.oscillator_bank") | Synthesize waveform from
    the given instantaneous frequencies and amplitudes. |'
  prefs: []
  type: TYPE_TB
- en: '| [`sinc_impulse_response`](generated/torchaudio.prototype.functional.sinc_impulse_response.html#torchaudio.prototype.functional.sinc_impulse_response
    "torchaudio.prototype.functional.sinc_impulse_response") | Create windowed-sinc
    impulse response for given cutoff frequencies. |'
  prefs: []
  type: TYPE_TB
- en: '| [`frequency_impulse_response`](generated/torchaudio.prototype.functional.frequency_impulse_response.html#torchaudio.prototype.functional.frequency_impulse_response
    "torchaudio.prototype.functional.frequency_impulse_response") | Create filter
    from desired frequency response |'
  prefs: []
  type: TYPE_TB
- en: Room Impulse Response Simulation[](#room-impulse-response-simulation "Permalink
    to this heading")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`ray_tracing`](generated/torchaudio.prototype.functional.ray_tracing.html#torchaudio.prototype.functional.ray_tracing
    "torchaudio.prototype.functional.ray_tracing") | Compute energy histogram via
    ray tracing. |'
  prefs: []
  type: TYPE_TB
- en: '| [`simulate_rir_ism`](generated/torchaudio.prototype.functional.simulate_rir_ism.html#torchaudio.prototype.functional.simulate_rir_ism
    "torchaudio.prototype.functional.simulate_rir_ism") | Compute Room Impulse Response
    (RIR) based on the *image source method* [[Allen and Berkley, 1979](references.html#id63
    "Jont B Allen and David A Berkley. Image method for efficiently simulating small-room
    acoustics. The Journal of the Acoustical Society of America, 65(4):943–950, 1979.")].
    |'
  prefs: []
  type: TYPE_TB

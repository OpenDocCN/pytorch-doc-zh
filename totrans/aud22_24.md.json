["```py\nimport torch\nimport torchaudio\nimport torchaudio.functional as F\n\nprint(torch.__version__)\nprint([torchaudio.__version__](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"))\n\nimport matplotlib.pyplot as plt \n```", "```py\n2.2.0\n2.2.0 \n```", "```py\nfrom IPython.display import Audio\n\nfrom torchaudio.utils import download_asset\n\n[SAMPLE_WAV](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\") = download_asset(\"tutorial-assets/steam-train-whistle-daniel_simon.wav\")\n[SAMPLE_RIR](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\") = download_asset(\"tutorial-assets/Lab41-SRI-VOiCES-rm1-impulse-mc01-stu-clo-8000hz.wav\")\n[SAMPLE_SPEECH](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\") = download_asset(\"tutorial-assets/Lab41-SRI-VOiCES-src-sp0307-ch127535-sg0042-8000hz.wav\")\n[SAMPLE_NOISE](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\") = download_asset(\"tutorial-assets/Lab41-SRI-VOiCES-rm1-babb-mc01-stu-clo-8000hz.wav\") \n```", "```py\n 0%|          | 0.00/427k [00:00<?, ?B/s]\n100%|##########| 427k/427k [00:00<00:00, 122MB/s]\n\n  0%|          | 0.00/31.3k [00:00<?, ?B/s]\n100%|##########| 31.3k/31.3k [00:00<00:00, 63.3MB/s]\n\n  0%|          | 0.00/78.2k [00:00<?, ?B/s]\n100%|##########| 78.2k/78.2k [00:00<00:00, 78.5MB/s] \n```", "```py\n# Load the data\n[waveform1](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = torchaudio.load([SAMPLE_WAV](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"), channels_first=False)\n\n# Define effects\n[effect](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\") = \",\".join(\n    [\n        \"lowpass=frequency=300:poles=1\",  # apply single-pole lowpass filter\n        \"atempo=0.8\",  # reduce the speed\n        \"aecho=in_gain=0.8:out_gain=0.9:delays=200:decays=0.3|delays=400:decays=0.3\"\n        # Applying echo gives some dramatic feeling\n    ],\n)\n\n# Apply effects\ndef apply_effect([waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), [effect](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\")):\n    effector = torchaudio.io.AudioEffector([effect](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\")=[effect](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"))\n    return effector.apply([waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"))\n\n[waveform2](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = apply_effect([waveform1](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), [effect](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"))\n\nprint([waveform1](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\").shape, [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"))\nprint([waveform2](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\").shape, [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\ntorch.Size([109368, 2]) 44100\ntorch.Size([144642, 2]) 44100 \n```", "```py\ndef plot_waveform([waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Waveform\", xlim=None):\n    [waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\").numpy()\n\n    num_channels, num_frames = [waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\").shape\n    time_axis = [torch.arange](https://pytorch.org/docs/stable/generated/torch.arange.html#torch.arange \"torch.arange\")(0, num_frames) / [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")\n\n    figure, axes = plt.subplots(num_channels, 1)\n    if num_channels == 1:\n        axes = [axes]\n    for c in range(num_channels):\n        axes[c].plot(time_axis, [waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[c], linewidth=1)\n        axes[c].grid(True)\n        if num_channels > 1:\n            axes[c].set_ylabel(f\"Channel {c+1}\")\n        if xlim:\n            axes[c].set_xlim(xlim)\n    figure.suptitle(title) \n```", "```py\ndef plot_specgram([waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Spectrogram\", xlim=None):\n    [waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\").numpy()\n\n    num_channels, [_](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = [waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\").shape\n\n    figure, axes = plt.subplots(num_channels, 1)\n    if num_channels == 1:\n        axes = [axes]\n    for c in range(num_channels):\n        axes[c].specgram([waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[c], Fs=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"))\n        if num_channels > 1:\n            axes[c].set_ylabel(f\"Channel {c+1}\")\n        if xlim:\n            axes[c].set_xlim(xlim)\n    figure.suptitle(title) \n```", "```py\nplot_waveform([waveform1.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Original\", xlim=(-0.1, 3.2))\nplot_specgram([waveform1.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Original\", xlim=(0, 3.04))\nAudio([waveform1.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\nplot_waveform([waveform2.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Effects Applied\", xlim=(-0.1, 3.2))\nplot_specgram([waveform2.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Effects Applied\", xlim=(0, 3.04))\nAudio([waveform2.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[rir_raw](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = torchaudio.load([SAMPLE_RIR](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"))\nplot_waveform([rir_raw](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Room Impulse Response (raw)\")\nplot_specgram([rir_raw](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Room Impulse Response (raw)\")\nAudio([rir_raw](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[rir](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [rir_raw](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[:, int([sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\") * 1.01) : int([sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\") * 1.3)]\n[rir](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [rir](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") / [torch.linalg.vector_norm](https://pytorch.org/docs/stable/generated/torch.linalg.vector_norm.html#torch.linalg.vector_norm \"torch.linalg.vector_norm\")([rir](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), ord=2)\n\nplot_waveform([rir](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Room Impulse Response\") \n```", "```py\n[speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [_](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = torchaudio.load([SAMPLE_SPEECH](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"))\n[augmented](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = F.fftconvolve([speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [rir](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")) \n```", "```py\nplot_waveform([speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Original\")\nplot_specgram([speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Original\")\nAudio([speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\nplot_waveform([augmented](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"RIR Applied\")\nplot_specgram([augmented](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"RIR Applied\")\nAudio([augmented](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [_](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = torchaudio.load([SAMPLE_SPEECH](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"))\n[noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [_](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = torchaudio.load([SAMPLE_NOISE](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"))\n[noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[:, : [speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\").shape[1]]\n\n[snr_dbs](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [torch.tensor](https://pytorch.org/docs/stable/generated/torch.tensor.html#torch.tensor \"torch.tensor\")([20, 10, 3])\n[noisy_speeches](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = F.add_noise([speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [snr_dbs](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")) \n```", "```py\nplot_waveform([noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Background noise\")\nplot_specgram([noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Background noise\")\nAudio([noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [snr_dbs](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[0], [noisy_speeches](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[0:1]\nplot_waveform([noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=f\"SNR: {[snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")} [dB]\")\nplot_specgram([noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=f\"SNR: {[snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")} [dB]\")\nAudio([noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [snr_dbs](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[1], [noisy_speeches](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[1:2]\nplot_waveform([noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=f\"SNR: {[snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")} [dB]\")\nplot_specgram([noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=f\"SNR: {[snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")} [dB]\")\nAudio([noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [snr_dbs](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[2], [noisy_speeches](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[2:3]\nplot_waveform([noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=f\"SNR: {[snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")} [dB]\")\nplot_specgram([noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=f\"SNR: {[snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")} [dB]\")\nAudio([noisy_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = torchaudio.load([SAMPLE_SPEECH](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"), channels_first=False)\n\ndef apply_codec([waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), format, encoder=None):\n    encoder = torchaudio.io.AudioEffector(format=format, encoder=encoder)\n    return encoder.apply([waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\nplot_waveform([waveform.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Original\")\nplot_specgram([waveform.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Original\")\nAudio([waveform.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[mulaw](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = apply_codec([waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), \"wav\", encoder=\"pcm_mulaw\")\nplot_waveform([mulaw.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"8 bit mu-law\")\nplot_specgram([mulaw.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"8 bit mu-law\")\nAudio([mulaw.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[g722](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = apply_codec([waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), \"g722\")\nplot_waveform([g722.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"G.722\")\nplot_specgram([g722.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"G.722\")\nAudio([g722.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[vorbis](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = apply_codec([waveform](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), \"ogg\", encoder=\"vorbis\")\nplot_waveform([vorbis.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Vorbis\")\nplot_specgram([vorbis.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Vorbis\")\nAudio([vorbis.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\n[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = 16000\n[original_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = torchaudio.load([SAMPLE_SPEECH](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"))\n\nplot_specgram([original_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Original\")\n\n# Apply RIR\n[rir_applied](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = F.fftconvolve([speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [rir](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"))\n\nplot_specgram([rir_applied](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"RIR Applied\")\n\n# Add background noise\n# Because the noise is recorded in the actual environment, we consider that\n# the noise contains the acoustic feature of the environment. Therefore, we add\n# the noise after RIR application.\n[noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [_](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = torchaudio.load([SAMPLE_NOISE](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"))\n[noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\")[:, : [rir_applied](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\").shape[1]]\n\n[snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = [torch.tensor](https://pytorch.org/docs/stable/generated/torch.tensor.html#torch.tensor \"torch.tensor\")([8])\n[bg_added](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = F.add_noise([rir_applied](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [noise](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [snr_db](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"))\n\nplot_specgram([bg_added](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"BG noise added\")\n\n# Apply filtering and change sample rate\n[effect](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\") = \",\".join(\n    [\n        \"lowpass=frequency=4000:poles=1\",\n        \"compand=attacks=0.02:decays=0.05:points=-60/-60|-30/-10|-20/-8|-5/-8|-2/-8:gain=-8:volume=-7:delay=0.05\",\n    ]\n)\n\n[filtered](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = apply_effect([bg_added.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), [effect](https://docs.python.org/3/library/stdtypes.html#str \"builtins.str\"))\n[sample_rate2](https://docs.python.org/3/library/functions.html#int \"builtins.int\") = 8000\n\nplot_specgram([filtered.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate2](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"Filtered\")\n\n# Apply telephony codec\n[codec_applied](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\") = apply_codec([filtered](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate2](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), \"g722\")\nplot_specgram([codec_applied.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), [sample_rate2](https://docs.python.org/3/library/functions.html#int \"builtins.int\"), title=\"G.722 Codec Applied\") \n```", "```py\nAudio([original_speech](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\nAudio([rir_applied](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\nAudio([bg_added](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\nAudio([filtered.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate2](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```", "```py\nAudio([codec_applied.T](https://pytorch.org/docs/stable/tensors.html#torch.Tensor \"torch.Tensor\"), rate=[sample_rate2](https://docs.python.org/3/library/functions.html#int \"builtins.int\")) \n```"]
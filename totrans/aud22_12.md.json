["```py\nsudo bash -c 'echo \"deb https://repo.download.nvidia.com/jetson/common r34.1 main\" >> /etc/apt/sources.list.d/nvidia-l4t-apt-source.list'\nsudo bash -c 'echo \"deb https://repo.download.nvidia.com/jetson/t234 r34.1 main\" >> /etc/apt/sources.list.d/nvidia-l4t-apt-source.list'\n\nsudo apt update\nsudo apt dist-upgrade\n\n# REBOOT\n\nsudo apt install nvidia-jetpack \n```", "```py\n# JetPack\n$ apt list --installed | grep nvidia-jetpack\n\nnvidia-jetpack-dev/stable,now 5.0.1-b118 arm64 [installed,automatic]\nnvidia-jetpack-runtime/stable,now 5.0.1-b118 arm64 [installed,automatic]\nnvidia-jetpack/stable,now 5.0.1-b118 arm64 [installed]\n\n# CUDA\n$ apt list --installed | grep cuda-toolkit\n\ncuda-toolkit-11-4-config-common/stable,now 11.4.243-1 all [installed,automatic]\ncuda-toolkit-11-4/stable,now 11.4.14-1 arm64 [installed,automatic]\ncuda-toolkit-11-config-common/stable,now 11.4.243-1 all [installed,automatic]\ncuda-toolkit-config-common/stable,now 11.4.243-1 all [installed,automatic]\n\n# cuDNN\n$ apt list --installed | grep cudnn\n\nlibcudnn8-dev/stable,now 8.3.2.49-1+cuda11.4 arm64 [installed,automatic]\nlibcudnn8-samples/stable,now 8.3.2.49-1+cuda11.4 arm64 [installed,automatic]\nlibcudnn8/stable,now 8.3.2.49-1+cuda11.4 arm64 [installed,automatic]\nnvidia-cudnn8-dev/stable,now 5.0.1-b118 arm64 [installed,automatic]\nnvidia-cudnn8-runtime/stable,now 5.0.1-b118 arm64 [installed,automatic] \n```", "```py\nwget https://bootstrap.pypa.io/get-pip.py\npython get-pip.py --user \n```", "```py\n$ which pip\n/home/USER/.local/bin/pip \n```", "```py\n$ package=torch-1.13.0a0+340c4120.nv22.06-cp38-cp38-linux_aarch64.whl\n$ wget \"https://developer.download.nvidia.com/compute/redist/jp/v50/pytorch/${package}\"\n$ pip install --no-cache \"${package}\" \n```", "```py\n$ python -c '\n\nimport torch\nprint(torch.__version__)\nprint(torch.cuda.is_available())\nprint(torch.empty((1, 2), device=torch.device(\"cuda\")))\n'\n1.13.0a0+410ce96a.nv22.12\nTrue\ntensor([[0., 0.]], device='cuda:0') \n```", "```py\npip install cmake ninja \n```", "```py\nsudo apt install ffmpeg libavformat-dev libavcodec-dev libavutil-dev libavdevice-dev libavfilter-dev \n```", "```py\ngit clone https://github.com/pytorch/audio\ncd audio\nUSE_CUDA=1 pip install -v -e . --no-use-pep517 \n```", "```py\nimport torchaudio\n\nprint(torchaudio.__version__)\n\ntorchaudio.utils.ffmpeg_utils.get_build_config() \n```", "```py\n2.0.0a0+2ead941\n--prefix=/usr --extra-version=0ubuntu0.1 --toolchain=hardened --libdir=/usr/lib/aarch64-linux-gnu --incdir=/usr/include/aarch64-linux-gnu --arch=arm64 --enable-gpl --disable-stripping --enable-avresample --disable-filter=resample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librsvg --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared \n```"]
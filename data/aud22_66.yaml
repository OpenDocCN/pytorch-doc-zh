- en: torchaudio.prototype.functional
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: torchaudio.prototype.functional
- en: 原文：[https://pytorch.org/audio/stable/prototype.functional.html](https://pytorch.org/audio/stable/prototype.functional.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/audio/stable/prototype.functional.html](https://pytorch.org/audio/stable/prototype.functional.html)
- en: '## Utility[](#utility "Permalink to this heading")'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 实用工具[](#utility "跳转到此标题的永久链接")'
- en: '| [`barkscale_fbanks`](generated/torchaudio.prototype.functional.barkscale_fbanks.html#torchaudio.prototype.functional.barkscale_fbanks
    "torchaudio.prototype.functional.barkscale_fbanks") | Create a frequency bin conversion
    matrix. |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| [`barkscale_fbanks`](generated/torchaudio.prototype.functional.barkscale_fbanks.html#torchaudio.prototype.functional.barkscale_fbanks
    "torchaudio.prototype.functional.barkscale_fbanks") | 创建一个频率频带转换矩阵。 |'
- en: '| [`chroma_filterbank`](generated/torchaudio.prototype.functional.chroma_filterbank.html#torchaudio.prototype.functional.chroma_filterbank
    "torchaudio.prototype.functional.chroma_filterbank") | Create a frequency-to-chroma
    conversion matrix. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`chroma_filterbank`](generated/torchaudio.prototype.functional.chroma_filterbank.html#torchaudio.prototype.functional.chroma_filterbank
    "torchaudio.prototype.functional.chroma_filterbank") | 创建一个频率到色度转换矩阵。 |'
- en: DSP[](#dsp "Permalink to this heading")
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DSP[](#dsp "跳转到此标题的永久链接")
- en: '| [`adsr_envelope`](generated/torchaudio.prototype.functional.adsr_envelope.html#torchaudio.prototype.functional.adsr_envelope
    "torchaudio.prototype.functional.adsr_envelope") | Generate ADSR Envelope |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`adsr_envelope`](generated/torchaudio.prototype.functional.adsr_envelope.html#torchaudio.prototype.functional.adsr_envelope
    "torchaudio.prototype.functional.adsr_envelope") | 生成ADSR包络 |'
- en: '| [`filter_waveform`](generated/torchaudio.prototype.functional.filter_waveform.html#torchaudio.prototype.functional.filter_waveform
    "torchaudio.prototype.functional.filter_waveform") | Applies filters along time
    axis of the given waveform. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`filter_waveform`](generated/torchaudio.prototype.functional.filter_waveform.html#torchaudio.prototype.functional.filter_waveform
    "torchaudio.prototype.functional.filter_waveform") | 在给定波形的时间轴上应用滤波器。 |'
- en: '| [`extend_pitch`](generated/torchaudio.prototype.functional.extend_pitch.html#torchaudio.prototype.functional.extend_pitch
    "torchaudio.prototype.functional.extend_pitch") | Extend the given time series
    values with multipliers of them. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`extend_pitch`](generated/torchaudio.prototype.functional.extend_pitch.html#torchaudio.prototype.functional.extend_pitch
    "torchaudio.prototype.functional.extend_pitch") | 用它们的倍数扩展给定的时间序列值。 |'
- en: '| [`oscillator_bank`](generated/torchaudio.prototype.functional.oscillator_bank.html#torchaudio.prototype.functional.oscillator_bank
    "torchaudio.prototype.functional.oscillator_bank") | Synthesize waveform from
    the given instantaneous frequencies and amplitudes. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`oscillator_bank`](generated/torchaudio.prototype.functional.oscillator_bank.html#torchaudio.prototype.functional.oscillator_bank
    "torchaudio.prototype.functional.oscillator_bank") | 从给定的瞬时频率和振幅合成波形。 |'
- en: '| [`sinc_impulse_response`](generated/torchaudio.prototype.functional.sinc_impulse_response.html#torchaudio.prototype.functional.sinc_impulse_response
    "torchaudio.prototype.functional.sinc_impulse_response") | Create windowed-sinc
    impulse response for given cutoff frequencies. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`sinc_impulse_response`](generated/torchaudio.prototype.functional.sinc_impulse_response.html#torchaudio.prototype.functional.sinc_impulse_response
    "torchaudio.prototype.functional.sinc_impulse_response") | 为给定的截止频率创建窗口化sinc脉冲响应。
    |'
- en: '| [`frequency_impulse_response`](generated/torchaudio.prototype.functional.frequency_impulse_response.html#torchaudio.prototype.functional.frequency_impulse_response
    "torchaudio.prototype.functional.frequency_impulse_response") | Create filter
    from desired frequency response |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`frequency_impulse_response`](generated/torchaudio.prototype.functional.frequency_impulse_response.html#torchaudio.prototype.functional.frequency_impulse_response
    "torchaudio.prototype.functional.frequency_impulse_response") | 从所需的频率响应创建滤波器
    |'
- en: Room Impulse Response Simulation[](#room-impulse-response-simulation "Permalink
    to this heading")
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 房间脉冲响应模拟[](#room-impulse-response-simulation "跳转到此标题的永久链接")
- en: '| [`ray_tracing`](generated/torchaudio.prototype.functional.ray_tracing.html#torchaudio.prototype.functional.ray_tracing
    "torchaudio.prototype.functional.ray_tracing") | Compute energy histogram via
    ray tracing. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`ray_tracing`](generated/torchaudio.prototype.functional.ray_tracing.html#torchaudio.prototype.functional.ray_tracing
    "torchaudio.prototype.functional.ray_tracing") | 通过光线追踪计算能量直方图。 |'
- en: '| [`simulate_rir_ism`](generated/torchaudio.prototype.functional.simulate_rir_ism.html#torchaudio.prototype.functional.simulate_rir_ism
    "torchaudio.prototype.functional.simulate_rir_ism") | Compute Room Impulse Response
    (RIR) based on the *image source method* [[Allen and Berkley, 1979](references.html#id63
    "Jont B Allen and David A Berkley. Image method for efficiently simulating small-room
    acoustics. The Journal of the Acoustical Society of America, 65(4):943–950, 1979.")].
    |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`simulate_rir_ism`](generated/torchaudio.prototype.functional.simulate_rir_ism.html#torchaudio.prototype.functional.simulate_rir_ism
    "torchaudio.prototype.functional.simulate_rir_ism") | 基于*图像源方法*[[Allen and Berkley,
    1979](references.html#id63 "Jont B Allen and David A Berkley. Image method for
    efficiently simulating small-room acoustics. The Journal of the Acoustical Society
    of America, 65(4):943–950, 1979.")]计算房间脉冲响应（RIR）。 |'

- en: torch.Storage
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: torch.Storage
- en: 原文：[https://pytorch.org/docs/stable/storage.html](https://pytorch.org/docs/stable/storage.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/docs/stable/storage.html](https://pytorch.org/docs/stable/storage.html)
- en: '`torch.Storage` is an alias for the storage class that corresponds with the
    default data type ([`torch.get_default_dtype()`](generated/torch.get_default_dtype.html#torch.get_default_dtype
    "torch.get_default_dtype")). For instance, if the default data type is `torch.float`,
    `torch.Storage` resolves to [`torch.FloatStorage`](#torch.FloatStorage "torch.FloatStorage").'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.Storage` 是与默认数据类型对应的存储类的别名（[`torch.get_default_dtype()`](generated/torch.get_default_dtype.html#torch.get_default_dtype
    "torch.get_default_dtype")）。例如，如果默认数据类型是 `torch.float`，`torch.Storage` 解析为 [`torch.FloatStorage`](#torch.FloatStorage
    "torch.FloatStorage")。'
- en: The `torch.<type>Storage` and `torch.cuda.<type>Storage` classes, like [`torch.FloatStorage`](#torch.FloatStorage
    "torch.FloatStorage"), [`torch.IntStorage`](#torch.IntStorage "torch.IntStorage"),
    etc., are not actually ever instantiated. Calling their constructors creates a
    [`torch.TypedStorage`](#torch.TypedStorage "torch.TypedStorage") with the appropriate
    [`torch.dtype`](tensor_attributes.html#torch.dtype "torch.dtype") and [`torch.device`](tensor_attributes.html#torch.device
    "torch.device"). `torch.<type>Storage` classes have all of the same class methods
    that [`torch.TypedStorage`](#torch.TypedStorage "torch.TypedStorage") has.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.<type>Storage` 和 `torch.cuda.<type>Storage` 类，如 [`torch.FloatStorage`](#torch.FloatStorage
    "torch.FloatStorage")、[`torch.IntStorage`](#torch.IntStorage "torch.IntStorage")
    等，实际上从未被实例化。调用它们的构造函数会创建一个具有适当 [`torch.dtype`](tensor_attributes.html#torch.dtype
    "torch.dtype") 和 [`torch.device`](tensor_attributes.html#torch.device "torch.device")
    的 [`torch.TypedStorage`](#torch.TypedStorage "torch.TypedStorage")。`torch.<type>Storage`
    类具有与 [`torch.TypedStorage`](#torch.TypedStorage "torch.TypedStorage") 相同的所有类方法。'
- en: A [`torch.TypedStorage`](#torch.TypedStorage "torch.TypedStorage") is a contiguous,
    one-dimensional array of elements of a particular [`torch.dtype`](tensor_attributes.html#torch.dtype
    "torch.dtype"). It can be given any [`torch.dtype`](tensor_attributes.html#torch.dtype
    "torch.dtype"), and the internal data will be interpreted appropriately. [`torch.TypedStorage`](#torch.TypedStorage
    "torch.TypedStorage") contains a [`torch.UntypedStorage`](#torch.UntypedStorage
    "torch.UntypedStorage") which holds the data as an untyped array of bytes.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`torch.TypedStorage`](#torch.TypedStorage "torch.TypedStorage") 是一个连续的、一维的特定
    [`torch.dtype`](tensor_attributes.html#torch.dtype "torch.dtype") 元素数组。它可以给定任何
    [`torch.dtype`](tensor_attributes.html#torch.dtype "torch.dtype")，内部数据将被适当解释。[`torch.TypedStorage`](#torch.TypedStorage
    "torch.TypedStorage") 包含一个 [`torch.UntypedStorage`](#torch.UntypedStorage "torch.UntypedStorage")，它将数据保存为字节的无类型数组。'
- en: Every strided [`torch.Tensor`](tensors.html#torch.Tensor "torch.Tensor") contains
    a [`torch.TypedStorage`](#torch.TypedStorage "torch.TypedStorage"), which stores
    all of the data that the [`torch.Tensor`](tensors.html#torch.Tensor "torch.Tensor")
    views.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 每个分步的 [`torch.Tensor`](tensors.html#torch.Tensor "torch.Tensor") 包含一个 [`torch.TypedStorage`](#torch.TypedStorage
    "torch.TypedStorage")，它存储了 [`torch.Tensor`](tensors.html#torch.Tensor "torch.Tensor")
    视图的所有数据。
- en: Warning
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: All storage classes except for [`torch.UntypedStorage`](#torch.UntypedStorage
    "torch.UntypedStorage") will be removed in the future, and [`torch.UntypedStorage`](#torch.UntypedStorage
    "torch.UntypedStorage") will be used in all cases.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 [`torch.UntypedStorage`](#torch.UntypedStorage "torch.UntypedStorage") 外，所有存储类将来将被移除，而
    [`torch.UntypedStorage`](#torch.UntypedStorage "torch.UntypedStorage") 将在所有情况下使用。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Casts this storage to bfloat16 type.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为 bfloat16 类型。
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Casts this storage to bool type.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为布尔类型。
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Casts this storage to byte type.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为字节类型。
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Casts this storage to char type.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为字符类型。
- en: '[PRE5]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Return a copy of this storage.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此存储的副本。
- en: '[PRE6]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Casts this storage to complex double type.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为复数双精度类型。
- en: '[PRE7]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Casts this storage to complex float type.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为复数浮点类型。
- en: '[PRE8]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Return a CPU copy of this storage if it’s not already on the CPU.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尚未在 CPU 上，则返回此存储的 CPU 副本。
- en: '[PRE10]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Returns a copy of this object in CUDA memory.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此对象在 CUDA 内存中的副本。
- en: If this object is already in CUDA memory and on the correct device, then no
    copy is performed and the original object is returned.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此对象已经在 CUDA 内存中且在正确的设备上，则不执行复制并返回原始对象。
- en: Parameters
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**device** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")) – The destination GPU id. Defaults to the current device.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**device** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")) – 目标 GPU id。默认为当前设备。'
- en: '**non_blocking** ([*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")) – If `True` and the source is in pinned memory, the copy
    will be asynchronous with respect to the host. Otherwise, the argument has no
    effect.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**non_blocking** ([*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")) – 如果为 `True` 并且源位于固定内存中，则复制将与主机异步进行。否则，参数不起作用。'
- en: '****kwargs** – For compatibility, may contain the key `async` in place of the
    `non_blocking` argument.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****kwargs** – 为了兼容性，可能包含 `async` 键代替 `non_blocking` 参数。'
- en: Return type
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型
- en: '*T*'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*T*'
- en: '[PRE11]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Casts this storage to double type.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为双精度类型。
- en: '[PRE14]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Returns the file name associated with this storage if the storage was memory
    mapped from a file. or `None` if the storage was not created by memory mapping
    a file.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存储是从文件内存映射而来，则返回与此存储关联的文件名。如果存储不是通过内存映射文件创建的，则返回 `None`。
- en: '[PRE17]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Casts this storage to float type.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为浮点类型。
- en: '[PRE19]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Casts this storage to float8_e4m3fn type
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为 float8_e4m3fn 类型
- en: '[PRE20]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Casts this storage to float8_e5m2 type
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为 float8_e5m2 类型
- en: '[PRE21]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Creates a CPU storage backed by a memory-mapped file.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 创建由内存映射文件支持的 CPU 存储。
- en: If `shared` is `True`, then memory is shared between all processes. All changes
    are written to the file. If `shared` is `False`, then the changes on the storage
    do not affect the file.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `shared` 是 `True`，则内存在所有进程之间共享。所有更改都将写入文件。如果 `shared` 是 `False`，则对存储的更改不会影响文件。
- en: '`size` is the number of elements in the storage. If `shared` is `False`, then
    the file must contain at least `size * sizeof(Type)` bytes (`Type` is the type
    of storage). If `shared` is `True` the file will be created if needed.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`size` 是存储中元素的数量。如果 `shared` 是 `False`，那么文件必须至少包含 `size * sizeof(Type)` 字节（`Type`
    是存储的类型）。如果 `shared` 是 `True`，则文件将在需要时创建。'
- en: Parameters
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**filename** ([*str*](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)")) – file name to map'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**filename**（[*str*](https://docs.python.org/3/library/stdtypes.html#str)）-
    要映射的文件名'
- en: '**shared** ([*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")) – whether to share memory (whether `MAP_SHARED` or `MAP_PRIVATE`
    is passed to the underlying [mmap(2) call](https://man7.org/linux/man-pages/man2/mmap.2.html))'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**shared**（[*bool*](https://docs.python.org/3/library/functions.html#bool)）-
    是否共享内存（是否传递`MAP_SHARED`或`MAP_PRIVATE`到底层的[mmap(2)调用](https://man7.org/linux/man-pages/man2/mmap.2.html)）'
- en: '**size** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")) – number of elements in the storage'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**size**（[*int*](https://docs.python.org/3/library/functions.html#int)）- 存储中的元素数'
- en: '[PRE23]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Return type
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型
- en: '[int](https://docs.python.org/3/library/functions.html#int "(in Python v3.12)")'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[*int*](https://docs.python.org/3/library/functions.html#int)'
- en: '[PRE24]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Casts this storage to half type.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为半精度类型。
- en: '[PRE25]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Returns a copy of this object in HPU memory.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在HPU内存中返回此对象的副本。
- en: If this object is already in HPU memory and on the correct device, then no copy
    is performed and the original object is returned.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此对象已经在HPU内存中且在正确的设备上，则不执行复制操作，并返回原始对象。
- en: Parameters
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**device** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")) – The destination HPU id. Defaults to the current device.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**device**（[*int*](https://docs.python.org/3/library/functions.html#int)）-
    目标HPU id。默认为当前设备。'
- en: '**non_blocking** ([*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")) – If `True` and the source is in pinned memory, the copy
    will be asynchronous with respect to the host. Otherwise, the argument has no
    effect.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**non_blocking**（[*bool*](https://docs.python.org/3/library/functions.html#bool)）-
    如果为`True`且源在固定内存中，则复制将与主机异步进行。否则，参数无效。'
- en: '****kwargs** – For compatibility, may contain the key `async` in place of the
    `non_blocking` argument.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****kwargs** - 为了兼容性，可能包含`async`键代替`non_blocking`参数。'
- en: Return type
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型
- en: '*T*'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '*T*'
- en: '[PRE26]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Casts this storage to int type.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为整型。
- en: '[PRE27]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Determine whether the CPU TypedStorage is already pinned on device.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 确定CPU TypedStorage是否已经固定在设备上。
- en: Parameters
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**device** ([*str*](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)") *or* [*torch.device*](tensor_attributes.html#torch.device "torch.device"))
    – The device to pin memory on. Default: `''cuda''`'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**device**（[*str*](https://docs.python.org/3/library/stdtypes.html#str) *或*
    [*torch.device*](tensor_attributes.html#torch.device)）- 要在其上固定内存的设备。默认：`''cuda''`'
- en: Returns
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: A boolean variable.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 一个布尔变量。
- en: '[PRE30]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Casts this storage to long type.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为长整型。
- en: '[PRE33]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Copy the CPU TypedStorage to pinned memory, if it’s not already pinned.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 将CPU TypedStorage复制到固定内存，如果尚未固定。
- en: Parameters
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**device** ([*str*](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)") *or* [*torch.device*](tensor_attributes.html#torch.device "torch.device"))
    – The device to pin memory on. Default: `''cuda''`.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**device**（[*str*](https://docs.python.org/3/library/stdtypes.html#str) *或*
    [*torch.device*](tensor_attributes.html#torch.device)）- 要在其上固定内存的设备。默认：`''cuda''`。'
- en: Returns
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: A pinned CPU storage.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 固定的CPU存储。
- en: '[PRE36]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: See [`torch.UntypedStorage.share_memory_()`](#torch.UntypedStorage.share_memory_
    "torch.UntypedStorage.share_memory_")
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 参见[`torch.UntypedStorage.share_memory_()`](#torch.UntypedStorage.share_memory_)。
- en: '[PRE38]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Casts this storage to short type.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为短整型。
- en: '[PRE39]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Return a list containing the elements of this storage.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 返回包含此存储元素的列表。
- en: '[PRE41]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Returns the type if dtype is not provided, else casts this object to the specified
    type.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未提供dtype，则返回类型，否则将此对象转换为指定类型。
- en: If this is already of the correct type, no copy is performed and the original
    object is returned.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果已经是正确类型，则不执行复制操作，并返回原始对象。
- en: Parameters
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**dtype** ([*type*](https://docs.python.org/3/library/functions.html#type "(in
    Python v3.12)") *or* *string*) – The desired type'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**dtype**（[*type*](https://docs.python.org/3/library/functions.html#type) *或*
    *string*）- 所需类型'
- en: '**non_blocking** ([*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")) – If `True`, and the source is in pinned memory and destination
    is on the GPU or vice versa, the copy is performed asynchronously with respect
    to the host. Otherwise, the argument has no effect.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**non_blocking**（[*bool*](https://docs.python.org/3/library/functions.html#bool)）-
    如果为`True`，且源在固定内存中且目的地在GPU上或反之，则复制将与主机异步进行。否则，参数无效。'
- en: '****kwargs** – For compatibility, may contain the key `async` in place of the
    `non_blocking` argument. The `async` arg is deprecated.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****kwargs** - 为了兼容性，可能包含`async`键代替`non_blocking`参数。`async`参数已被弃用。'
- en: Return type
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型
- en: '[*Union*](https://docs.python.org/3/library/typing.html#typing.Union "(in Python
    v3.12)")[*T*, [str](https://docs.python.org/3/library/stdtypes.html#str "(in Python
    v3.12)")]'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Union*](https://docs.python.org/3/library/typing.html#typing.Union)[*T*,
    [*str*](https://docs.python.org/3/library/stdtypes.html#str)]'
- en: '[PRE42]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Return the internal [`torch.UntypedStorage`](#torch.UntypedStorage "torch.UntypedStorage").
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 返回内部[`torch.UntypedStorage`](#torch.UntypedStorage)。
- en: '[PRE43]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Casts this storage to bfloat16 type.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为bfloat16类型。
- en: '[PRE45]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Casts this storage to bool type.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为布尔类型。
- en: '[PRE46]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Casts this storage to byte type.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为字节类型。
- en: '[PRE47]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Swap bytes in underlying data.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 交换底层数据中的字节。
- en: '[PRE48]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Casts this storage to char type.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为字符类型。
- en: '[PRE49]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Return a copy of this storage.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 返回此存储的副本。
- en: '[PRE50]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Casts this storage to complex double type.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为复数双精度类型。
- en: '[PRE51]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Casts this storage to complex float type.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为复数浮点类型。
- en: '[PRE52]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Return a CPU copy of this storage if it’s not already on the CPU.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尚未在CPU上，则返回此存储的CPU副本。
- en: '[PRE54]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Returns a copy of this object in CUDA memory.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在CUDA内存中返回此对象的副本。
- en: If this object is already in CUDA memory and on the correct device, then no
    copy is performed and the original object is returned.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此对象已经在CUDA内存中且在正确的设备上，则不执行复制操作，并返回原始对象。
- en: Parameters
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**device** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")) – The destination GPU id. Defaults to the current device.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**device**（[*int*](https://docs.python.org/3/library/functions.html#int)）-
    目标GPU id。默认为当前设备。'
- en: '**non_blocking** ([*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")) – If `True` and the source is in pinned memory, the copy
    will be asynchronous with respect to the host. Otherwise, the argument has no
    effect.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**non_blocking**（[*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")） - 如果为`True`且源位于固定内存中，则复制将与主机异步进行。否则，该参数不起作用。'
- en: '****kwargs** – For compatibility, may contain the key `async` in place of the
    `non_blocking` argument.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****kwargs** - 为了兼容性，可能包含“async”键，而不是“non_blocking”参数。'
- en: '[PRE55]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Casts this storage to double type.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为double类型。
- en: '[PRE58]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Returns the file name associated with this storage if the storage was memory
    mapped from a file. or `None` if the storage was not created by memory mapping
    a file.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存储是从文件内存映射而来，则返回与此存储关联的文件名。如果存储不是通过内存映射文件创建的，则返回`None`。
- en: '[PRE60]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Casts this storage to float type.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为float类型。
- en: '[PRE62]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Casts this storage to float8_e4m3fn type
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为float8_e4m3fn类型
- en: '[PRE63]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Casts this storage to float8_e5m2 type
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为float8_e5m2类型
- en: '[PRE64]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Creates a CPU storage backed by a memory-mapped file.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 创建由内存映射文件支持的CPU存储。
- en: If `shared` is `True`, then memory is shared between all processes. All changes
    are written to the file. If `shared` is `False`, then the changes on the storage
    do not affect the file.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果“shared”为“True”，则内存在所有进程之间共享。所有更改都将写入文件。如果“shared”为“False”，则存储上的更改不会影响文件。
- en: '`size` is the number of elements in the storage. If `shared` is `False`, then
    the file must contain at least `size * sizeof(Type)` bytes (`Type` is the type
    of storage, in the case of an `UnTypedStorage` the file must contain at least
    `size` bytes). If `shared` is `True` the file will be created if needed.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: “size”是存储中的元素数量。如果“shared”为“False”，则文件必须至少包含“size * sizeof(Type)”字节（“Type”是存储类型，在“UnTypedStorage”情况下，文件必须至少包含“size”字节）。如果“shared”为“True”，则将根据需要创建文件。
- en: Parameters
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**filename** ([*str*](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)")) – file name to map'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**filename**（[*str*](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)")） - 要映射的文件名'
- en: '**shared** ([*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")) –'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**shared**（[*bool*](https://docs.python.org/3/library/functions.html#bool "(in
    Python v3.12)")） -'
- en: whether to share memory (whether `MAP_SHARED` or `MAP_PRIVATE` is passed to
    the underlying [mmap(2) call](https://man7.org/linux/man-pages/man2/mmap.2.html))
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 是否共享内存（是否将“MAP_SHARED”或“MAP_PRIVATE”传递给底层的[mmap(2)调用](https://man7.org/linux/man-pages/man2/mmap.2.html)）
- en: '**size** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")) – number of elements in the storage'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**size**（[*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")） - 存储中的元素数量'
- en: '[PRE66]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Return type
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型
- en: '[int](https://docs.python.org/3/library/functions.html#int "(in Python v3.12)")'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[*int*](https://docs.python.org/3/library/functions.html#int "(in Python v3.12)")'
- en: '[PRE67]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Casts this storage to half type.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为half类型。
- en: '[PRE68]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Returns a copy of this object in HPU memory.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在HPU内存中返回此对象的副本。
- en: If this object is already in HPU memory and on the correct device, then no copy
    is performed and the original object is returned.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此对象已经在HPU内存中且在正确的设备上，则不执行复制，并返回原始对象。
- en: Parameters
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**device** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")) – The destination HPU id. Defaults to the current device.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**device**（[*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")） - 目标HPU id。默认为当前设备。'
- en: '**non_blocking** ([*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")) – If `True` and the source is in pinned memory, the copy
    will be asynchronous with respect to the host. Otherwise, the argument has no
    effect.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**non_blocking**（[*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")） - 如果为`True`且源位于固定内存中，则复制将与主机异步进行。否则，该参数不起作用。'
- en: '****kwargs** – For compatibility, may contain the key `async` in place of the
    `non_blocking` argument.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****kwargs** - 为了兼容性，可能包含“async”键，而不是“non_blocking”参数。'
- en: '[PRE69]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Casts this storage to int type.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为int类型。
- en: '[PRE70]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Determine whether the CPU storage is already pinned on device.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 确定CPU存储是否已固定在设备上。
- en: Parameters
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**device** ([*str*](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)") *or* [*torch.device*](tensor_attributes.html#torch.device "torch.device"))
    – The device to pin memory on. Default: `''cuda''`.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '**device**（[*str*](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)") *或* [*torch.device*](tensor_attributes.html#torch.device "torch.device")）
    - 要固定内存的设备。默认值：`''cuda''`。'
- en: Returns
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: A boolean variable.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 一个布尔变量。
- en: '[PRE73]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Casts this storage to long type.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为long类型。
- en: '[PRE77]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Return a MPS copy of this storage if it’s not already on the MPS.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尚未在MPS上，则返回此存储的MPS副本。
- en: '[PRE78]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Copy the CPU storage to pinned memory, if it’s not already pinned.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 将CPU存储复制到固定内存，如果尚未固定。
- en: Parameters
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**device** ([*str*](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)") *or* [*torch.device*](tensor_attributes.html#torch.device "torch.device"))
    – The device to pin memory on. Default: `''cuda''`.'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '**device**（[*str*](https://docs.python.org/3/library/stdtypes.html#str "(in
    Python v3.12)") *或* [*torch.device*](tensor_attributes.html#torch.device "torch.device")）
    - 要固定内存的设备。默认值：`''cuda''`。'
- en: Returns
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: A pinned CPU storage.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 一个固定的CPU存储。
- en: '[PRE81]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Moves the storage to shared memory.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 将存储移动到共享内存。
- en: This is a no-op for storages already in shared memory and for CUDA storages,
    which do not need to be moved for sharing across processes. Storages in shared
    memory cannot be resized.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 对于已经在共享内存中的存储和不需要移动以在进程间共享的CUDA存储，这是一个无操作。共享内存中的存储无法调整大小。
- en: Note that to mitigate issues like [this](https://github.com/pytorch/pytorch/issues/95606)
    it is thread safe to call this function from multiple threads on the same object.
    It is NOT thread safe though to call any other function on self without proper
    synchronization. Please see [Multiprocessing best practices](notes/multiprocessing.html)
    for more details.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，为了缓解诸如[此](https://github.com/pytorch/pytorch/issues/95606)等问题，可以安全地从同一对象的多个线程调用此函数。但是，在没有适当同步的情况下调用self上的任何其他函数是不安全的。有关更多详细信息，请参阅[多进程最佳实践](notes/multiprocessing.html)。
- en: Note
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When all references to a storage in shared memory are deleted, the associated
    shared memory object will also be deleted. PyTorch has a special cleanup process
    to ensure that this happens even if the current process exits unexpectedly.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 当删除共享内存中对存储的所有引用时，相关的共享内存对象也将被删除。PyTorch具有特殊的清理过程，以确保即使当前进程意外退出也会发生这种情况。
- en: It is worth noting the difference between [`share_memory_()`](#torch.UntypedStorage.share_memory_
    "torch.UntypedStorage.share_memory_") and [`from_file()`](generated/torch.from_file.html#torch.from_file
    "torch.from_file") with `shared = True`
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是[`share_memory_()`](#torch.UntypedStorage.share_memory_ "torch.UntypedStorage.share_memory_")和[`from_file()`](generated/torch.from_file.html#torch.from_file
    "torch.from_file")之间的区别，其中`shared = True`
- en: '`share_memory_` uses [shm_open(3)](https://man7.org/linux/man-pages/man3/shm_open.3.html)
    to create a POSIX shared memory object while [`from_file()`](generated/torch.from_file.html#torch.from_file
    "torch.from_file") uses [open(2)](https://man7.org/linux/man-pages/man2/open.2.html)
    to open the filename passed by the user.'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`share_memory_`使用[shm_open(3)](https://man7.org/linux/man-pages/man3/shm_open.3.html)创建POSIX共享内存对象，而[`from_file()`](generated/torch.from_file.html#torch.from_file
    "torch.from_file")使用[open(2)](https://man7.org/linux/man-pages/man2/open.2.html)打开用户传递的文件名。'
- en: Both use an [mmap(2) call](https://man7.org/linux/man-pages/man2/mmap.2.html)
    with `MAP_SHARED` to map the file/object into the current virtual address space
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两者都使用[mmap(2)调用](https://man7.org/linux/man-pages/man2/mmap.2.html)与`MAP_SHARED`将文件/对象映射到当前虚拟地址空间
- en: '`share_memory_` will call `shm_unlink(3)` on the object after mapping it to
    make sure the shared memory object is freed when no process has the object open.
    `torch.from_file(shared=True)` does not unlink the file. This file is persistent
    and will remain until it is deleted by the user.'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`share_memory_`将在将对象映射后调用`shm_unlink(3)`，以确保在没有进程打开对象时释放共享内存对象。`torch.from_file(shared=True)`不会取消链接文件。该文件是持久的，直到用户删除为止。'
- en: Returns
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`self`'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '`self`'
- en: '[PRE83]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Casts this storage to short type.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 将此存储转换为short类型。
- en: '[PRE84]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Return type
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型
- en: '[int](https://docs.python.org/3/library/functions.html#int "(in Python v3.12)")'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '[int](https://docs.python.org/3/library/functions.html#int "(in Python v3.12)")'
- en: '[PRE85]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Return a list containing the elements of this storage.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 返回包含此存储元素的列表。
- en: '[PRE86]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Returns the type if dtype is not provided, else casts this object to the specified
    type.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未提供dtype，则返回类型，否则将此对象转换为指定类型。
- en: If this is already of the correct type, no copy is performed and the original
    object is returned.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 如果已经是正确类型，则不执行复制操作，返回原始对象。
- en: Parameters
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '**dtype** ([*type*](https://docs.python.org/3/library/functions.html#type "(in
    Python v3.12)") *or* *string*) – The desired type'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**dtype**（[*type*](https://docs.python.org/3/library/functions.html#type "(in
    Python v3.12)") *或* *string*）- 所需类型'
- en: '**non_blocking** ([*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")) – If `True`, and the source is in pinned memory and destination
    is on the GPU or vice versa, the copy is performed asynchronously with respect
    to the host. Otherwise, the argument has no effect.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**non_blocking**（[*bool*](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)")）- 如果为`True`，且源位于固定内存中，目标位于GPU上或反之，则复制操作将异步执行，与主机无关。否则，该参数无效。'
- en: '****kwargs** – For compatibility, may contain the key `async` in place of the
    `non_blocking` argument. The `async` arg is deprecated.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****kwargs** - 为了兼容性，可能包含`async`键代替`non_blocking`参数。`async`参数已被弃用。'
- en: '[PRE87]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '[PRE99]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '[PRE103]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '[PRE107]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '[PRE108]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '[PRE109]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '[PRE110]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '[PRE111]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '[PRE114]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '[PRE116]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '[PRE120]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'

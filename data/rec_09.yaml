- en: torchrec.models
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: torchrec.models
- en: 原文：[https://pytorch.org/torchrec/torchrec.models.html](https://pytorch.org/torchrec/torchrec.models.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pytorch.org/torchrec/torchrec.models.html](https://pytorch.org/torchrec/torchrec.models.html)
- en: '## torchrec.models.deepfm[](#module-torchrec.models.deepfm "Permalink to this
    heading")'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## torchrec.models.deepfm[](#module-torchrec.models.deepfm "Permalink to this
    heading")'
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Bases: `Module`'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 基类：`Module`
- en: Processes the dense features of DeepFMNN model. Output layer is sized to the
    embedding_dimension of the EmbeddingBagCollection embeddings.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 处理DeepFMNN模型的密集特征。输出层大小为EmbeddingBagCollection embeddings的embedding_dimension。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**in_features** (*int*) – dimensionality of the dense input features.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**in_features** (*int*) – 密集输入特征的维度。'
- en: '**hidden_layer_size** (*int*) – sizes of the hidden layers in the DenseArch.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**hidden_layer_size** (*int*) – DenseArch中隐藏层的大小。'
- en: '**embedding_dim** (*int*) – the same size of the embedding_dimension of sparseArch.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**embedding_dim** (*int*) – 与sparseArch的embedding_dimension相同的大小。'
- en: '**device** (*torch.device*) – default compute device.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**device** (*torch.device*) – 默认计算设备。'
- en: 'Example:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Parameters:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**features** (*torch.Tensor*) – size B X num_features.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**features** (*torch.Tensor*) – 大小为 B X num_features。'
- en: 'Returns:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: an output tensor of size B X D.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 大小为 B X D 的输出张量。
- en: 'Return type:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: torch.Tensor
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: torch.Tensor
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Bases: `Module`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 基类：`Module`
- en: 'Processes the output of both SparseArch (sparse_features) and DenseArch (dense_features)
    and apply the general DeepFM interaction according to the external source of DeepFM
    paper: [https://arxiv.org/pdf/1703.04247.pdf](https://arxiv.org/pdf/1703.04247.pdf)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 处理SparseArch（sparse_features）和DenseArch（dense_features）的输出，并根据DeepFM论文的外部来源应用一般的DeepFM交互：[https://arxiv.org/pdf/1703.04247.pdf](https://arxiv.org/pdf/1703.04247.pdf)
- en: The output dimension is expected to be a cat of dense_features, D.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 预期的输出维度应为dense_features，D。
- en: 'Parameters:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**fm_in_features** (*int*) – the input dimension of dense_module in DeepFM.
    For example, if the input embeddings is [randn(3, 2, 3), randn(3, 4, 5)], then
    the fm_in_features should be: 2 * 3 + 4 * 5.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fm_in_features** (*int*) – DeepFM中dense_module的输入维度。例如，如果输入嵌入是[randn(3, 2,
    3), randn(3, 4, 5)]，则fm_in_features应为：2 * 3 + 4 * 5。'
- en: '**sparse_feature_names** (*List**[**str**]*) – length of F.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sparse_feature_names** (*List**[**str**]*) – 长度为 F。'
- en: '**deep_fm_dimension** (*int*) – output of the deep interaction (DI) in the
    DeepFM arch.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**deep_fm_dimension** (*int*) – DeepFM arch中深度交互（DI）的输出。'
- en: 'Example:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Parameters:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**dense_features** (*torch.Tensor*) – tensor of size B X D.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**dense_features** (*torch.Tensor*) – 大小为 B X D 的张量。'
- en: '**sparse_features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) – KJT of size F * D X B.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sparse_features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) – 大小为 F * D X B 的KJT。'
- en: 'Returns:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: an output tensor of size B X (D + DI + 1).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 大小为 B X (D + DI + 1) 的输出张量。
- en: 'Return type:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: torch.Tensor
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: torch.Tensor
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Bases: `Module`'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 基类：`Module`
- en: Final Arch - simple MLP. The output is just one target.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 最终Arch - 简单MLP。输出只是一个目标。
- en: 'Parameters:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**in_features** (*int*) – the output dimension of the interaction arch.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**in_features** (*int*) – 交互arch的输出维度。'
- en: 'Example:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE9]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Parameters:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**features** (*torch.Tensor*) –'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**features** (*torch.Tensor*) –'
- en: 'Returns:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: an output tensor of size B X 1.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 大小为 B X 1 的输出张量。
- en: 'Return type:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: torch.Tensor
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: torch.Tensor
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Bases: `Module`'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 基类：`Module`
- en: 'Basic recsys module with DeepFM arch. Processes sparse features by learning
    pooled embeddings for each feature. Learns the relationship between dense features
    and sparse features by projecting dense features into the same embedding space.
    Learns the interaction among those dense and sparse features by deep_fm proposed
    in this paper: [https://arxiv.org/pdf/1703.04247.pdf](https://arxiv.org/pdf/1703.04247.pdf)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 具有DeepFM arch的基本recsys模块。通过学习每个特征的池化嵌入来处理稀疏特征。通过将密集特征投影到相同的嵌入空间中，学习密集特征和稀疏特征之间的关系。通过本文提出的deep_fm学习这些密集和稀疏特征之间的交互：[https://arxiv.org/pdf/1703.04247.pdf](https://arxiv.org/pdf/1703.04247.pdf)
- en: The module assumes all sparse features have the same embedding dimension (i.e,
    each EmbeddingBagConfig uses the same embedding_dim)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块假设所有稀疏特征具有相同的嵌入维度（即，每个EmbeddingBagConfig使用相同的嵌入维度）
- en: 'The following notation is used throughout the documentation for the models:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在模型文档中始终使用以下符号：
- en: 'F: number of sparse features'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: F：稀疏特征的数量
- en: 'D: embedding_dimension of sparse features'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: D：稀疏特征的embedding_dimension
- en: 'B: batch size'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: B：批量大小
- en: 'num_features: number of dense features'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: num_features：密集特征的数量
- en: 'Parameters:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**num_dense_features** (*int*) – the number of input dense features.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**num_dense_features** (*int*) – 输入密集特征的数量。'
- en: '**embedding_bag_collection** ([*EmbeddingBagCollection*](torchrec.modules.html#torchrec.modules.embedding_modules.EmbeddingBagCollection
    "torchrec.modules.embedding_modules.EmbeddingBagCollection")) – collection of
    embedding bags used to define SparseArch.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**embedding_bag_collection** ([*EmbeddingBagCollection*](torchrec.modules.html#torchrec.modules.embedding_modules.EmbeddingBagCollection
    "torchrec.modules.embedding_modules.EmbeddingBagCollection")) – 用于定义SparseArch的嵌入袋集合。'
- en: '**hidden_layer_size** (*int*) – the hidden layer size used in dense module.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**hidden_layer_size** (*int*) – dense模块中使用的隐藏层大小。'
- en: '**deep_fm_dimension** (*int*) – the output layer size used in deep_fm’s deep
    interaction module.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**deep_fm_dimension** (*int*) – deep_fm的深度交互模块中使用的输出层大小。'
- en: 'Example:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE13]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Parameters:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**dense_features** (*torch.Tensor*) – the dense features.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**dense_features** (*torch.Tensor*) – 密集特征。'
- en: '**sparse_features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) – the sparse features.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sparse_features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) – 稀疏特征。'
- en: 'Returns:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: logits with size B X 1.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 大小为 B X 1 的logits。
- en: 'Return type:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: torch.Tensor
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: torch.Tensor
- en: '[PRE15]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Bases: `Module`'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 基类：`Module`
- en: Processes the sparse features of the DeepFMNN model. Does embedding lookups
    for all EmbeddingBag and embedding features of each collection.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 处理DeepFMNN模型的稀疏特征。为所有EmbeddingBag和每个集合的嵌入特征进行查找。
- en: 'Parameters:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**embedding_bag_collection** ([*EmbeddingBagCollection*](torchrec.modules.html#torchrec.modules.embedding_modules.EmbeddingBagCollection
    "torchrec.modules.embedding_modules.EmbeddingBagCollection")) – represents a collection
    of pooled embeddings.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**embedding_bag_collection** ([*EmbeddingBagCollection*](torchrec.modules.html#torchrec.modules.embedding_modules.EmbeddingBagCollection
    "torchrec.modules.embedding_modules.EmbeddingBagCollection")) – 表示一个池化嵌入的集合。'
- en: 'Example:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE17]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Parameters:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) –'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**features** ([*KeyedJaggedTensor*](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")) –'
- en: 'Returns:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: an output KJT of size F * D X B.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 一个大小为 F * D X B 的输出 KJT。
- en: 'Return type:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '返回类型:'
- en: '[KeyedJaggedTensor](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[KeyedJaggedTensor](torchrec.sparse.html#torchrec.sparse.jagged_tensor.KeyedJaggedTensor
    "torchrec.sparse.jagged_tensor.KeyedJaggedTensor")'
- en: '[PRE19]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: torchrec.models.dlrm[](#torchrec-models-dlrm "Permalink to this heading")
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: torchrec.models.dlrm[](#torchrec-models-dlrm "此标题的永久链接")
- en: Module contents[](#module-contents "Permalink to this heading")
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模块内容[](#module-contents "此标题的永久链接")
